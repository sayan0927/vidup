{
  "version": 3,
  "sources": ["../../node_modules/base64-js/index.js", "../../node_modules/ieee754/index.js", "../node_modules/buffer/index.js", "../../node_modules/process/browser.js", "../polyfill.mjs", "../../node_modules/events/events.js", "../../node_modules/inherits/inherits_browser.js", "../../node_modules/readable-stream/lib/internal/streams/stream-browser.js", "../../node_modules/buffer/index.js", "../../node_modules/readable-stream/lib/internal/streams/buffer_list.js", "../../node_modules/readable-stream/lib/internal/streams/destroy.js", "../../node_modules/readable-stream/errors-browser.js", "../../node_modules/readable-stream/lib/internal/streams/state.js", "../../node_modules/util-deprecate/browser.js", "../../node_modules/readable-stream/lib/_stream_writable.js", "../../node_modules/readable-stream/lib/_stream_duplex.js", "../../node_modules/safe-buffer/index.js", "../../node_modules/string_decoder/lib/string_decoder.js", "../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js", "../../node_modules/readable-stream/lib/internal/streams/async_iterator.js", "../../node_modules/readable-stream/lib/internal/streams/from-browser.js", "../../node_modules/readable-stream/lib/_stream_readable.js", "../../node_modules/readable-stream/lib/_stream_transform.js", "../../node_modules/readable-stream/lib/_stream_passthrough.js", "../../node_modules/readable-stream/lib/internal/streams/pipeline.js", "../../node_modules/stream-browserify/index.js", "../src/index.browser.ts", "../src/components/index.browser.ts", "../src/components/component.ts", "../src/components/helpers/stream-factory.ts", "../src/components/aacdepay/index.ts", "../src/utils/protocols/rtp.ts", "../src/utils/bits.ts", "../src/components/message.ts", "../src/components/messageStreams.ts", "../src/components/aacdepay/parser.ts", "../src/components/basicdepay/index.ts", "../src/components/canvas/index.ts", "../src/utils/clock.ts", "../src/utils/scheduler.ts", "../src/components/h264depay/index.ts", "../src/components/h264depay/parser.ts", "../src/components/http-source/index.ts", "../src/components/inspector/index.ts", "../src/components/jpegdepay/index.ts", "../src/components/jpegdepay/parser.ts", "../src/components/jpegdepay/headers.ts", "../src/components/jpegdepay/make-qtable.ts", "../src/utils/clamp.ts", "../src/components/mp4capture/index.ts", "../src/components/mp4muxer/index.ts", "../src/components/mp4muxer/helpers/boxbuilder.ts", "../src/components/mp4muxer/helpers/aacSettings.ts", "../src/components/mp4muxer/helpers/isom.ts", "../src/components/mp4muxer/helpers/h264Settings.ts", "../src/components/mp4muxer/helpers/spsparser.ts", "../src/components/mp4muxer/helpers/bufferreader.ts", "../src/components/mp4muxer/helpers/utils.ts", "../src/components/mse/index.ts", "../src/utils/protocols/rtcp.ts", "../src/components/onvifdepay/index.ts", "../src/components/rtsp-parser/index.ts", "../src/components/rtsp-parser/builder.ts", "../src/components/rtsp-parser/parser.ts", "../src/utils/protocols/rtsp.ts", "../src/utils/protocols/sdp.ts", "../src/components/rtsp-session/index.ts", "../src/utils/config.ts", "../src/utils/protocols/ntp.ts", "../src/components/ws-source/index.ts", "../src/components/ws-source/openwebsocket.ts", "../src/pipelines/index.browser.ts", "../src/pipelines/pipeline.ts", "../src/pipelines/rtsp-mjpeg-pipeline.ts", "../src/pipelines/rtsp-pipeline.ts", "../src/pipelines/rtsp-mp4-pipeline.ts", "../src/pipelines/html5-canvas-pipeline.ts", "../src/components/auth/index.ts", "../src/components/auth/digest.ts", "../src/components/auth/www-authenticate.ts", "../src/pipelines/html5-video-metadata-pipeline.ts", "../src/pipelines/html5-video-pipeline.ts", "../src/pipelines/metadata-pipeline.ts", "../src/pipelines/ws-sdp-pipeline.ts", "../src/pipelines/http-mse-pipeline.ts", "../src/components/http-mp4/index.ts", "../src/utils/index.browser.ts", "../src/utils/protocols/index.ts", "../src/utils/retry.ts"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n", "import { Buffer } from 'buffer'\nwindow.Buffer = Buffer\nimport * as process_browser from 'process/browser'\nwindow.process_browser = process_browser\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "module.exports = require('events').EventEmitter;\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n", "'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();", "'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};", "'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n", "'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};", "\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}", "// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;", "'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;", "module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};", "// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/lib/_stream_readable.js');\nStream.Writable = require('readable-stream/lib/_stream_writable.js');\nStream.Duplex = require('readable-stream/lib/_stream_duplex.js');\nStream.Transform = require('readable-stream/lib/_stream_transform.js');\nStream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');\nStream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')\nStream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n", "import * as components from './components/index.browser'\nimport * as pipelines from './pipelines/index.browser'\nimport * as utils from './utils/index.browser'\n\nexport { components, pipelines, utils }\n\nexport * from './components/index.browser'\nexport * from './pipelines/index.browser'\nexport * from './utils/index.browser'\n", "export * from './component'\n\nexport * from './aacdepay'\nexport * from './basicdepay'\nexport * from './canvas'\nexport * from './h264depay'\nexport * from './http-source'\nexport * from './inspector'\nexport * from './jpegdepay'\nexport * from './message'\nexport * from './messageStreams'\nexport * from './mp4capture'\nexport * from './mp4muxer'\nexport * from './mse'\nexport * from './onvifdepay'\nexport * from './rtsp-parser'\nexport * from './rtsp-session'\nexport * from './ws-source'\n", "import { Duplex, PassThrough, Readable, Stream, Writable } from 'stream'\n\nimport StreamFactory from './helpers/stream-factory'\nimport { GenericMessage, MessageHandler } from './message'\n\nexport type Component = Source | Tube | Sink\n\ntype ErrorEventHandler = (err: Error) => void\n\n/**\n * Component\n *\n * A component is a set of bi-directional streams consisting of an 'incoming'\n * and 'outgoing' stream.\n *\n * They contain references to other components so they can form a linked list of\n * components, i.e. a pipeline. When linking components, the incoming and\n * outgoing streams are piped, so that data flowing through the incoming stream\n * is transfered to the next component, and data in the outgoing stream flows\n * to the previous component.\n *\n * Components at the end of such a pipeline typically connect the incoming and\n * outgoing streams to a data source or data sink.\n *\n * Typically, for a component that is connected to two other components, both\n * incoming and outgoing will be Transform streams. For a source, 'incoming'\n * will be a Readable stream and 'outgoing' a Writable stream, while for a sink\n * it is reversed. Both source and sink could also use a single Duplex stream,\n * with incoming === outgoing.\n *\n * server end-point                          client end-point\n *  /-------------      -----------------      -------------\\\n *  |  Writable  |  <-  |   Transform   |  <-  |  Readable  |\n *  |   source   |      |      tube     |      |    sink    |\n *  |  Readable  |  ->  |   Transform   |  ->  |  Writable  |\n *  \\-------------      -----------------      -------------/\n */\nabstract class AbstractComponent {\n  /**\n   * The stream going towards the client end-point\n   */\n  public abstract incoming: Stream\n  /**\n   * The stream going back to the server end-point\n   */\n  public abstract outgoing: Stream\n  /**\n   * The next component (downstream, towards the client)\n   */\n  public abstract next: Tube | Sink | null\n  /**\n   * The previous component (upstream, towards the server)\n   */\n  public abstract prev: Tube | Source | null\n  protected _incomingErrorHandler?: ErrorEventHandler\n  protected _outgoingErrorHandler?: ErrorEventHandler\n  /**\n   * Connect a downstream component (towards the client)\n   */\n  public abstract connect(next: Tube | Sink | null): Component\n  /**\n   * Disconnect a downstream component downstream (towards the client)\n   */\n  public abstract disconnect(): Component\n}\n\n/**\n * Source component\n *\n * A component that can only have a next component connected (no previous) and\n * where the incoming and outgoing streams are connected to an external data\n * source.\n */\nexport class Source extends AbstractComponent {\n  /**\n   * Set up a source component that has a message list as data source.\n   *\n   * @param messages - List of objects (with data property) to emit on the\n   * incoming stream\n   */\n  public static fromMessages(messages: GenericMessage[]) {\n    const component = new Source(\n      StreamFactory.producer(messages),\n      StreamFactory.consumer()\n    )\n\n    return component\n  }\n\n  public incoming: Readable\n  public outgoing: Writable\n  public next: Tube | Sink | null\n  public prev: null\n\n  constructor(\n    incoming: Readable = new Readable({ objectMode: true }),\n    outgoing: Writable = new Writable({ objectMode: true })\n  ) {\n    super()\n    this.incoming = incoming\n    this.outgoing = outgoing\n    this.next = null\n    this.prev = null\n  }\n\n  /**\n   * Attach another component so the the 'down' stream flows into the\n   * next component 'down' stream and the 'up' stream of the other component\n   * flows into the 'up' stream of this component. This is what establishes the\n   * meaning of 'up' and 'down'.\n   * @param  next - The component to connect.\n   * @return A reference to the connected component.\n   *\n   *      -------------- pipe --------------\n   *  <-  |  outgoing  |  <-  |  outgoing  | <-\n   *      |    this    |      |    next    |\n   *  ->  |  incoming  |  ->  |  incoming  | ->\n   *      -------------- pipe --------------\n   */\n  public connect(next: Tube | Sink | null): Component {\n    // If the next component is not there, we want to return this component\n    // so that it is possible to continue to chain. If there is a next component,\n    // but this component already has a next one, or the next one already has a\n    // previous component, throw an error.\n    if (next === null) {\n      return this\n    } else if (this.next !== null || next.prev !== null) {\n      throw new Error('connection failed: component(s) already connected')\n    }\n\n    if (!this.incoming.readable || !this.outgoing.writable) {\n      throw new Error('connection failed: this component not compatible')\n    }\n\n    if (!next.incoming.writable || !next.outgoing.readable) {\n      throw new Error('connection failed: next component not compatible')\n    }\n\n    try {\n      this.incoming.pipe(next.incoming)\n      next.outgoing.pipe(this.outgoing)\n    } catch (e) {\n      throw new Error(`connection failed: ${(e as Error).message}`)\n    }\n\n    /**\n     * Propagate errors back upstream, this assures an error will be propagated\n     * to all previous streams (but not further than any endpoints). What happens\n     * when an error is emitted on a stream is up to the stream's implementation.\n     */\n    const incomingErrorHandler: ErrorEventHandler = (err) => {\n      this.incoming.emit('error', err)\n    }\n    next.incoming.on('error', incomingErrorHandler)\n\n    const outgoingErrorHandler: ErrorEventHandler = (err) => {\n      next.outgoing.emit('error', err)\n    }\n    this.outgoing.on('error', outgoingErrorHandler)\n\n    // Keep a bidirectional linked list of components by storing\n    // a reference to the next component and the listeners that we set up.\n    this.next = next\n    next.prev = this\n    this._incomingErrorHandler = incomingErrorHandler\n    this._outgoingErrorHandler = outgoingErrorHandler\n\n    return next\n  }\n\n  /**\n   * Disconnect the next connected component. When there is no next component\n   * the function will just do nothing.\n   * @return {Component} - A reference to this component.\n   */\n  public disconnect(): Component {\n    const next = this.next\n\n    if (next !== null) {\n      this.incoming.unpipe(next.incoming)\n      next.outgoing.unpipe(this.outgoing)\n\n      if (typeof this._incomingErrorHandler !== 'undefined') {\n        next.incoming.removeListener('error', this._incomingErrorHandler)\n      }\n      if (typeof this._outgoingErrorHandler !== 'undefined') {\n        this.outgoing.removeListener('error', this._outgoingErrorHandler)\n      }\n\n      this.next = null\n      next.prev = null\n      delete this._incomingErrorHandler\n      delete this._outgoingErrorHandler\n    }\n\n    return this\n  }\n}\n\n/**\n * Tube component\n *\n * A component where both incoming and outgoing streams are Duplex streams, and\n * can be connected to a previous and next component, typically in the middle of\n * a pipeline.\n */\nexport class Tube extends Source {\n  /**\n   * Create a component that calls a handler function for each message passing\n   * through, but otherwise just passes data through.\n   *\n   * Can be used to log messages passing through a pipeline.\n   */\n  public static fromHandlers(\n    fnIncoming: MessageHandler | undefined,\n    fnOutgoing: MessageHandler | undefined\n  ) {\n    const incomingStream = fnIncoming\n      ? StreamFactory.peeker(fnIncoming)\n      : undefined\n    const outgoingStream = fnOutgoing\n      ? StreamFactory.peeker(fnOutgoing)\n      : undefined\n\n    return new Tube(incomingStream, outgoingStream)\n  }\n\n  public incoming: Duplex\n  public outgoing: Duplex\n\n  constructor(\n    incoming: Duplex = new PassThrough({ objectMode: true }),\n    outgoing: Duplex = new PassThrough({ objectMode: true })\n  ) {\n    super(incoming, outgoing)\n    this.incoming = incoming\n    this.outgoing = outgoing\n  }\n}\n\n/**\n * Sink component\n *\n * A component that can only have a previous component connected (no next) and\n * where the incoming and outgoing streams are connected to an external data\n * source.\n */\nexport class Sink extends AbstractComponent {\n  /**\n   * Create a component that swallows incoming data (calling fn on it).  To\n   * print data, you would use fn = console.log.\n   *\n   * @param fn - The callback to use for the incoming data.\n   */\n  public static fromHandler(fn: MessageHandler) {\n    const component = new Sink(\n      StreamFactory.consumer(fn),\n      StreamFactory.producer(undefined)\n    )\n    // A sink should propagate when stream is ending.\n    component.incoming.on('finish', () => {\n      component.outgoing.push(null)\n    })\n\n    return component\n  }\n\n  public incoming: Writable\n  public outgoing: Readable\n  public next: null\n  public prev: Tube | Source | null\n\n  constructor(\n    incoming: Writable = new Writable({ objectMode: true }),\n    outgoing: Readable = new Readable({ objectMode: true })\n  ) {\n    super()\n    this.incoming = incoming\n    this.outgoing = outgoing\n    this.next = null\n    this.prev = null\n  }\n\n  public connect(): Component {\n    throw new Error('connection failed: attempting to connect after a sink')\n  }\n\n  public disconnect(): Component {\n    return this\n  }\n}\n", "import { Readable, Transform, Writable } from 'stream'\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport default class StreamFactory {\n  /**\n   * Creates a writable stream that sends all messages written to the stream\n   * to a callback function and then considers it written.\n   * @param fn  The callback to be invoked on the message\n   */\n  public static consumer(\n    fn: (msg: any) => void = () => {\n      /* */\n    }\n  ) {\n    return new Writable({\n      objectMode: true,\n      write(msg, _encoding, callback) {\n        fn(msg)\n        callback()\n      },\n    })\n  }\n\n  public static peeker(fn: (msg: any) => void) {\n    if (typeof fn !== 'function') {\n      throw new Error('you must supply a function')\n    }\n    return new Transform({\n      objectMode: true,\n      transform(msg, _encoding, callback) {\n        fn(msg)\n        callback(undefined, msg)\n      },\n    })\n  }\n\n  /**\n   * Creates a readable stream that sends a message for each element of an array.\n   * @param arr  The array with elements to be turned into a stream.\n   */\n  public static producer(messages?: any[]) {\n    let counter = 0\n    return new Readable({\n      objectMode: true,\n      read() {\n        if (messages !== undefined) {\n          if (counter < messages.length) {\n            this.push(messages[counter++])\n          } else {\n            // End the stream\n            this.push(null)\n          }\n        }\n      },\n    })\n  }\n\n  public static recorder(type: string, fileStream: NodeJS.WritableStream) {\n    return new Transform({\n      objectMode: true,\n      transform(msg, encoding, callback) {\n        const timestamp = Date.now()\n        // Replace binary data with base64 string\n        const message = Object.assign({}, msg, {\n          data: msg.data.toString('base64'),\n        })\n        fileStream.write(JSON.stringify({ type, timestamp, message }, null, 2))\n        fileStream.write(',\\n')\n        callback(undefined, msg)\n      },\n    })\n  }\n\n  /**\n   * Yield binary messages from JSON packet array until depleted.\n   * @return {Generator} Returns a JSON packet iterator.\n   */\n  public static replayer(packets: any[]) {\n    let packetCounter = 0\n    let lastTimestamp = packets[0].timestamp\n    return new Readable({\n      objectMode: true,\n      read() {\n        const packet = packets[packetCounter++]\n        if (packet) {\n          const { type, timestamp, message } = packet\n          const delay = timestamp - lastTimestamp\n          lastTimestamp = timestamp\n          if (message) {\n            const data = message.data\n              ? Buffer.from(message.data, 'base64')\n              : Buffer.alloc(0)\n            const msg = Object.assign({}, message, { data })\n            this.push({ type, delay, msg })\n          } else {\n            this.push({ type, delay, msg: null })\n          }\n        } else {\n          this.push(null)\n        }\n      },\n    })\n  }\n}\n", "import { payloadType } from '../../utils/protocols/rtp'\nimport { Tube } from '../component'\nimport { Message, MessageType } from '../message'\nimport { createTransform } from '../messageStreams'\n\nimport { parse } from './parser'\n\n/*\nmedia: [{ type: 'video',\n   port: '0',\n   proto: 'RTP/AVP',\n   fmt: '96',\n   rtpmap: '96 H264/90000',\n   fmtp: {\n      format: '96',\n      parameters: {\n        'packetization-mode': '1',\n        'profile-level-id': '4d0029',\n        'sprop-parameter-sets': 'Z00AKeKQDwBE/LgLcBAQGkHiRFQ=,aO48gA==',\n      },\n    },\n   control: 'rtsp://hostname/axis-media/media.amp/stream=0?audio=1&video=1',\n   framerate: '25.000000',\n   transform: [[1, 0, 0], [0, 0.75, 0], [0, 0, 1]] },\n   { type: 'audio',\n     port: '0',\n     proto: 'RTP/AVP',\n     fmt: '97',\n     fmtp: {\n       parameters: {\n         bitrate: '32000',\n         config: '1408',\n         indexdeltalength: '3',\n         indexlength: '3',\n         mode: 'AAC-hbr',\n         'profile-level-id': '2',\n         sizelength: '13',\n         streamtype: '5'\n       },\n       format: '97'\n     },\n     rtpmap: '97 MPEG4-GENERIC/16000/1',\n     control: 'rtsp://hostname/axis-media/media.amp/stream=1?audio=1&video=1' }]\n*/\n\nexport class AACDepay extends Tube {\n  constructor() {\n    let AACPayloadType: number\n    let hasHeader: boolean\n\n    const incoming = createTransform(function(\n      msg: Message,\n      encoding,\n      callback\n    ) {\n      if (msg.type === MessageType.SDP) {\n        // Check if there is an AAC track in the SDP\n        let validMedia\n        for (const media of msg.sdp.media) {\n          if (\n            media.type === 'audio'\n            && media.fmtp\n            && media.fmtp.parameters\n            && media.fmtp.parameters.mode === 'AAC-hbr'\n          ) {\n            validMedia = media\n          }\n        }\n        if (validMedia && validMedia.rtpmap !== undefined) {\n          AACPayloadType = Number(validMedia.rtpmap.payloadType)\n          const parameters = validMedia.fmtp.parameters\n          // Required\n          const sizeLength = Number(parameters.sizelength) || 0\n          const indexLength = Number(parameters.indexlength) || 0\n          const indexDeltaLength = Number(parameters.indexdeltalength) || 0\n          // Optionals\n          const CTSDeltaLength = Number(parameters.ctsdeltalength) || 0\n          const DTSDeltaLength = Number(parameters.dtsdeltalength) || 0\n          const RandomAccessIndication =\n            Number(parameters.randomaccessindication) || 0\n          const StreamStateIndication = Number(parameters.streamstateindication)\n            || 0\n          const AuxiliaryDataSizeLength =\n            Number(parameters.auxiliarydatasizelength) || 0\n\n          hasHeader = sizeLength\n              + Math.max(indexLength, indexDeltaLength)\n              + CTSDeltaLength\n              + DTSDeltaLength\n              + RandomAccessIndication\n              + StreamStateIndication\n              + AuxiliaryDataSizeLength\n            > 0\n        }\n        callback(undefined, msg)\n      } else if (\n        msg.type === MessageType.RTP\n        && payloadType(msg.data) === AACPayloadType\n      ) {\n        parse(msg, hasHeader, this.push.bind(this))\n        callback()\n      } else {\n        // Not a message we should handle\n        callback(undefined, msg)\n      }\n    })\n\n    // outgoing will be defaulted to a PassThrough stream\n    super(incoming)\n  }\n}\n", "import { POS } from '../bits'\n\n// Real Time Protocol (RTP)\n// https://tools.ietf.org/html/rfc3550#section-5.1\n\n/*\nRTP Fixed Header Fields\n\n  0               1               2               3\n  0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  |V=2|P|X|  CC   |M|     PT      |       sequence number         |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  |                           timestamp                           |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  |           synchronization source (SSRC) identifier            |\n  +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n  |            contributing source (CSRC) identifiers             |\n  |                             ....                              |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  |   profile-specific ext. id    | profile-specific ext. length  |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  |                 profile-specific extension                    |\n  |                             ....                              |\n  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n*/\n\nexport const version = (buffer: Buffer) => {\n  return buffer[0] >>> 6\n}\n\nexport const padding = (buffer: Buffer) => {\n  return !!(buffer[0] & POS[2])\n}\n\nexport const extension = (buffer: Buffer) => {\n  return !!(buffer[0] & POS[3])\n}\n\nexport const cSrcCount = (buffer: Buffer) => {\n  return buffer[0] & 0x0f\n}\n\nexport const marker = (buffer: Buffer) => {\n  return !!(buffer[1] & POS[0])\n}\n\nexport const payloadType = (buffer: Buffer) => {\n  return buffer[1] & 0x7f\n}\n\nexport const sequenceNumber = (buffer: Buffer) => {\n  return buffer.readUInt16BE(2)\n}\n\nexport const timestamp = (buffer: Buffer) => {\n  return buffer.readUInt32BE(4)\n}\n\nexport const sSrc = (buffer: Buffer) => {\n  return buffer.readUInt32BE(8)\n}\n\nexport const cSrc = (buffer: Buffer, rank = 0) => {\n  return cSrcCount(buffer) > rank ? buffer.readUInt32BE(12 + rank * 4) : 0\n}\n\nexport const extHeaderLength = (buffer: Buffer) => {\n  return !extension(buffer)\n    ? 0\n    : buffer.readUInt16BE(12 + cSrcCount(buffer) * 4 + 2)\n}\n\nexport const extHeader = (buffer: Buffer) => {\n  return extHeaderLength(buffer) === 0\n    ? Buffer.from([])\n    : buffer.slice(\n      12 + cSrcCount(buffer) * 4,\n      12 + cSrcCount(buffer) * 4 + 4 + extHeaderLength(buffer) * 4\n    )\n}\n\nexport const payload = (buffer: Buffer) => {\n  return !extension(buffer)\n    ? buffer.slice(12 + cSrcCount(buffer) * 4)\n    : buffer.slice(12 + cSrcCount(buffer) * 4 + 4 + extHeaderLength(buffer) * 4)\n}\n", "export const POS = [0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01]\n", "import { MediaTrack } from '../utils/protocols/isom'\nimport { Rtcp } from '../utils/protocols/rtcp'\nimport { Sdp } from '../utils/protocols/sdp'\n\nexport interface GenericMessage {\n  readonly type: MessageType\n  readonly data: Buffer\n  ntpTimestamp?: number\n}\n\nexport enum MessageType {\n  UNKNOWN = 0,\n  RAW,\n  RTP,\n  RTCP,\n  RTSP,\n  SDP,\n  ELEMENTARY,\n  H264,\n  ISOM,\n  XML,\n  JPEG,\n}\n\nexport interface RawMessage extends GenericMessage {\n  readonly type: MessageType.RAW\n}\n\nexport interface RtpMessage extends GenericMessage {\n  readonly type: MessageType.RTP\n  readonly channel: number\n}\n\nexport interface RtcpMessage extends GenericMessage {\n  readonly type: MessageType.RTCP\n  readonly channel: number\n  readonly rtcp: Rtcp\n}\n\nexport interface RtspMessage extends GenericMessage {\n  readonly type: MessageType.RTSP\n  readonly method?: string\n  readonly headers?: { [key: string]: string }\n  readonly uri?: string\n  readonly protocol?: string\n}\n\nexport interface SdpMessage extends GenericMessage {\n  readonly type: MessageType.SDP\n  readonly sdp: Sdp\n}\n\nexport interface ElementaryMessage extends GenericMessage {\n  readonly type: MessageType.ELEMENTARY\n  readonly payloadType: number\n  readonly timestamp: number\n}\n\nexport interface H264Message extends GenericMessage {\n  readonly type: MessageType.H264\n  readonly payloadType: number\n  readonly timestamp: number\n  readonly nalType: number\n}\n\nexport interface IsomMessage extends GenericMessage {\n  readonly type: MessageType.ISOM\n  readonly checkpointTime?: number // presentation time of last I-frame (s)\n  readonly tracks?: MediaTrack[]\n  readonly mime?: string\n}\n\nexport interface XmlMessage extends GenericMessage {\n  readonly type: MessageType.XML\n  readonly timestamp: number\n  readonly payloadType: number\n}\n\nexport interface JpegMessage extends GenericMessage {\n  readonly type: MessageType.JPEG\n  readonly timestamp: number\n  readonly payloadType: number\n  readonly framesize: {\n    readonly width: number\n    readonly height: number\n  }\n}\n\nexport type Message =\n  | RawMessage\n  | RtpMessage\n  | RtcpMessage\n  | RtspMessage\n  | SdpMessage\n  | ElementaryMessage\n  | H264Message\n  | IsomMessage\n  | XmlMessage\n  | JpegMessage\n\nexport type MessageHandler = (msg: Message) => void\n", "import { Transform, TransformCallback } from 'stream'\n\nimport { Message } from './message'\n\ntype MessageTransform = (\n  this: Transform,\n  msg: Message,\n  encoding: string,\n  callback: TransformCallback\n) => void\n\nexport const createTransform = (transform: MessageTransform) => {\n  return new Transform({\n    objectMode: true,\n    transform,\n  })\n}\n", "import { payload, payloadType, timestamp } from '../../utils/protocols/rtp'\nimport { ElementaryMessage, MessageType, RtpMessage } from '../message'\n\n/*\nFrom RFC 3640 https://tools.ietf.org/html/rfc3640\n  2.11.  Global Structure of Payload Format\n\n     The RTP payload following the RTP header, contains three octet-\n     aligned data sections, of which the first two MAY be empty, see\n     Figure 1.\n\n           +---------+-----------+-----------+---------------+\n           | RTP     | AU Header | Auxiliary | Access Unit   |\n           | Header  | Section   | Section   | Data Section  |\n           +---------+-----------+-----------+---------------+\n\n                     <----------RTP Packet Payload----------->\n\n              Figure 1: Data sections within an RTP packet\nNote that auxilary section is empty for AAC-hbr\n\n  3.2.1.  The AU Header Section\n\n   When present, the AU Header Section consists of the AU-headers-length\n   field, followed by a number of AU-headers, see Figure 2.\n\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- .. -+-+-+-+-+-+-+-+-+-+\n      |AU-headers-length|AU-header|AU-header|      |AU-header|padding|\n      |                 |   (1)   |   (2)   |      |   (n)   | bits  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- .. -+-+-+-+-+-+-+-+-+-+\n\n                   Figure 2: The AU Header Section\n*/\n\nexport function parse(\n  rtp: RtpMessage,\n  hasHeader: boolean,\n  callback: (msg: ElementaryMessage) => void\n) {\n  const buffer = payload(rtp.data)\n\n  let headerLength = 0\n  if (hasHeader) {\n    const auHeaderLengthInBits = buffer.readUInt16BE(0)\n    headerLength = 2 + (auHeaderLengthInBits + (auHeaderLengthInBits % 8)) / 8 // Add padding\n  }\n  const packet: ElementaryMessage = {\n    type: MessageType.ELEMENTARY,\n    data: buffer.slice(headerLength),\n    payloadType: payloadType(rtp.data),\n    timestamp: timestamp(rtp.data),\n    ntpTimestamp: rtp.ntpTimestamp,\n  }\n\n  callback(packet)\n}\n", "import {\n  marker,\n  payload,\n  payloadType,\n  timestamp,\n} from '../../utils/protocols/rtp'\nimport { Tube } from '../component'\nimport { Message, MessageType } from '../message'\nimport { createTransform } from '../messageStreams'\n\nexport class BasicDepay extends Tube {\n  constructor(rtpPayloadType: number) {\n    if (rtpPayloadType === undefined) {\n      throw new Error('you must supply a payload type to BasicDepayComponent')\n    }\n\n    let buffer = Buffer.alloc(0)\n\n    const incoming = createTransform(function(\n      msg: Message,\n      encoding,\n      callback\n    ) {\n      if (\n        msg.type === MessageType.RTP\n        && payloadType(msg.data) === rtpPayloadType\n      ) {\n        const rtpPayload = payload(msg.data)\n        buffer = Buffer.concat([buffer, rtpPayload])\n\n        if (marker(msg.data)) {\n          if (buffer.length > 0) {\n            this.push({\n              data: buffer,\n              timestamp: timestamp(msg.data),\n              ntpTimestamp: msg.ntpTimestamp,\n              payloadType: payloadType(msg.data),\n              type: MessageType.ELEMENTARY,\n            })\n          }\n          buffer = Buffer.alloc(0)\n        }\n        callback()\n      } else {\n        // Not a message we should handle\n        callback(undefined, msg)\n      }\n    })\n\n    // outgoing will be defaulted to a PassThrough stream\n    super(incoming)\n  }\n}\n", "import { Readable, Writable } from 'stream'\n\nimport { Clock } from '../../utils/clock'\nimport { VideoMedia } from '../../utils/protocols/sdp'\nimport { Scheduler } from '../../utils/scheduler'\nimport { Sink } from '../component'\nimport { Message, MessageType } from '../message'\n\ninterface BlobMessage {\n  readonly blob: Blob\n  readonly ntpTimestamp: number\n}\n\ntype BlobMessageHandler = (msg: BlobMessage) => void\n\ninterface RateInfo {\n  bitrate: number\n  framerate: number\n  renderedFrames: number\n}\n\nconst resetInfo = (info: RateInfo) => {\n  info.bitrate = 0\n  info.framerate = 0\n  info.renderedFrames = 0\n}\n\ninterface ByteDuration {\n  byteLength: number\n  duration: number\n}\n\nconst generateUpdateInfo = (clockrate: number) => {\n  let cumulativeByteLength = 0\n  let cumulativeDuration = 0\n  let cumulativeFrames = 0\n\n  return (info: RateInfo, { byteLength, duration }: ByteDuration) => {\n    cumulativeByteLength += byteLength\n    cumulativeDuration += duration\n    cumulativeFrames++\n\n    // Update the cumulative number size (bytes) and duration (ticks), and if\n    // the duration exceeds the clockrate (meaning longer than 1 second of info),\n    // then compute a new bitrate and reset cumulative size and duration.\n    if (cumulativeDuration >= clockrate) {\n      const bits = 8 * cumulativeByteLength\n      const frames = cumulativeFrames\n      const seconds = cumulativeDuration / clockrate\n      info.bitrate = bits / seconds\n      info.framerate = frames / seconds\n      cumulativeByteLength = 0\n      cumulativeDuration = 0\n      cumulativeFrames = 0\n    }\n  }\n}\n\n/**\n * Canvas component\n *\n * Draws an incoming stream of JPEG images onto a <canvas> element.\n * The RTP timestamps are used to schedule the drawing of the images.\n * An instance can be used as a 'clock' itself, e.g. with a scheduler.\n *\n * The following handlers can be set on a component instance:\n *  - onCanplay: will be called when the first frame is ready and\n *               the correct frame size has been set on the canvas.\n *               At this point, the clock can be started by calling\n *               `.play()` method on the component.\n *  - onSync: will be called when the presentation time offset is\n *            known, with the latter as argument (in UNIX milliseconds)\n */\nexport class CanvasSink extends Sink {\n  public onCanplay?: () => void\n  public onSync?: (ntpPresentationTime: number) => void\n  private readonly _clock: Clock\n  private readonly _scheduler: Scheduler<BlobMessage>\n  private readonly _info: RateInfo\n  /**\n   * @param  el - The <canvas> element to draw incoming JPEG messages on.\n   */\n  constructor(el: HTMLCanvasElement) {\n    if (el === undefined) {\n      throw new Error('canvas element argument missing')\n    }\n\n    let firstTimestamp = 0\n    let lastTimestamp = 0\n    let clockrate = 0\n    const info = {\n      bitrate: 0,\n      framerate: 0,\n      renderedFrames: 0,\n    }\n    let updateInfo: (info: RateInfo, update: ByteDuration) => void\n\n    // The createImageBitmap function is supported in Chrome and Firefox\n    // (https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/createImageBitmap)\n    // Note: drawImage can also be used instead of transferFromImageBitmap, but it caused\n    // very large memory use in Chrome (goes up to ~2-3GB, then drops again).\n    // Do do not call el.getContext twice, safari returns null for second call\n    let ctx: ImageBitmapRenderingContext | CanvasRenderingContext2D | null =\n      null\n    if (window.createImageBitmap !== undefined) {\n      ctx = el.getContext('bitmaprenderer')\n    }\n    if (ctx === null) {\n      ctx = el.getContext('2d')\n    }\n\n    // Set up the drawing callback to be used by the scheduler,\n    // it receives a blob of a JPEG image.\n    let drawImageBlob: BlobMessageHandler\n    if (ctx === null) {\n      drawImageBlob = () => {\n        /** NOOP */\n      }\n    } else if ('transferFromImageBitmap' in ctx) {\n      const ctxBitmaprenderer = ctx\n      drawImageBlob = ({ blob }) => {\n        info.renderedFrames++\n        window\n          .createImageBitmap(blob)\n          .then((imageBitmap) => {\n            ctxBitmaprenderer.transferFromImageBitmap(imageBitmap)\n          })\n          .catch(() => {\n            /** ignore */\n          })\n      }\n    } else {\n      const ctx2d = ctx\n      const img = new Image()\n      img.onload = () => {\n        ctx2d.drawImage(img, 0, 0)\n      }\n      drawImageBlob = ({ blob }) => {\n        info.renderedFrames++\n        const url = window.URL.createObjectURL(blob)\n        img.src = url\n      }\n    }\n\n    // Because we don't have an element that plays video for us,\n    // we have to use our own clock. The clock can be started/stopped\n    // with the `play` and `pause` methods, and has a `currentTime`\n    // property that keeps track of the presentation time.\n    // The scheduler will use the clock (instead of e.g. a video element)\n    // to determine when to display the JPEG images.\n    const clock = new Clock()\n    const scheduler = new Scheduler(clock, drawImageBlob)\n\n    let ntpPresentationTime = 0\n    const onCanplay = () => {\n      this.onCanplay && this.onCanplay()\n    }\n    const onSync = (npt: number) => {\n      this.onSync && this.onSync(npt)\n    }\n\n    // Set up an incoming stream and attach it to the image drawing function.\n    const incoming = new Writable({\n      objectMode: true,\n      write: (msg: Message, _encoding, callback) => {\n        if (msg.type === MessageType.SDP) {\n          // start of a new movie, reset timers\n          clock.reset()\n          scheduler.reset()\n\n          // Initialize first timestamp and clockrate\n          firstTimestamp = 0\n          const jpegMedia = msg.sdp.media.find((media): media is VideoMedia => {\n            return (\n              media.type === 'video'\n              && media.rtpmap !== undefined\n              && media.rtpmap.encodingName === 'JPEG'\n            )\n          })\n\n          if (jpegMedia !== undefined && jpegMedia.rtpmap !== undefined) {\n            clockrate = jpegMedia.rtpmap.clockrate\n            // Initialize the framerate/bitrate data\n            resetInfo(info)\n            updateInfo = generateUpdateInfo(clockrate)\n          }\n\n          callback()\n        } else if (msg.type === MessageType.JPEG) {\n          const { timestamp, ntpTimestamp } = msg\n\n          // If first frame, store its timestamp, initialize\n          // the scheduler with 0 and start the clock.\n          // Also set the proper size on the canvas.\n          if (!firstTimestamp) {\n            // Initialize timing\n            firstTimestamp = timestamp\n            lastTimestamp = timestamp\n            // Initialize frame size\n            const { width, height } = msg.framesize\n            el.width = width\n            el.height = height\n            // Notify that we can play at this point\n            scheduler.init(0)\n          }\n          // Compute millisecond presentation time (with offset 0\n          // as we initialized the scheduler with 0).\n          const presentationTime = (1000 * (timestamp - firstTimestamp))\n            / clockrate\n          const blob = new window.Blob([msg.data], { type: 'image/jpeg' })\n\n          // If the actual UTC time of the start of presentation isn't known yet,\n          // and we do have an ntpTimestamp, then compute it here and notify.\n          if (!ntpPresentationTime && ntpTimestamp) {\n            ntpPresentationTime = ntpTimestamp - presentationTime\n            onSync(ntpPresentationTime)\n          }\n\n          scheduler.run({\n            ntpTimestamp: presentationTime,\n            blob,\n          })\n\n          // Notify that we can now start the clock.\n          if (timestamp === firstTimestamp) {\n            onCanplay()\n          }\n\n          // Update bitrate/framerate\n          updateInfo(info, {\n            byteLength: msg.data.length,\n            duration: timestamp - lastTimestamp,\n          })\n          lastTimestamp = timestamp\n\n          callback()\n        } else {\n          callback()\n        }\n      },\n    })\n\n    // Set up an outgoing stream.\n    const outgoing = new Readable({\n      objectMode: true,\n      read() {\n        //\n      },\n    })\n\n    // When an error is sent on the outgoing stream, whine about it.\n    outgoing.on('error', () => {\n      console.warn('outgoing stream broke somewhere')\n    })\n\n    super(incoming, outgoing)\n\n    this._clock = clock\n    this._scheduler = scheduler\n    this._info = info\n\n    this.onCanplay = undefined\n    this.onSync = undefined\n  }\n\n  /**\n   * Retrieve the current presentation time (seconds)\n   */\n  get currentTime() {\n    return this._clock.currentTime\n  }\n\n  /**\n   * Pause the presentation.\n   */\n  pause() {\n    this._scheduler.suspend()\n    this._clock.pause()\n  }\n\n  /**\n   * Start the presentation.\n   */\n  play() {\n    this._clock.play()\n    this._scheduler.resume()\n  }\n\n  get bitrate() {\n    return this._info.bitrate\n  }\n\n  get framerate() {\n    return this._info.framerate\n  }\n}\n", "/**\n * Clock\n *\n * A simple timer to keep track of elapsed time,\n * which can be retrieved with the `now` method.\n * The clock is initially in a stopped state, during\n * which the elapsed time does not increase. When\n * started, the clock will return the total elapsed\n * time since the first start / last reset.\n *\n * As a convenience, start/stop are aliased as\n * play/pause, to mimic a media element (for use\n * as a playback clock). The `currentTime` getter\n * returns the elapsed time in seconds (floating\n * point), also as a convenienve to closely match\n * the behaviour of a video element.\n */\nexport class Clock {\n  private started: number\n  private stopped: boolean\n  private elapsed: number\n\n  constructor() {\n    this.elapsed = 0\n    this.started = 0\n    this.stopped = true\n  }\n\n  public start() {\n    if (this.stopped) {\n      this.started = window.performance.now()\n      this.stopped = false\n    }\n  }\n\n  public stop() {\n    if (!this.stopped) {\n      this.elapsed = this.now()\n      this.stopped = true\n    }\n  }\n\n  public reset() {\n    this.elapsed = 0\n    this.started = 0\n    this.stopped = true\n  }\n\n  // Gives the elapsed time in milliseconds since the\n  // clock was first started (after last reset).\n  public now() {\n    if (this.stopped) {\n      return this.elapsed\n    }\n    return this.elapsed + (window.performance.now() - this.started)\n  }\n\n  public play() {\n    this.start()\n  }\n\n  public pause() {\n    this.stop()\n  }\n\n  // Gives the elapsed time in seconds since last reset.\n  get currentTime() {\n    return this.now() / 1000\n  }\n}\n", "export interface Clock {\n  readonly currentTime: number\n  readonly play: () => void\n  readonly pause: () => void\n}\n\n// The default tolerance for matching the handler\n// invocation to clock presentation time.\nconst DEFAULT_TOLERANCE = 10\n\n/**\n * A scheduler that can decide when to execute a certain\n * timestamped callback so that it happens in sync with a video\n * element.\n *\n * To use it:\n *\n * (1) Initialize a new Scheduler with a clock (to synchronize\n * against) and a callback (to be called when a message is in\n * sync with the video). The clock can be a HTMLVideoElement,\n * or anything that has a `currentTime` property which gives\n * the current presentation time in seconds, and a `pause` and\n * `play` method to control playback.\n *\n * (2) Call the `run` method every time a new message arrives\n * that you want to schedule (it needs to have an ntpTimestamp).\n * As soon at the presentation time is known, call the `init`\n * method and pass in that time, so that the scheduler can\n * start to schedule the callbacks. From then on, whenever\n * a message in the queue has a timestamp that matches the\n * current presentation time of the video, your callback will\n * fire.\n */\n\nexport class Scheduler<T extends { readonly ntpTimestamp?: number }> {\n  private readonly _clock: Clock\n  private readonly _handler: (msg: T) => void\n  private readonly _tolerance: number\n  private _nextRun: number\n  private _nextPlay: number\n  private _fifo: T[]\n  private _ntpPresentationTime: number\n  private _suspended: boolean\n\n  /**\n   * Creates an instance of Scheduler.\n   * @param clock - The clock to use (so we can control playback)\n   * @param handler - The callback to invoke when a message is in sync\n   * @param tolerance - The milliseconds defining \"in sync\" (default = 10)\n   */\n  constructor(\n    clock: Clock,\n    handler: (msg: T) => void,\n    tolerance = DEFAULT_TOLERANCE\n  ) {\n    this._clock = clock\n    this._handler = handler\n    this._tolerance = tolerance\n    this._nextRun = 0\n    this._nextPlay = 0\n    this._fifo = []\n    this._ntpPresentationTime = 0\n    this._suspended = false\n  }\n\n  /**\n   * Bring the scheduler back to it's initial state.\n   */\n  public reset() {\n    clearTimeout(this._nextRun)\n    clearTimeout(this._nextPlay)\n    this._fifo = []\n    this._ntpPresentationTime = 0\n    this._suspended = false\n  }\n\n  /**\n   * Initialize the scheduler.\n   *\n   * @param ntpPresentationTime - The offset representing the start of the presentation\n   */\n  public init(ntpPresentationTime: number) {\n    this._ntpPresentationTime = ntpPresentationTime\n  }\n\n  /**\n   * Suspend the scheduler.\n   *\n   * This releases control of the clock and stops any scheduling activity.\n   * Note that this doesn't mean the clock will be in a particular state\n   * (could be started or stopped), just that the scheduler will no longer\n   * control it.\n   */\n  public suspend() {\n    clearTimeout(this._nextPlay)\n    this._suspended = true\n  }\n\n  /**\n   * Resume the scheduler.\n   *\n   * This gives back control of the clock and the ability\n   * to schedule messages. The scheduler will immediately\n   * try to do that on resume.\n   */\n  public resume() {\n    this._suspended = false\n    this.run(undefined)\n  }\n\n  /**\n   * Run the scheduler.\n   *\n   * @param newMessage - New message to schedule.\n   */\n  public run(newMessage?: T) {\n    clearTimeout(this._nextRun)\n    // If there is no way to schedule anything, just return.\n    // The first schedule will happen for the first .run that\n    // is called after the presentation time has been initialized.\n    if (typeof this._ntpPresentationTime === 'undefined') {\n      return\n    }\n    // If there is a new message, add it to the FIFO queue\n    if (typeof newMessage !== 'undefined') {\n      this._fifo.push(newMessage)\n    }\n    // If the scheduler is suspended, we can only keep the\n    // messages and not do anything with them.\n    if (this._suspended) {\n      return\n    }\n    // If there are no messages, we don't need to bother or\n    // even re-schedule, because the new call to .run() will\n    // have to come from outside with a new message.\n    if (this._fifo.length === 0) {\n      return\n    }\n    // There is at least one message in the FIFO queue, either\n    // display it, or re-schedule the method for later execution\n    let timeToPresent = 0\n    let currentMessage: T\n    do {\n      const msg = this._fifo.shift()\n      if (msg === undefined) {\n        throw new Error('internal error: message should never be undefined')\n      }\n      currentMessage = msg\n      const ntpTimestamp = currentMessage.ntpTimestamp\n      if (ntpTimestamp === undefined) {\n        continue\n      }\n      const presentationTime = ntpTimestamp - this._ntpPresentationTime\n      timeToPresent = presentationTime - this._clock.currentTime * 1000\n      // If the message is within a tolerance of the presentation time\n      // then call the handler.\n      if (Math.abs(timeToPresent) < this._tolerance) {\n        this._handler && this._handler(currentMessage)\n      }\n    } while (timeToPresent < this._tolerance && this._fifo.length > 0)\n\n    if (timeToPresent < -this._tolerance) {\n      // We ran out of messages, delay the video with the same amount\n      // of delay as the last message had on the FIFO queue.\n      // Since we don't have any messages in the queue right now,\n      // the only way for anything to happen is if scheduler.run\n      // is called.\n      clearTimeout(this._nextPlay)\n      this._clock.pause()\n      this._nextPlay = window.setTimeout(\n        () => this._clock.play(),\n        -timeToPresent\n      )\n    } else if (timeToPresent > this._tolerance) {\n      // message is later than video, add it back to the queue and\n      // re-run the scheduling at a later point in time\n      this._fifo.unshift(currentMessage)\n      this._nextRun = window.setTimeout(\n        () => this.run(undefined),\n        timeToPresent\n      )\n    }\n  }\n}\n", "import { Transform } from 'stream'\n\nimport { marker, payloadType } from '../../utils/protocols/rtp'\nimport { VideoMedia } from '../../utils/protocols/sdp'\nimport { Tube } from '../component'\nimport { Message, MessageType } from '../message'\n\nimport { H264DepayParser, NAL_TYPES } from './parser'\n\nexport class H264Depay extends Tube {\n  constructor() {\n    let h264PayloadType: number\n    let idrFound = false\n    let packets: Buffer[] = []\n\n    const h264DepayParser = new H264DepayParser()\n\n    // Incoming\n\n    const incoming = new Transform({\n      objectMode: true,\n      transform(msg: Message, _encoding, callback) {\n        // Get correct payload types from sdp to identify video and audio\n        if (msg.type === MessageType.SDP) {\n          const h264Media = msg.sdp.media.find((media): media is VideoMedia => {\n            return (\n              media.type === 'video'\n              && media.rtpmap !== undefined\n              && media.rtpmap.encodingName === 'H264'\n            )\n          })\n          if (h264Media !== undefined && h264Media.rtpmap !== undefined) {\n            h264PayloadType = h264Media.rtpmap.payloadType\n          }\n          callback(undefined, msg) // Pass on the original SDP message\n        } else if (\n          msg.type === MessageType.RTP\n          && payloadType(msg.data) === h264PayloadType\n        ) {\n          const endOfFrame = marker(msg.data)\n          const h264Message = h264DepayParser.parse(msg)\n\n          // Skip if not a full H264 frame, or when there hasn't been an I-frame yet\n          if (\n            h264Message === null\n            || (!idrFound && h264Message.nalType !== NAL_TYPES.IDR_PICTURE)\n          ) {\n            callback()\n            return\n          }\n\n          idrFound = true\n\n          // H.264 over RTP uses the RTP marker bit to indicate a complete\n          // frame.  At this point, the packets can be used to construct a\n          // complete message.\n\n          packets.push(h264Message.data)\n          if (endOfFrame) {\n            this.push({\n              ...h264Message,\n              data: packets.length === 1 ? packets[0] : Buffer.concat(packets),\n            })\n            packets = []\n          }\n          callback()\n        } else {\n          // Not a message we should handle\n          callback(undefined, msg)\n        }\n      },\n    })\n\n    // outgoing will be defaulted to a PassThrough stream\n    super(incoming)\n  }\n}\n", "import debug from 'debug'\n\nimport { payload, payloadType, timestamp } from '../../utils/protocols/rtp'\nimport { H264Message, MessageType, RtpMessage } from '../message'\n\nexport enum NAL_TYPES {\n  UNSPECIFIED = 0,\n  NON_IDR_PICTURE = 1, // P-frame\n  IDR_PICTURE = 5, // I-frame\n  SPS = 7,\n  PPS = 8,\n}\n\n/*\nFirst byte in payload (rtp payload header):\n      +---------------+\n      |0|1|2|3|4|5|6|7|\n      +-+-+-+-+-+-+-+-+\n      |F|NRI|  Type   |\n      +---------------+\n\n2nd byte in payload: FU header (if type in first byte is 28)\n      +---------------+\n      |0|1|2|3|4|5|6|7|\n      +-+-+-+-+-+-+-+-+\n      |S|E|R|  Type   | S = start, E = end\n      +---------------+\n*/\n\nconst h264Debug = debug('msl:h264depay')\n\nexport class H264DepayParser {\n  private _buffer: Buffer\n\n  constructor() {\n    this._buffer = Buffer.alloc(0)\n  }\n\n  parse(rtp: RtpMessage): H264Message | null {\n    const rtpPayload = payload(rtp.data)\n    const type = rtpPayload[0] & 0x1f\n\n    if (type === 28) {\n      /* FU-A NALU */ const fuIndicator = rtpPayload[0]\n      const fuHeader = rtpPayload[1]\n      const startBit = !!(fuHeader >> 7)\n      const nalType = fuHeader & 0x1f\n      const nal = (fuIndicator & 0xe0) | nalType\n      const stopBit = fuHeader & 64\n      if (startBit) {\n        this._buffer = Buffer.concat([\n          Buffer.from([0, 0, 0, 0, nal]),\n          rtpPayload.slice(2),\n        ])\n        return null\n      } else if (stopBit) {\n        /* receieved end bit */ const h264frame = Buffer.concat([\n          this._buffer,\n          rtpPayload.slice(2),\n        ])\n        h264frame.writeUInt32BE(h264frame.length - 4, 0)\n        const msg: H264Message = {\n          data: h264frame,\n          type: MessageType.H264,\n          timestamp: timestamp(rtp.data),\n          ntpTimestamp: rtp.ntpTimestamp,\n          payloadType: payloadType(rtp.data),\n          nalType,\n        }\n        this._buffer = Buffer.alloc(0)\n        return msg\n      }\n      // Put the received data on the buffer and cut the header bytes\n      this._buffer = Buffer.concat([this._buffer, rtpPayload.slice(2)])\n      return null\n    } else if (\n      (type === NAL_TYPES.NON_IDR_PICTURE || type === NAL_TYPES.IDR_PICTURE)\n      && this._buffer.length === 0\n    ) {\n      /* Single NALU */ const h264frame = Buffer.concat([\n        Buffer.from([0, 0, 0, 0]),\n        rtpPayload,\n      ])\n      h264frame.writeUInt32BE(h264frame.length - 4, 0)\n      const msg: H264Message = {\n        data: h264frame,\n        type: MessageType.H264,\n        timestamp: timestamp(rtp.data),\n        ntpTimestamp: rtp.ntpTimestamp,\n        payloadType: payloadType(rtp.data),\n        nalType: type,\n      }\n      this._buffer = Buffer.alloc(0)\n      return msg\n    }\n    h264Debug(\n      `H264depayComponent can only extract types 1,5 and 28, got ${type}`\n    )\n    this._buffer = Buffer.alloc(0)\n    return null\n  }\n}\n", "import registerDebug from 'debug'\n\nimport { Readable } from 'stream'\n\nimport { Source } from '../component'\nimport { MessageType } from '../message'\n\nconst debug = registerDebug('msl:http-source')\n\nexport interface HttpConfig {\n  uri: string\n  options?: RequestInit\n}\n\nexport class HttpSource extends Source {\n  public uri: string\n  public options?: RequestInit\n  public length?: number\n  public onHeaders?: (headers: Headers) => void\n  public onServerClose?: () => void\n\n  private _reader?: ReadableStreamDefaultReader<Uint8Array>\n  private _abortController?: AbortController\n  private _allDone: boolean\n\n  /**\n   * Create an HTTP component.\n   *\n   * The constructor sets a single readable stream from a fetch.\n   */\n  constructor(config: HttpConfig) {\n    const { uri, options } = config\n    /**\n     * Set up an incoming stream and attach it to the socket.\n     */\n    const incoming = new Readable({\n      objectMode: true,\n      read() {\n        //\n      },\n    })\n\n    // When an error is sent on the incoming stream, close the socket.\n    incoming.on('error', (e) => {\n      console.warn('closing socket due to incoming error', e)\n      this._reader && this._reader.cancel().catch((err) => console.error(err))\n    })\n\n    /**\n     * initialize the component.\n     */\n    super(incoming)\n\n    // When a read is requested, continue to pull data\n    incoming._read = () => {\n      this._pull()\n    }\n\n    this.uri = uri\n    this.options = options\n    this._allDone = false\n  }\n\n  play(): void {\n    if (this.uri === undefined) {\n      throw new Error('cannot start playing when there is no URI')\n    }\n\n    this._abortController = new AbortController()\n\n    this.length = 0\n    fetch(this.uri, {\n      credentials: 'include',\n      signal: this._abortController.signal,\n      ...this.options,\n    })\n      .then((rsp) => {\n        if (rsp.body === null) {\n          throw new Error('empty response body')\n        }\n\n        this.onHeaders && this.onHeaders(rsp.headers)\n\n        this._reader = rsp.body.getReader()\n        this._pull()\n      })\n      .catch((err) => {\n        console.error('http-source: fetch failed: ', err)\n      })\n  }\n\n  abort(): void {\n    this._reader\n      && this._reader.cancel().catch((err) => {\n        console.log('http-source: cancel reader failed: ', err)\n      })\n    this._abortController && this._abortController.abort()\n  }\n\n  _isClosed(): boolean {\n    return this._allDone\n  }\n\n  _close(): void {\n    this._reader = undefined\n    this._allDone = true\n    this.incoming.push(null)\n    this.onServerClose?.()\n  }\n\n  _pull(): void {\n    if (this._reader === undefined) {\n      return\n    }\n\n    this._reader\n      .read()\n      .then(({ done, value }) => {\n        if (done) {\n          if (!this._isClosed()) {\n            debug('fetch completed, total downloaded: ', this.length, ' bytes')\n            this._close()\n          }\n          return\n        }\n        if (value === undefined) {\n          throw new Error('expected value to be defined')\n        }\n        if (this.length === undefined) {\n          throw new Error('expected length to be defined')\n        }\n        this.length += value.length\n        const buffer = Buffer.from(value)\n        if (!this.incoming.push({ data: buffer, type: MessageType.RAW })) {\n          // Something happened down stream that it is no longer processing the\n          // incoming data, and the stream buffer got full.\n          // This could be because we are downloading too much data at once,\n          // or because the downstream is frozen. The latter is most likely\n          // when dealing with a live stream (as in that case we would expect\n          // downstream to be able to handle the data).\n          debug('downstream back pressure: pausing read')\n        } else {\n          // It's ok to read more data\n          this._pull()\n        }\n      })\n      .catch((err) => {\n        debug('http-source: read failed: ', err)\n        if (!this._isClosed()) {\n          this._close()\n        }\n      })\n  }\n}\n", "import { Transform } from 'stream'\n\nimport { Tube } from '../component'\nimport { GenericMessage, MessageType } from '../message'\n\nconst generateLogger = (prefix: string, type?: MessageType) => {\n  let lastTimestamp = Date.now()\n\n  const log = (msg: GenericMessage) => {\n    const timestamp = Date.now()\n    console.log(`${prefix}: +${timestamp - lastTimestamp}ms`, msg)\n    lastTimestamp = timestamp\n  }\n\n  if (type === undefined) {\n    return log\n  }\n  return (msg: GenericMessage) => msg.type === type && log(msg)\n}\n\n/**\n * Component that logs whatever is passing through.\n */\nexport class Inspector extends Tube {\n  /**\n   * Create a new inspector component.\n   * @argument {String} type  The type of message to log (default is to log all).\n   * @return {undefined}\n   */\n  constructor(type?: MessageType) {\n    const incomingLogger = generateLogger('incoming', type)\n\n    const incoming = new Transform({\n      objectMode: true,\n      transform(msg, encoding, callback) {\n        incomingLogger(msg)\n        callback(undefined, msg)\n      },\n    })\n\n    const outgoingLogger = generateLogger('outgoing', type)\n\n    const outgoing = new Transform({\n      objectMode: true,\n      transform(msg, encoding, callback) {\n        outgoingLogger(msg)\n        callback(undefined, msg)\n      },\n    })\n\n    super(incoming, outgoing)\n  }\n}\n", "import { Transform } from 'stream'\n\nimport { marker, payloadType, timestamp } from '../../utils/protocols/rtp'\nimport { VideoMedia } from '../../utils/protocols/sdp'\nimport { Tube } from '../component'\nimport { Message, MessageType } from '../message'\n\nimport { jpegDepayFactory } from './parser'\n\nexport class JPEGDepay extends Tube {\n  constructor() {\n    let jpegPayloadType: number\n    let packets: Buffer[] = []\n    let jpegDepay: (packets: Buffer[]) => {\n      size: { width: number; height: number }\n      data: Buffer\n    }\n\n    const incoming = new Transform({\n      objectMode: true,\n      transform(msg: Message, encoding, callback) {\n        if (msg.type === MessageType.SDP) {\n          const jpegMedia = msg.sdp.media.find((media): media is VideoMedia => {\n            return (\n              media.type === 'video'\n              && media.rtpmap !== undefined\n              && media.rtpmap.encodingName === 'JPEG'\n            )\n          })\n          if (jpegMedia !== undefined && jpegMedia.rtpmap !== undefined) {\n            jpegPayloadType = Number(jpegMedia.rtpmap.payloadType)\n            const framesize = jpegMedia.framesize\n            // `framesize` is an SDP field that is present in e.g. Axis camera's\n            // and is used because the width and height that can be sent inside\n            // the JPEG header are both limited to 2040.\n            // If present, we use this width and height as the default values\n            // to be used by the jpeg depay function, otherwise we ignore this\n            // and let the JPEG header inside the RTP packets determine this.\n            if (framesize !== undefined) {\n              const [width, height] = framesize\n              // msg.framesize = { width, height }\n              jpegDepay = jpegDepayFactory(width, height)\n            } else {\n              jpegDepay = jpegDepayFactory()\n            }\n          }\n\n          callback(undefined, msg)\n        } else if (\n          msg.type === MessageType.RTP\n          && payloadType(msg.data) === jpegPayloadType\n        ) {\n          packets.push(msg.data)\n\n          // JPEG over RTP uses the RTP marker bit to indicate end\n          // of fragmentation. At this point, the packets can be used\n          // to reconstruct a JPEG frame.\n          if (marker(msg.data) && packets.length > 0) {\n            const jpegFrame = jpegDepay(packets)\n            this.push({\n              timestamp: timestamp(msg.data),\n              ntpTimestamp: msg.ntpTimestamp,\n              payloadType: payloadType(msg.data),\n              data: jpegFrame.data,\n              framesize: jpegFrame.size,\n              type: MessageType.JPEG,\n            })\n            packets = []\n          }\n          callback()\n        } else {\n          // Not a message we should handle\n          callback(undefined, msg)\n        }\n      },\n    })\n\n    // outgoing will be defaulted to a PassThrough stream\n    super(incoming)\n  }\n}\n", "import { payload } from '../../utils/protocols/rtp'\n\nimport {\n  makeDRIHeader,\n  makeFrameHeader,\n  makeHuffmanHeader,\n  makeImageHeader,\n  makeQuantHeader,\n  makeScanHeader,\n} from './headers'\nimport { makeQtable } from './make-qtable'\n\n/**\n * Each packet contains a special JPEG header which immediately follows\n * the RTP header.  The first 8 bytes of this header, called the \"main\n * JPEG header\", are as follows:*\n *  0                   1                   2                   3\n *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n * | Type-specific |              Fragment Offset                  |\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n * |      Type     |       Q       |     Width     |     Height    |\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n */\n\n/**\n * Restart Marker header: when using types 64-127\n *  0                   1                   2                   3\n *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n * |       Restart Interval        |F|L|       Restart Count       |\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n */\n\n/**\n * Quantization Table header: when using Q values 128-255\n *  0                   1                   2                   3\n *  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n * |      MBZ      |   Precision   |             Length            |\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n * |                    Quantization Table Data                    |\n * |                              ...                              |\n * +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n */\n\nexport function jpegDepayFactory(defaultWidth = 0, defaultHeight = 0) {\n  const IMAGE_HEADER = makeImageHeader()\n  const HUFFMAN_HEADER = makeHuffmanHeader()\n  const SCAN_HEADER = makeScanHeader()\n\n  return function jpegDepay(packets: Buffer[]) {\n    let metadata\n    const fragments: Buffer[] = []\n    for (const packet of packets) {\n      let fragment = payload(packet)\n\n      // Parse and extract JPEG header.\n      const typeSpecific = fragment.readUInt8(0)\n      const fragmentOffset = (fragment.readUInt8(1) << 16)\n        | (fragment.readUInt8(2) << 8)\n        | fragment.readUInt8(3)\n      const type = fragment.readUInt8(4)\n      const Q = fragment.readUInt8(5)\n      const width = fragment.readUInt8(6) * 8 || defaultWidth\n      const height = fragment.readUInt8(7) * 8 || defaultHeight\n      fragment = fragment.slice(8)\n\n      // Parse and extract Restart Marker header if present.\n      let DRI = 0\n      if (type >= 64 && type <= 127) {\n        DRI = fragment.readUInt16BE(0)\n        fragment = fragment.slice(4)\n      }\n\n      // Parse and extract Quantization Table header if present.\n      if (Q >= 128 && fragmentOffset === 0) {\n        // const MBZ = fragment.readUInt8()\n        const precision = fragment.readUInt8(1)\n        const length = fragment.readUInt16BE(2)\n        const qTable = fragment.slice(4, 4 + length)\n        metadata = {\n          typeSpecific,\n          type,\n          width,\n          height,\n          DRI,\n          precision,\n          qTable,\n        }\n        fragment = fragment.slice(4 + length)\n      } // Compute Quantization Table\n      else if (Q < 128 && fragmentOffset === 0) {\n        const precision = 0\n        const qTable = makeQtable(Q)\n        metadata = {\n          typeSpecific,\n          type,\n          width,\n          height,\n          DRI,\n          precision,\n          qTable,\n        }\n      }\n\n      fragments.push(fragment)\n    }\n\n    if (metadata === undefined) {\n      throw new Error('no quantization header present')\n    }\n\n    const { precision, qTable, type, width, height } = metadata\n\n    const quantHeader = makeQuantHeader(precision, qTable)\n\n    const driHeader = metadata.DRI === 0\n      ? Buffer.alloc(0)\n      : makeDRIHeader(metadata.DRI)\n\n    const frameHeader = makeFrameHeader(width, height, type)\n\n    return {\n      size: { width, height },\n      data: Buffer.concat([\n        IMAGE_HEADER,\n        quantHeader,\n        driHeader,\n        frameHeader,\n        HUFFMAN_HEADER,\n        SCAN_HEADER,\n        ...fragments,\n      ]),\n    }\n  }\n}\n", "/**\n * Generate frame and scan headers that can be prepended to the\n * RTP/JPEG data payload to produce a JPEG compressed image in\n * interchange format.\n *\n * For detailed information, check Appendix A of:\n * https://tools.ietf.org/html/rfc2435\n */\n\nexport function makeImageHeader() {\n  return Buffer.from([0xff, 0xd8])\n}\n\nexport function makeQuantHeader(precision: number, qTable: Buffer) {\n  const lumSize = precision & 1 ? 128 : 64\n  const chmSize = precision & 2 ? 128 : 64\n  if (qTable.length !== lumSize + chmSize) {\n    throw new Error('invalid quantization table')\n  }\n  const lumaPrefix = Buffer.from([0xff, 0xdb, 0, lumSize + 3, 0])\n  const chromaPrefix = Buffer.from([0xff, 0xdb, 0, chmSize + 3, 1])\n  return Buffer.concat([\n    lumaPrefix,\n    qTable.slice(0, lumSize),\n    chromaPrefix,\n    qTable.slice(lumSize),\n  ])\n}\n\nexport function makeFrameHeader(width: number, height: number, type: number) {\n  return Buffer.from([\n    0xff,\n    0xc0, // SOF_0 (Start Of Frame)\n    0,\n    17,\n    8,\n    height >> 8,\n    height,\n    width >> 8,\n    width,\n    3,\n    0,\n    type === 0 ? 0x21 : 0x22,\n    0,\n    1,\n    0x11,\n    1,\n    2,\n    0x11,\n    1,\n  ])\n}\n\n// dprint-ignore\nconst LUM_DC_CODELENS = [\n  0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0\n]\n// dprint-ignore\nconst LUM_DC_SYMBOLS = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\n]\n// dprint-ignore\nconst LUM_AC_CODELENS = [\n  0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d\n]\n// dprint-ignore\nconst LUM_AC_SYMBOLS = [\n  0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,\n  0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,\n  0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,\n  0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,\n  0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,\n  0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,\n  0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,\n  0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,\n  0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,\n  0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,\n  0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,\n  0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,\n  0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,\n  0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,\n  0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,\n  0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,\n  0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,\n  0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,\n  0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,\n  0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,\n  0xf9, 0xfa\n]\n// dprint-ignore\nconst CHM_DC_CODELENS = [\n  0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0\n]\n// dprint-ignore\nconst CHM_DC_SYMBOLS = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11\n]\n// dprint-ignore\nconst CHM_AC_CODELENS = [\n  0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77\n]\n// dprint-ignore\nconst CHM_AC_SYMBOLS = [\n  0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21,\n  0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,\n  0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91,\n  0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,\n  0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34,\n  0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,\n  0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38,\n  0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,\n  0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,\n  0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,\n  0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,\n  0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n  0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96,\n  0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,\n  0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4,\n  0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,\n  0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2,\n  0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,\n  0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9,\n  0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,\n  0xf9, 0xfa\n]\n\nexport function makeHuffmanHeader() {\n  const LUM_DC_BUFFER = [\n    [\n      0xff,\n      0xc4,\n      0,\n      3 + LUM_DC_CODELENS.length + LUM_DC_SYMBOLS.length,\n      (0 << 4) | 0,\n    ],\n    LUM_DC_CODELENS,\n    LUM_DC_SYMBOLS,\n  ]\n\n  const LUM_AC_BUFFER = [\n    [\n      0xff,\n      0xc4,\n      0,\n      3 + LUM_AC_CODELENS.length + LUM_AC_SYMBOLS.length,\n      (1 << 4) | 0,\n    ],\n    LUM_AC_CODELENS,\n    LUM_AC_SYMBOLS,\n  ]\n\n  const CHM_DC_BUFFER = [\n    [\n      0xff,\n      0xc4,\n      0,\n      3 + CHM_DC_CODELENS.length + CHM_DC_SYMBOLS.length,\n      (0 << 4) | 1,\n    ],\n    CHM_DC_CODELENS,\n    CHM_DC_SYMBOLS,\n  ]\n\n  const CHM_AC_BUFFER = [\n    [\n      0xff,\n      0xc4,\n      0,\n      3 + CHM_AC_CODELENS.length + CHM_AC_SYMBOLS.length,\n      (1 << 4) | 1,\n    ],\n    CHM_AC_CODELENS,\n    CHM_AC_SYMBOLS,\n  ]\n\n  return Buffer.concat([\n    ...LUM_DC_BUFFER.map(Buffer.from),\n    ...LUM_AC_BUFFER.map(Buffer.from),\n    ...CHM_DC_BUFFER.map(Buffer.from),\n    ...CHM_AC_BUFFER.map(Buffer.from),\n  ])\n}\n\nexport function makeScanHeader() {\n  return Buffer.from([\n    0xff,\n    0xda, // SOS (Start Of Scan)\n    0,\n    12,\n    3,\n    0,\n    0,\n    1,\n    0x11,\n    2,\n    0x11,\n    0,\n    63,\n    0,\n  ])\n}\n\nexport function makeDRIHeader(dri: number) {\n  return Buffer.from([0xff, 0xdd, 0x00, 4, dri >> 8, dri & 0xff])\n}\n", "import { clamp } from '../../utils/clamp'\n/**\n * @function makeQtable\n * Creating a quantization table from a Q factor\n * Example Code from RFC 2435 Appendix A ported to TypeScript\n *\n * Default luminance/chrominance quantization tables in RFC example are not in zig-zag order.\n * The RFC does not mention that default tables should be in zig-zag ordering,\n * but they say that about the included tables. RFC sample code appears to have a mistake.\n * All the tested cameras and LGPL projects use zig-zag default tables.\n * So we use zig-zaged tables from ISO/IEC 10918-1 Annex K Section K.1\n * @see https://tools.ietf.org/html/rfc2435\n * @see https://www.iso.org/standard/18902.html\n */\n// dprint-ignore\nconst jpegLumaQuantizer = [\n  16,  11,  12,  14,  12,  10,  16,  14,\n  13,  14,  18,  17,  16,  19,  24,  40,\n  26,  24,  22,  22,  24,  49,  35,  37,\n  29,  40,  58,  51,  61,  60,  57,  51,\n  56,  55,  64,  72,  92,  78,  64,  68,\n  87,  69,  55,  56,  80,  109, 81,  87,\n  95,  98,  103, 104, 103, 62,  77,  113,\n  121, 112, 100, 120, 92,  101, 103, 99,\n]\n// dprint-ignore\nconst jpeChromaQuantizer = [\n  17,  18,  18,  24,  21,  24,  47,  26,\n  26,  47,  99,  66,  56,  66,  99,  99,\n  99,  99,  99,  99,  99,  99,  99,  99,\n  99,  99,  99,  99,  99,  99,  99,  99,\n  99,  99,  99,  99,  99,  99,  99,  99,\n  99,  99,  99,  99,  99,  99,  99,  99,\n  99,  99,  99,  99,  99,  99,  99,  99,\n  99,  99,  99,  99,  99,  99,  99,  99\n]\n\nexport function makeQtable(Q: number): Buffer {\n  const factor = clamp(Q, 1, 99)\n  const buffer = Buffer.alloc(128)\n  const S = Q < 50 ? Math.floor(5000 / factor) : 200 - factor * 2\n\n  for (let i = 0; i < 64; i++) {\n    const lq = Math.floor((jpegLumaQuantizer[i] * S + 50) / 100)\n    const cq = Math.floor((jpeChromaQuantizer[i] * S + 50) / 100)\n    buffer.writeUInt8(clamp(lq, 1, 255), i)\n    buffer.writeUInt8(clamp(cq, 1, 255), i + 64)\n  }\n  return buffer\n}\n", "export function clamp(val: number, min: number, max: number): number {\n  return val > max ? max : val < min ? min : val\n}\n", "import debug from 'debug'\n\nimport { Transform } from 'stream'\n\nimport { Tube } from '../component'\nimport { Message, MessageType } from '../message'\n\nconst MAX_CAPTURE_BYTES = 225000000 // 5 min at a rate of 6 Mbit/s\n\n/**\n * Component that records MP4 data.\n */\nexport class Mp4Capture extends Tube {\n  private _active: boolean\n  private _capture: boolean\n  private _captureCallback: (buffer: Buffer) => void\n  private _bufferOffset: number\n  private readonly _bufferSize: number\n  private _buffer: Buffer\n\n  constructor(maxSize = MAX_CAPTURE_BYTES) {\n    const incoming = new Transform({\n      objectMode: true,\n      transform: (msg: Message, _encoding, callback) => {\n        // Arrival of ISOM with tracks indicates new movie, start recording if active.\n        if (\n          this._active\n          && msg.type === MessageType.ISOM\n          && msg.tracks !== undefined\n        ) {\n          this._capture = true\n        }\n\n        // If capture enabled, record all ISOM (MP4) boxes\n        if (this._capture && msg.type === MessageType.ISOM) {\n          if (\n            this._bufferOffset\n              < this._buffer.byteLength - msg.data.byteLength\n          ) {\n            msg.data.copy(this._buffer, this._bufferOffset)\n            this._bufferOffset += msg.data.byteLength\n          } else {\n            this.stop()\n          }\n        }\n        // Always pass on all messages\n        callback(undefined, msg)\n      },\n    })\n\n    // Stop any recording when the stream is closed.\n    incoming.on('finish', () => {\n      this.stop()\n    })\n\n    super(incoming)\n\n    this._buffer = Buffer.allocUnsafe(0)\n    this._bufferSize = maxSize\n    this._bufferOffset = 0\n\n    this._active = false\n    this._capture = false\n    this._captureCallback = () => {\n      /** noop */\n    }\n  }\n\n  /**\n   * Activate video capture. The capture will begin when a new movie starts,\n   * and will terminate when the movie ends or when the buffer is full. On\n   * termination, the callback you passed will be called with the captured\n   * data as argument.\n   * @param callback  Will be called when data is captured.\n   */\n  start(callback: (buffer: Buffer) => void) {\n    if (!this._active) {\n      debug('msl:capture:start')(callback)\n\n      this._captureCallback = callback\n\n      this._buffer = Buffer.allocUnsafe(this._bufferSize)\n      this._bufferOffset = 0\n\n      this._active = true\n    }\n  }\n\n  /**\n   * Deactivate video capture. This ends an ongoing capture and prevents\n   * any further capturing.\n   */\n  stop() {\n    if (this._active) {\n      debug('msl:capture:stop')(`captured bytes: ${this._bufferOffset}`)\n\n      try {\n        this._captureCallback(this._buffer.slice(0, this._bufferOffset))\n      } catch (e) {\n        console.error(e)\n      }\n\n      this._buffer = Buffer.allocUnsafe(0)\n      this._bufferOffset = 0\n\n      this._active = false\n      this._capture = false\n    }\n  }\n}\n", "import debug from 'debug'\n\nimport { Transform } from 'stream'\n\nimport { Tube } from '../component'\nimport { NAL_TYPES } from '../h264depay/parser'\nimport { Message, MessageType } from '../message'\n\nimport { BoxBuilder } from './helpers/boxbuilder'\nimport { Box } from './helpers/isom'\n\n/**\n * Component that converts elementary stream data into MP4 boxes honouring\n * the ISO BMFF Byte Stream (Some extra restrictions are involved).\n */\nexport class Mp4Muxer extends Tube {\n  public boxBuilder: BoxBuilder\n  public onSync?: (ntpPresentationTime: number) => void\n  /**\n   * Create a new mp4muxer component.\n   * @return {undefined}\n   */\n  constructor() {\n    const boxBuilder = new BoxBuilder()\n    const onSync = (ntpPresentationTime: number) => {\n      this.onSync && this.onSync(ntpPresentationTime)\n    }\n    const incoming = new Transform({\n      objectMode: true,\n      transform(msg: Message, encoding, callback) {\n        if (msg.type === MessageType.SDP) {\n          /**\n           * Arrival of SDP signals the beginning of a new movie.\n           * Set up the ftyp and moov boxes.\n           */\n\n          // Why is this here? These should be default inside the mvhd box?\n          const now = Math.floor(new Date().getTime() / 1000 + 2082852000)\n          const ftyp = new Box('ftyp')\n          const moov = boxBuilder.moov(msg.sdp, now)\n\n          const data = Buffer.allocUnsafe(ftyp.byteLength + moov.byteLength)\n          ftyp.copy(data, 0)\n          moov.copy(data, ftyp.byteLength)\n\n          debug('msl:mp4:isom')(`ftyp: ${ftyp.format()}`)\n          debug('msl:mp4:isom')(`moov: ${moov.format()}`)\n\n          // Set up a list of tracks that contain info about\n          // the type of media, encoding, and codec are present.\n          const tracks = msg.sdp.media.map((media) => {\n            return {\n              type: media.type,\n              encoding: media.rtpmap && media.rtpmap.encodingName,\n              mime: media.mime,\n              codec: media.codec,\n            }\n          })\n\n          this.push({ type: MessageType.ISOM, data, tracks, ftyp, moov })\n        } else if (\n          msg.type === MessageType.ELEMENTARY\n          || msg.type === MessageType.H264\n        ) {\n          /**\n           * Otherwise we are getting some elementary stream data.\n           * Set up the moof and mdat boxes.\n           */\n\n          const { payloadType, timestamp, ntpTimestamp } = msg\n          const trackId = boxBuilder.trackIdMap[payloadType]\n\n          if (trackId) {\n            if (!boxBuilder.ntpPresentationTime) {\n              boxBuilder.setPresentationTime(trackId, ntpTimestamp)\n              if (boxBuilder.ntpPresentationTime) {\n                onSync(boxBuilder.ntpPresentationTime)\n              }\n            }\n\n            let checkpointTime: number | undefined\n            const idrPicture = msg.type === MessageType.H264\n              ? msg.nalType === NAL_TYPES.IDR_PICTURE\n              : undefined\n            if (\n              boxBuilder.ntpPresentationTime\n              && idrPicture\n              && msg.ntpTimestamp !== undefined\n            ) {\n              checkpointTime =\n                (msg.ntpTimestamp - boxBuilder.ntpPresentationTime) / 1000\n            }\n\n            const byteLength = msg.data.byteLength\n            const moof = boxBuilder.moof({ trackId, timestamp, byteLength })\n            const mdat = boxBuilder.mdat(msg.data)\n\n            const data = Buffer.allocUnsafe(moof.byteLength + mdat.byteLength)\n            moof.copy(data, 0)\n            mdat.copy(data, moof.byteLength)\n\n            this.push({\n              type: MessageType.ISOM,\n              data,\n              moof,\n              mdat,\n              ntpTimestamp,\n              checkpointTime,\n            })\n          }\n        } else {\n          // No message type we recognize, pass it on.\n          this.push(msg)\n        }\n        callback()\n      },\n    })\n\n    super(incoming)\n    this.boxBuilder = boxBuilder\n  }\n\n  get bitrate() {\n    return (\n      this.boxBuilder.trackData\n      && this.boxBuilder.trackData.map((data) => data.bitrate)\n    )\n  }\n\n  get framerate() {\n    return (\n      this.boxBuilder.trackData\n      && this.boxBuilder.trackData.map((data) => data.framerate)\n    )\n  }\n\n  get ntpPresentationTime() {\n    return this.boxBuilder.ntpPresentationTime\n  }\n}\n", "import { Sdp } from '../../../utils/protocols/sdp'\n\nimport { aacSettings } from './aacSettings'\nimport { h264Settings } from './h264Settings'\nimport { Box, Container } from './isom'\n\ninterface MoofMetadata {\n  trackId: number\n  timestamp: number\n  byteLength: number\n}\n\nconst formatDefaults: {\n  [key: string]: (\n    media: any,\n    date: number,\n    trackId: number\n  ) => { mime: string; codec: any; defaultFrameDuration: number }\n} = {\n  'MPEG4-GENERIC': aacSettings,\n  H264: h264Settings,\n}\n\ninterface TrackData {\n  lastTimestamp: number\n  baseMediaDecodeTime: number\n  defaultFrameDuration: number\n  clockrate: number\n  bitrate: number\n  framerate: number\n  cumulativeByteLength: number\n  cumulativeDuration: number\n  cumulativeFrames: number\n}\n\nconst createTrackData = (): TrackData => {\n  return {\n    lastTimestamp: 0,\n    baseMediaDecodeTime: 0,\n    defaultFrameDuration: 0,\n    clockrate: 0,\n    bitrate: 0,\n    framerate: 0,\n    cumulativeByteLength: 0,\n    cumulativeDuration: 0,\n    cumulativeFrames: 0,\n  }\n}\n\ninterface RateInfo {\n  byteLength: number\n  duration: number\n}\n\nconst updateRateInfo = (\n  trackData: TrackData,\n  { byteLength, duration }: RateInfo\n) => {\n  trackData.cumulativeByteLength += byteLength\n  trackData.cumulativeDuration += duration\n  trackData.cumulativeFrames++\n\n  // Update the cumulative number size (bytes) and duration (ticks), and if\n  // the duration exceeds the clockrate (meaning longer than 1 second of data),\n  // then compute a new bitrate and reset cumulative size and duration.\n  if (trackData.cumulativeDuration >= trackData.clockrate) {\n    const bits = 8 * trackData.cumulativeByteLength\n    const frames = trackData.cumulativeFrames\n    const seconds = trackData.cumulativeDuration / trackData.clockrate\n    trackData.bitrate = bits / seconds\n    trackData.framerate = frames / seconds\n    trackData.cumulativeByteLength = 0\n    trackData.cumulativeDuration = 0\n    trackData.cumulativeFrames = 0\n  }\n}\n\n/**\n * Create boxes for a stream initiated by an sdp object\n *\n * @class BoxBuilder\n */\nexport class BoxBuilder {\n  public trackIdMap: { [key: number]: number }\n  public sequenceNumber: number\n  public ntpPresentationTime: number\n  public trackData: TrackData[]\n  public videoTrackId?: number\n\n  constructor() {\n    this.trackIdMap = {}\n    this.sequenceNumber = 0\n    this.ntpPresentationTime = 0\n    this.trackData = []\n  }\n\n  trak(settings: any) {\n    const trak = new Container('trak')\n    const mdia = new Container('mdia')\n    const minf = new Container('minf')\n    const dinf = new Container('dinf')\n    const dref = new Container('dref')\n    const stbl = new Container('stbl')\n\n    dref.set('entry_count', 1)\n\n    trak.append(\n      new Box('tkhd', settings.tkhd),\n      mdia.append(\n        new Box('mdhd', settings.mdhd),\n        new Box('hdlr', settings.hdlr),\n        minf.append(\n          settings.mediaHeaderBox, // vmhd or smhd box (video or sound)\n          dinf.append(dref.append(new Box('url '))),\n          stbl.append(\n            new Container('stsd', undefined, settings.sampleEntryBox),\n            new Box('stts'),\n            new Box('stsc'),\n            new Box('stco'),\n            new Box('stsz'),\n            new Box('stss')\n          )\n        )\n      )\n    )\n\n    return trak\n  }\n\n  /**\n   * Creates a Moov box from the provided options.\n   * @method moov\n   * @param  sdp - The session description protocol\n   * @param  date - The creation/modification time of the movie\n   * @return Moov object\n   */\n  moov(sdp: Sdp, date: any) {\n    const moov = new Container('moov')\n    moov.append(\n      new Box('mvhd', {\n        creation_time: date,\n        modification_time: date,\n        duration: 0,\n      })\n    )\n\n    const mvex = new Container('mvex')\n\n    // For each of the media segments in the SDP structure, we will set up\n    // a track in the MP4 file. For each track, a 'trak' box is added to the\n    // 'moov' box and a 'trex' box is added to the 'mvex' box.\n\n    this.trackIdMap = {}\n    this.sequenceNumber = 0\n    this.ntpPresentationTime = 0\n\n    let trackId = 0\n    this.trackData = []\n\n    sdp.media.forEach((media) => {\n      if (media.rtpmap === undefined) {\n        return\n      }\n\n      const payloadType = media.rtpmap.payloadType\n      const encoding = media.rtpmap.encodingName\n\n      if (formatDefaults[encoding] !== undefined) {\n        // We know how to handle this encoding, add a new track for it, and\n        // register the track for this payloadType.\n        this.trackIdMap[payloadType] = ++trackId\n\n        // Mark the video track\n        if (media.type.toLowerCase() === 'video') {\n          this.videoTrackId = trackId\n        }\n\n        // Extract the settings from the SDP media information based on\n        // the encoding name (H264, MPEG4-GENERIC, ...).\n        const settings = formatDefaults[encoding](media, date, trackId)\n        media.mime = settings.mime // add MIME type to the SDP media\n        media.codec = settings.codec // add human readable codec string to the SDP media\n\n        const trackData = createTrackData()\n        trackData.clockrate = media.rtpmap.clockrate\n        // Set default frame duration (in ticks) for later use\n        trackData.defaultFrameDuration = settings.defaultFrameDuration\n\n        this.trackData.push(trackData)\n\n        const trak = this.trak(settings)\n        moov.append(trak)\n        mvex.append(new Box('trex', { track_ID: trackId }))\n      }\n    })\n\n    moov.append(mvex)\n\n    return moov\n  }\n\n  /**\n   * Boxes that carry actual elementary stream fragment metadata + data.\n   */\n\n  /**\n   * Creates a moof box from the provided fragment metadata.\n   * @method moof\n   * @param  metadata - Track ID, timestamp, bytelength\n   * @return moof Container\n   */\n  moof(metadata: MoofMetadata) {\n    const { trackId, timestamp, byteLength } = metadata\n    const trackOffset = trackId - 1\n\n    const trackData = this.trackData[trackOffset]\n\n    // The RTP timestamps are unsigned 32 bit and will overflow\n    // at some point. We can guard against the overflow by ORing with 0,\n    // which will bring any difference back into signed 32-bit domain.\n    const duration = trackData.lastTimestamp !== 0\n      ? (timestamp - trackData.lastTimestamp) | 0\n      : trackData.defaultFrameDuration\n\n    trackData.lastTimestamp = timestamp\n\n    const moof = new Container('moof')\n    const traf = new Container('traf')\n\n    const trun = new Box('trun', {\n      sample_duration: duration,\n      sample_size: byteLength,\n      first_sample_flags: 0x40,\n    })\n\n    moof.append(\n      new Box('mfhd', { sequence_number: this.sequenceNumber++ }),\n      traf.append(\n        new Box('tfhd', { track_ID: trackId }),\n        new Box('tfdt', { baseMediaDecodeTime: trackData.baseMediaDecodeTime }),\n        trun\n      )\n    )\n\n    trackData.baseMediaDecodeTime += duration\n\n    // Correct the trun data offset\n    trun.set('data_offset', moof.byteLength + 8)\n\n    updateRateInfo(trackData, { byteLength, duration })\n\n    return moof\n  }\n\n  /**\n   * Creates an mdat box containing the elementary stream data.\n   * @param  data - Elementary stream data\n   * @return mdat Box\n   */\n  mdat(data: Buffer) {\n    const box = new Box('mdat')\n    box.add('data', data)\n    return box\n  }\n\n  setPresentationTime(trackId: number, ntpTimestamp?: number) {\n    // Before updating the baseMediaDecodeTime, we check if\n    // there is already a base NTP time to use as a reference\n    // for computing presentation times.\n    if (\n      !this.ntpPresentationTime\n      && ntpTimestamp\n      && trackId === this.videoTrackId\n    ) {\n      const trackOffset = trackId - 1\n      const trackData = this.trackData[trackOffset]\n      this.ntpPresentationTime = ntpTimestamp\n        - 1000 * (trackData.baseMediaDecodeTime / trackData.clockrate)\n    }\n  }\n}\n", "import { AACMedia } from '../../../utils/protocols/sdp'\n\nimport { Box, Container } from './isom'\n\n// All audio object types defined in ISO/IEC 14496-3 pp. 40\nconst AUDIO_OBJECT_TYPE_NAMES: { [key: number]: string } = {\n  1: 'AAC Main',\n  2: 'AAC LC',\n}\n\n// All frequencies defined in ISO/IEC 14496-3 pp. 42\nconst FREQUENCY_VALUES: { [key: number]: string } = {\n  0: '96 kHz',\n  1: '88.2 kHz',\n  2: '64 kHz',\n  3: '48 kHz',\n  4: '44.1 kHz',\n  5: '32 kHz',\n  6: '24 kHz',\n  7: '22.05 kHz',\n  8: '16 kHz',\n  9: '12 kHz',\n  10: '11.025 kHz',\n  11: '8 kHz',\n  12: '7.35 kHz',\n}\n\n// All channels defined in ISO/IEC 14496-3 pp. 42\nconst CHANNEL_CONFIG_NAMES: { [key: number]: string } = {\n  1: 'Mono',\n  2: 'Stereo',\n}\n\nexport interface AACEncoding {\n  coding: string\n  samplingRate: string\n  channels: string\n}\n\nconst aacEncodingName = (audioConfigBytes: number): AACEncoding => {\n  const audioObjectType = (audioConfigBytes >>> 11) & 0x001f\n  const frequencyIndex = (audioConfigBytes >>> 7) & 0x000f\n  const channelConfig = (audioConfigBytes >>> 3) & 0x000f\n\n  const audioType = AUDIO_OBJECT_TYPE_NAMES[audioObjectType]\n    || `AAC (${audioObjectType})`\n  const samplingRate = FREQUENCY_VALUES[frequencyIndex] || 'unknown'\n  const channels = CHANNEL_CONFIG_NAMES[channelConfig]\n    || channelConfig.toString()\n\n  return {\n    coding: audioType,\n    samplingRate,\n    channels,\n  }\n}\n\nexport const aacSettings = (media: AACMedia, date: number, trackId: number) => {\n  /*\n   * Example SDP media segment for MPEG4-GENERIC audio:\n   *\n\n  {\n     \"type\": \"audio\",\n     \"port\": \"0\",\n     \"proto\": \"RTP/AVP\",\n     \"fmt\": \"97\",\n     \"connectionData\": {\n       \"netType\": \"IN\",\n       \"addrType\": \"IP4\",\n       \"connectionAddress\": \"0.0.0.0\"\n     },\n     \"bwtype\": \"AS\",\n     \"bandwidth\": \"32\",\n     \"rtpmap\": {\n       \"payloadType\": \"97\",\n       \"encodingName\": \"MPEG4-GENERIC\",\n       \"clockrate\": \"16000\",\n       \"encodingParameters\": \"1\"\n     },\n     \"fmtp\": {\n       \"format\": \"97\",\n       \"parameters\": {\n         \"streamtype\": \"5\",\n         \"profile-level-id\": \"2\",\n         \"mode\": \"AAC-hbr\",\n         \"config\": \"1408\",\n         \"sizelength\": \"13\",\n         \"indexlength\": \"3\",\n         \"indexdeltalength\": \"3\",\n         \"bitrate\": \"32000\"\n       }\n     },\n     \"control\": \"rtsp://hostname/axis-media/media.amp/stream=1?audio=1\"\n   }\n\n   */\n\n  const bitrate = Number(media.fmtp.parameters.bitrate) || 320000\n  const audioConfigBytes = parseInt(media.fmtp.parameters.config, 16)\n  const audioObjectType = (audioConfigBytes >>> 11) & 0x001f\n\n  return {\n    tkhd: {\n      track_ID: trackId,\n      creation_time: date,\n      modification_time: date,\n      width: 0,\n      height: 0,\n      volume: 1,\n    },\n    mdhd: {\n      timescale: Number(media.rtpmap.clockrate),\n      creation_time: date,\n      modification_time: date,\n      duration: 0,\n    },\n\n    hdlr: {\n      handler_type: 'soun',\n      name: 'SoundHandler\\0', // 00 soundhandler, add 00 if things screws up\n    },\n\n    mediaHeaderBox: new Box('smhd'),\n    sampleEntryBox: new Container(\n      'mp4a',\n      {\n        samplerate: (media.rtpmap.clockrate << 16) >>> 0, // FIXME: Is this  correct?\n      },\n      new Box('esds', {\n        audioConfigBytes, // Converting from hex string to int\n        maxBitRate: bitrate,\n        avgBitRate: bitrate,\n      })\n    ),\n\n    /*\n    https://wiki.multimedia.cx/index.php/Understanding_AAC\n    AAC is a variable bitrate (VBR) block-based codec where each block decodes\n    to 1024 time-domain samples, which means that a single block (or frame?) is\n    1024 ticks long, which we take as default here.\n    */\n    defaultFrameDuration: 1024,\n\n    // MIME type\n    mime: `mp4a.40.${audioObjectType}`,\n    codec: aacEncodingName(audioConfigBytes),\n  }\n}\n", "// Elements: parts of a box that hold values.\n// They should have a:\n// - byteLength\n// - value (can be accessed from outside to set/retrieve)\n// - store(buffer, offset) -> write the value to a buffer\n// - load(buffer, offset) -> read data and store in value\n\nimport { MediaTrack } from '../../../utils/protocols/isom'\n\ntype BufferMutation = (buffer: Buffer, offset: number) => void\n\n// Constants\nconst UINT32_RANGE = Math.pow(2, 32)\n\nabstract class BoxElement {\n  public byteLength: number\n  public value: any\n  abstract copy(buffer: Buffer, offset: number): void\n  abstract load(buffer: Buffer, offset: number): void\n\n  constructor(size: number) {\n    this.byteLength = size\n  }\n}\n\nclass Empty extends BoxElement {\n  constructor(size = 0) {\n    super(size)\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    buffer.fill(0, offset, offset + this.byteLength)\n  }\n\n  load() {\n    /** noop */\n  }\n}\n\nclass CharArray extends BoxElement {\n  public value: string\n\n  constructor(s: string) {\n    super(s.length)\n    this.value = s\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    for (let i = 0; i < this.byteLength; i += 1) {\n      buffer[offset + i] = this.value.charCodeAt(i)\n    }\n  }\n\n  load: BufferMutation = (buffer, offset) => {\n    this.value = buffer\n      .slice(offset, offset + this.byteLength)\n      .toString('ascii')\n  }\n}\n\nclass UInt8 extends BoxElement {\n  public value: number\n\n  constructor(scalar = 0) {\n    super(1)\n    this.value = scalar\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    buffer.writeUInt8(this.value, offset)\n  }\n\n  load: BufferMutation = (buffer, offset) => {\n    this.value = buffer.readUInt8(offset)\n  }\n}\n\nclass UInt8Array extends BoxElement {\n  public value: number[]\n\n  constructor(array: number[]) {\n    super(array.length)\n    this.value = array\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    for (let i = 0; i < this.value.length; ++i) {\n      buffer.writeUInt8(this.value[i], offset + i)\n    }\n  }\n\n  load: BufferMutation = (buffer, offset) => {\n    for (let i = 0; i < this.value.length; ++i) {\n      this.value[i] = buffer.readUInt8(offset + i)\n    }\n  }\n}\n\nclass UInt16BE extends BoxElement {\n  public value: number\n\n  constructor(scalar = 0) {\n    super(2)\n    this.value = scalar\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    buffer.writeUInt16BE(this.value, offset)\n  }\n\n  load: BufferMutation = (buffer, offset) => {\n    this.value = buffer.readUInt16BE(offset)\n  }\n}\n\nclass UInt24BE extends BoxElement {\n  public value: number\n\n  constructor(scalar = 0) {\n    super(3)\n    this.value = scalar\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    buffer.writeUInt8((this.value >> 16) & 0xff, offset)\n    buffer.writeUInt8((this.value >> 8) & 0xff, offset + 1)\n    buffer.writeUInt8(this.value & 0xff, offset + 2)\n  }\n\n  load: BufferMutation = (buffer, offset) => {\n    this.value =\n      (buffer.readUInt8(offset) << (16 + buffer.readUInt8(offset + 1)))\n      << (8 + buffer.readUInt8(offset + 2))\n  }\n}\n\nclass UInt16BEArray extends BoxElement {\n  public value: number[]\n\n  constructor(array: number[]) {\n    super(array.length * 2)\n    this.value = array\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    for (let i = 0; i < this.value.length; ++i) {\n      buffer.writeUInt16BE(this.value[i], offset + 2 * i)\n    }\n  }\n\n  load: BufferMutation = (buffer, offset) => {\n    for (let i = 0; i < this.value.length; ++i) {\n      this.value[i] = buffer.readUInt16BE(offset + 2 * i)\n    }\n  }\n}\n\nclass UInt32BE extends BoxElement {\n  public value: number\n\n  constructor(scalar = 0) {\n    super(4)\n    this.value = scalar\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    buffer.writeUInt32BE(this.value, offset)\n  }\n\n  load: BufferMutation = (buffer, offset) => {\n    this.value = buffer.readUInt32BE(offset)\n  }\n}\n\nclass UInt32BEArray extends BoxElement {\n  public value: number[]\n\n  constructor(array: number[]) {\n    super(array.length * 4)\n    this.value = array\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    for (let i = 0; i < this.value.length; ++i) {\n      buffer.writeUInt32BE(this.value[i], offset + 4 * i)\n    }\n  }\n\n  load: BufferMutation = (buffer, offset) => {\n    for (let i = 0; i < this.value.length; ++i) {\n      this.value[i] = buffer.readUInt32BE(offset + 4 * i)\n    }\n  }\n}\n\nclass UInt64BE extends BoxElement {\n  public value: number\n\n  constructor(scalar = 0) {\n    super(8)\n    this.value = scalar\n  }\n\n  copy: BufferMutation = (buffer, offset) => {\n    const high = (this.value / UINT32_RANGE) | 0\n    const low = this.value - high * UINT32_RANGE\n    buffer.writeUInt32BE(high, offset)\n    buffer.writeUInt32BE(low, offset + 4)\n  }\n\n  load: BufferMutation = (buffer, offset) => {\n    const high = buffer.readUInt32BE(offset)\n    const low = buffer.readUInt32BE(offset + 4)\n    this.value = high * UINT32_RANGE + low\n  }\n}\n\n/**\n * Class factory for a parameter set element. A parameter set groups a size,\n * and an array of parameter sets consisting each of a size and a byte array.\n * These elements are used by the avcC box.\n * @param  [sizeMask=0x00]  A bit mask to use for the size.\n * @return An element type that groups parameter sets.\n */\nconst createParameterSetArrayClass = function(sizeMask = 0x00) {\n  return class ParameterSetArray extends BoxElement {\n    public value: any[]\n    /**\n     * Takes an array of byte-arrays\n     * @param  array The array of byte arrays\n     */\n    constructor(array: number[][]) {\n      super(0)\n      // this.setLengths = array.map((byteArray) => byteArray.length);\n      this.value = array.reduce(\n        (flatArray: any, byteArray) => {\n          return flatArray.concat(\n            new UInt16BE(byteArray.length),\n            new UInt8Array(byteArray)\n          )\n        },\n        [new UInt8(sizeMask | array.length)]\n      )\n      this.byteLength = this.value.reduce(\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        (total, element) => total + element.byteLength,\n        0\n      )\n    }\n\n    copy: BufferMutation = (buffer, offset) => {\n      let i = 0\n      for (const element of this.value) {\n        element.copy(buffer, offset + i)\n        i += element.byteLength\n      }\n    }\n\n    load: BufferMutation = () => {\n      /** noop */\n    }\n  }\n}\n\ninterface BoxSpec {\n  container?: string\n  mandatory?: boolean\n  quantity?: string\n  box: 'Box' | 'FullBox' | 'None'\n  is_container: boolean\n  body?: Array<[string, any, any?]>\n  config?: any\n}\n\n/**\n * Specifications for a selection of ISO BMFF box types.\n *\n * Most of these are defined in ISO/IEC 14496-12,\n * For specific boxes like avc1/avcC/mp4a/esds the exact document is specified\n * with the appropriate box/descriptor.\n *\n * To add a new box, follow the same pattern: you need an object with at least\n * the property 'box' (which is 'Box' or 'FullBox') and for non-container boxes\n * you need also a 'body' property specifying the elements that the box contains.\n * The values assigned to each element in the spec are used as default.\n */\n\nconst BOXSPEC: { [key: string]: BoxSpec } = {\n  // File Type Box\n  ftyp: {\n    container: 'file',\n    mandatory: true,\n    quantity: 'one',\n    box: 'Box',\n    is_container: true,\n    body: [\n      ['major_brand', CharArray, 'isom'],\n      ['minor_version', UInt32BE, 0],\n      ['compatible_brands', CharArray, 'mp41'],\n      // ['compatible_brands1', CharArray, 'iso2'],\n      // ['compatible_brands2', CharArray, 'dash'],\n    ],\n  },\n  // Movie Container\n  moov: {\n    container: 'file',\n    mandatory: true,\n    quantity: 'one',\n    box: 'Box',\n    is_container: true,\n  },\n  // Movie Data Box\n  mdat: {\n    container: 'file',\n    mandatory: false,\n    quantity: 'any',\n    box: 'Box',\n    is_container: false,\n    body: [],\n  },\n  // Movie Header Box\n  mvhd: {\n    container: 'moov',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['creation_time', UInt32BE, 0],\n      ['modification_time', UInt32BE, 0],\n      ['timescale', UInt32BE, 1000], // time-scale for entire presentation, default = milliseconds\n      ['duration', UInt32BE, 0xffffffff], // length of entire presentation, default = undetermined\n      ['rate', UInt32BE, 0x00010000], // fixed point 16.16, preferred playback rate, default = 1.0\n      ['volume', UInt16BE, 0x0100], // fixed point 8.8, preferred playback volume, default = 1.0\n      ['reserved', Empty, 10],\n      // transformation matrix, default = unity\n      [\n        'matrix',\n        UInt32BEArray,\n        [0x00010000, 0, 0, 0, 0x00010000, 0, 0, 0, 0x40000000],\n      ],\n      ['pre_defined', Empty, 24],\n      ['next_track_ID', UInt32BE, 0xffffffff], // next unused track ID, default = unknown\n    ],\n  },\n  // Track Container\n  trak: {\n    container: 'moov',\n    mandatory: true,\n    quantity: 'one+',\n    box: 'Box',\n    is_container: true,\n  },\n  // Track Header Box\n  tkhd: {\n    container: 'trak',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    // Flag values for the track header:\n    // 0x000001 Track_enabled: track enabled (otherwise ignored)\n    // 0x000002 Track_in_movie: track used in presentation\n    // 0x000004 Track_in_preview: used when previewing presentation\n    config: {\n      flags: 0x000003, // track enabled and used in presentation\n    },\n    body: [\n      ['creation_time', UInt32BE, 0],\n      ['modification_time', UInt32BE, 0],\n      ['track_ID', UInt32BE, 1], // Track identifier, cannot be 0\n      ['reserved', Empty, 4],\n      ['duration', UInt32BE, 0], // Duration of track using timescale of mvhd box\n      ['reserved2', Empty, 8],\n      ['layer', UInt16BE, 0], // Front-to-back ordering, lower is closer to viewer\n      ['alternate_group', UInt16BE, 0], // Possible grouping of tracks\n      ['volume', UInt16BE, 0x0100], // Track's relative audio volume 8.8 fixed point\n      ['reserved3', Empty, 2],\n      [\n        'matrix',\n        UInt32BEArray,\n        [0x00010000, 0, 0, 0, 0x00010000, 0, 0, 0, 0x40000000],\n      ],\n      ['width', UInt32BE, 0], // Visual presentation width, 16.16 fixed point\n      ['height', UInt32BE, 0], // Visual presentation height, 16.16 fixed point\n    ],\n  },\n  // Track Reference Box\n  tref: {\n    container: 'trak',\n    mandatory: false,\n    quantity: 'one-',\n    box: 'Box',\n    is_container: false,\n  },\n  // Media Container\n  mdia: {\n    container: 'trak',\n    mandatory: false,\n    quantity: 'one',\n    box: 'Box',\n    is_container: true,\n  },\n  // Media Header Box\n  mdhd: {\n    container: 'mdia',\n    mandatory: false,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['creation_time', UInt32BE, 0],\n      ['modification_time', UInt32BE, 0],\n      ['timescale', UInt32BE, 1000], // time-scale for entire presentation, default = milliseconds\n      ['duration', UInt32BE, 0xffffffff], // length of entire presentation, default = undetermined\n      ['language', UInt16BE, 0], // ISO 639-2 lanugage code, three lower-case letters, stored as\n      ['pre_defined', UInt16BE, 0],\n    ],\n  },\n  // Handler Reference Box\n  hdlr: {\n    container: 'mdia',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['predefined', UInt32BE, 0],\n      ['handler_type', CharArray, 'vide'], // 'vide', 'soun', or 'hint'\n      ['reserved', Empty, 12],\n      ['name', CharArray, 'VideoHandler\\0'],\n    ],\n  },\n  // Media Information Container\n  minf: {\n    container: 'mdia',\n    mandatory: true,\n    quantity: 'one',\n    box: 'Box',\n    is_container: true,\n  },\n  // Video Media Header Box\n  vmhd: {\n    container: 'minf',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    config: {\n      flags: 0x000001,\n    },\n    body: [\n      ['graphicsmode', UInt16BE, 0], // Composition mode of the video track, 0 = overwrite\n      ['opcolor', UInt16BEArray, [0, 0, 0]], // Red green blue, for use by graphics modes\n    ],\n  },\n  // Sound Media Header Box\n  smhd: {\n    container: 'minf',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      // Place mono track in stereo space:\n      //  8.8 fixed point, 0 = center, -1.0 = left, 1.0 = right\n      ['balance', UInt16BE, 0x0000],\n      ['reserved', UInt16BE],\n    ],\n  },\n  // Data Information Container\n  dinf: {\n    container: 'minf',\n    mandatory: true,\n    quantity: 'one',\n    box: 'Box',\n    is_container: true,\n  },\n  // Data Reference Box\n  dref: {\n    // When adding elements to this box, update the entry_count value!\n    container: 'dinf',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: true,\n    body: [\n      ['entry_count', UInt32BE, 0], // Number of entries.\n    ],\n  },\n  'url ': {\n    container: 'dref',\n    mandatory: true,\n    quantity: 'one+',\n    box: 'FullBox',\n    is_container: false,\n    // Flag values:\n    // 0x000001 Local reference, which means empty URL\n    config: {\n      flags: 0x000001,\n    },\n    body: [\n      // ['location', CharArray, ''],\n    ],\n  },\n  // Sample Table Container\n  stbl: {\n    container: 'minf',\n    mandatory: true,\n    quantity: 'one',\n    box: 'Box',\n    is_container: true,\n  },\n  // Decoding Time to Sample Box\n  stts: {\n    container: 'stbl',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['entry_count', UInt32BE, 0],\n      // For each entry these two elements:\n      // ['sample_count', UInt32BE, 0], // Number of consecutive samples with same delta\n      // ['sample_delta', UInt32BE, 0], // Delta of each sample\n    ],\n  },\n  stsd: {\n    container: 'stbl',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: true,\n    body: [\n      ['entry_count', UInt32BE, 1],\n      // For each entry, one of these three boxes depending on the handler:\n      // VisualSampleEntry, AudioSampleEntry, HintSampleEntry\n    ],\n  },\n  /*\n  ISO/IEC 14496-12:2005(E) 8.16.2 (pp. 28)\n  aligned(8) abstract class SampleEntry (unsigned int(32) format)\n    extends Box(format){\n    const unsigned int(8)[6] reserved = 0;\n    unsigned int(16) data_reference_index;\n  }\n  class VisualSampleEntry(codingname) extends SampleEntry (codingname){\n    unsigned int(16) pre_defined = 0;\n    const unsigned int(16) reserved = 0;\n    unsigned int(32)[3] pre_defined = 0;\n    unsigned int(16) width;\n    unsigned int(16) height;\n    template unsigned int(32) horizresolution = 0x00480000; // 72 dpi\n    template unsigned int(32) vertresolution = 0x00480000; // 72 dpi\n    const unsigned int(32) reserved = 0;\n    template unsigned int(16) frame_count = 1;\n    string[32] compressorname;\n    template unsigned int(16) depth = 0x0018;\n    int(16) pre_defined = -1;\n  }\n  ISO/IEC 14496-15:2004(E) 5.3.4.1 (pp. 14)\n  class AVCSampleEntry() extends VisualSampleEntry (\u2018avc1\u2019){\n    AVCConfigurationBox config;\n    MPEG4BitRateBox (); // optional\n    MPEG4ExtensionDescriptorsBox (); // optional\n  }\n  */\n  avc1: {\n    container: 'stsd',\n    mandatory: false,\n    quantity: 'one',\n    box: 'Box',\n    is_container: true,\n    body: [\n      ['reserved', Empty, 6],\n      ['data_reference_index', UInt16BE, 1],\n      ['pre_defined', UInt16BE, 0],\n      ['reserved2', Empty, 2],\n      ['pre_defined2', UInt32BEArray, [0, 0, 0]],\n      ['width', UInt16BE, 1920],\n      ['height', UInt16BE, 1080],\n      ['horizresolution', UInt32BE, 0x00480000],\n      ['vertresolution', UInt32BE, 0x00480000],\n      ['reserved3', UInt32BE, 0],\n      ['frame_count', UInt16BE, 1],\n      ['compressorname', UInt8Array, Buffer.alloc(32)],\n      ['depth', UInt16BE, 0x0018],\n      ['pre_defined3', UInt16BE, 0xffff],\n    ],\n  },\n  /*\n  class AVCConfigurationBox extends Box(\u2018avcC\u2019) {\n    AVCDecoderConfigurationRecord() AVCConfig;\n  }\n  ISO/IEC 14496-15:2004(E) 5.2.4.1.1 (pp. 12)\n  aligned(8) class AVCDecoderConfigurationRecord {\n    unsigned int(8) configurationVersion = 1;\n    unsigned int(8) AVCProfileIndication;\n    unsigned int(8) profile_compatibility;\n    unsigned int(8) AVCLevelIndication;\n    bit(6) reserved = \u2018111111\u2019b;\n    unsigned int(2) lengthSizeMinusOne;\n    bit(3) reserved = \u2018111\u2019b;\n    unsigned int(5) numOfSequenceParameterSets;\n    for (i=0; i< numOfSequenceParameterSets; i++) {\n      unsigned int(16) sequenceParameterSetLength ;\n      bit(8*sequenceParameterSetLength) sequenceParameterSetNALUnit;\n    }\n    unsigned int(8) numOfPictureParameterSets;\n    for (i=0; i< numOfPictureParameterSets; i++) {\n      unsigned int(16) pictureParameterSetLength;\n      bit(8*pictureParameterSetLength) pictureParameterSetNALUnit;\n    }\n  }\n  */\n  avcC: {\n    container: 'avc1',\n    mandatory: false,\n    quantity: 'one',\n    box: 'Box',\n    is_container: false,\n    body: [\n      ['configurationVersion', UInt8, 1],\n      ['AVCProfileIndication', UInt8, 0x4d],\n      ['profile_compatibility', UInt8, 0x00],\n      ['AVCLevelIndication', UInt8, 0x29],\n      // size = reserved 0b111111 + 0b11 NALUnitLength (0b11 = 4-byte)\n      ['lengthSizeMinusOne', UInt8, 0b11111111],\n      // Example SPS (length 20):\n      //   [0x67, 0x4d, 0x00, 0x29, 0xe2, 0x90, 0x0f, 0x00,\n      //    0x44, 0xfc, 0xb8, 0x0b, 0x70, 0x10, 0x10, 0x1a,\n      //    0x41, 0xe2, 0x44, 0x54]\n      // number of sets = reserved 0b111 + number of SPS (0b00001 = 1)\n      // ['numOfSequenceParameterSets', UInt8, 0b11100001],\n      // ['sequenceParameterSetLength', UInt16BE, 0], // Lenght in bytes of the SPS that follows\n      // ['sequenceParameterSetNALUnit', UInt8Array, []],\n      // These are packed in a single custom element:\n      ['sequenceParameterSets', createParameterSetArrayClass(0xe0), []],\n      // Example PPS (length 4):\n      //   [0x68, 0xee, 0x3c, 0x80]\n      // ['numOfPictureParameterSets', UInt8, 1], // number of PPS\n      // ['pictureParameterSetLength', UInt16BE, 0], // Length in bytes of the PPS that follows\n      // ['pictureParameterSetNALUnit', UInt8Array, []]\n      // These are packed in a single custom element:\n      ['pictureParameterSets', createParameterSetArrayClass(), []],\n    ],\n  },\n  /*\n  ISO/IEC 14496-12:2005(E) 8.16.2 (pp. 28)\n  aligned(8) abstract class SampleEntry (unsigned int(32) format)\n    extends Box(format){\n    const unsigned int(8)[6] reserved = 0;\n    unsigned int(16) data_reference_index;\n  }\n  class AudioSampleEntry(codingname) extends SampleEntry (codingname){\n    const unsigned int(32)[2] reserved = 0;\n    template unsigned int(16) channelcount = 2;\n    template unsigned int(16) samplesize = 16;\n    unsigned int(16) pre_defined = 0;\n    const unsigned int(16) reserved = 0 ;\n    template unsigned int(32) samplerate = {timescale of media}<<16;\n  }\n  */\n  mp4a: {\n    container: 'stsd',\n    mandatory: false,\n    quantity: 'one',\n    box: 'Box',\n    is_container: true,\n    body: [\n      ['reserved', Empty, 6],\n      ['data_reference_index', UInt16BE, 1],\n      ['reserved2', UInt32BEArray, [0, 0]],\n      ['channelcount', UInt16BE, 2],\n      ['samplesize', UInt16BE, 16],\n      ['pre_defined', UInt16BE, 0],\n      ['reserved3', UInt16BE, 0],\n      ['samplerate', UInt32BE, 0], // 16.16 bit floating point\n    ],\n  },\n  /* Elementary stream descriptor\n  basic box that holds only an ESDescriptor\n  reference: 'https://developer.apple.com/library/content/documentation/QuickTime/\nQTFF/QTFFChap3/qtff3.html#//apple_ref/doc/uid/TP40000939-CH205-124774'\n  Descriptors have a tag that identifies them, specified in ISO/IEC 14496-1 8.3.12\n  ISO/IEC 14496-1 8.3.3 (pp. 24) ES_Descriptor\n  aligned(8) class ES_Descriptor : bit(8) tag=ES_DescrTag {\n    bit(8) length;\n    bit(16) ES_ID;\n    bit(1) streamDependenceFlag;\n    bit(1) URL_Flag;\n    const bit(1) reserved=1;\n    bit(5) streamPriority;\n    if (streamDependenceFlag)\n      bit(16) dependsOn_ES_ID;\n    if (URL_Flag)\n      bit(8) URLstring[length-3-(streamDependencFlag*2)];\n    ExtensionDescriptor extDescr[0 .. 255];\n    LanguageDescriptor langDescr[0 .. 1];\n    DecoderConfigDescriptor decConfigDescr;\n    SLConfigDescriptor slConfigDescr;\n    IPI_DescPointer ipiPtr[0 .. 1];\n    IP_IdentificationDataSet ipIDS[0 .. 1];\n    QoS_Descriptor qosDescr[0 .. 1];\n  }\n  aligned(8) class DecoderConfigDescriptor\n    : bit(8) tag=DecoderConfigDescrTag {\n    bit(8) length;\n    bit(8) objectProfileIndication;\n    bit(6) streamType;\n    bit(1) upStream;\n    const bit(1) reserved=1;\n    bit(24) bufferSizeDB;\n    bit(32) maxBitrate;\n    bit(32) avgBitrate;\n    DecoderSpecificInfo decSpecificInfo[];\n  }\n  aligned(8) class DecoderSpecificInfoShort extends DecoderSpecificInfo\n  : bit(8) tag=DecSpecificInfoShortTag\n  {\n    bit(8) length;\n    bit(8) specificInfo[length];\n  }\n  aligned(8) class SLConfigDescriptor : bit(8) tag=SLConfigDescrTag {\n    bit(8) length;\n    bit(8) predefined;\n    if (predefined==0) {\n      bit(1) useAccessUnitStartFlag;\n      bit(1) useAccessUnitEndFlag;\n      bit(1) useRandomAccessPointFlag;\n      bit(1) usePaddingFlag;\n      bit(1) useTimeStampsFlag;\n      bit(1) useWallClockTimeStampFlag;\n      bit(1) useIdleFlag;\n      bit(1) durationFlag;\n      bit(32) timeStampResolution;\n      bit(32) OCRResolution;\n      bit(8) timeStampLength; // must be less than 64\n      bit(8) OCRLength;\n      // must be less than 64\n      bit(8) AU_Length;\n      // must be less than 32\n      bit(8) instantBitrateLength;\n      bit(4) degradationPriorityLength;\n      bit(4) seqNumLength;\n      if (durationFlag) {\n        bit(32) timeScale;\n        bit(16) accessUnitDuration;\n        bit(16) compositionUnitDuration;\n      }\n      if (!useTimeStampsFlag) {\n        if (useWallClockTimeStampFlag)\n          double(64) wallClockTimeStamp;\n        bit(timeStampLength) startDecodingTimeStamp;\n        bit(timeStampLength) startCompositionTimeStamp;\n      }\n    }\n    aligned(8) bit(1) OCRstreamFlag;\n    const bit(7) reserved=0b1111.111;\n    if (OCRstreamFlag)\n      bit(16) OCR_ES_Id;\n  }\n  */\n  esds: {\n    container: 'mp4a',\n    mandatory: false,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['ES_DescrTag', UInt8, 3],\n      // length of the remainder of this descriptor in byte,\n      // excluding trailing embedded descriptors.\n      ['ES_DescrLength', UInt8, 25],\n      ['ES_ID', UInt16BE, 1],\n      ['flagsAndStreamPriority', UInt8, 0],\n      ['DecoderConfigDescrTag', UInt8, 4],\n      // length of the remainder of this descriptor in bytes,\n      // excluding trailing embedded descriptors.\n      ['DecoderConfigDescrLength', UInt8, 17],\n      ['objectProfileIndication', UInt8, 0x40],\n      ['streamTypeUpstreamReserved', UInt8, 0x15],\n      ['bufferSizeDB', UInt8Array, [0, 0, 0]],\n      ['maxBitRate', UInt32BE, 0],\n      ['avgBitRate', UInt32BE, 0],\n      ['DecSpecificInfoShortTag', UInt8, 5],\n      ['DecSpecificInfoShortLength', UInt8, 2],\n      ['audioConfigBytes', UInt16BE, 0],\n      ['SLConfigDescrTag', UInt8, 6],\n      ['SLConfigDescrLength', UInt8, 1],\n      ['SLConfigDescrPredefined', UInt8, 0x02], // ISO use\n    ],\n  },\n  // Sample Size Box\n  stsz: {\n    container: 'stbl',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['sample_size', UInt32BE, 0],\n      ['sample_count', UInt32BE, 0],\n      // For each sample up to sample_count, append an entry_size:\n      // ['entry_size', UInt32BE, ],\n    ],\n  },\n  // Sample To Chunk Box\n  stsc: {\n    container: 'stbl',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['entry_count', UInt32BE, 0],\n      // For each entry up to entry_count, append these elements:\n      // ['first_chunk', UInt32BE, ],\n      // ['samples_per_chunk', UInt32BE, ],\n      // ['samples_description_index', UInt32BE, ],\n    ],\n  },\n  // Chunk Offset Box\n  stco: {\n    container: 'stbl',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['entry_count', UInt32BE, 0],\n      // For each entry up to entry_count, append an element:\n      // ['chunk_offset', UInt32BE, ],\n    ],\n  },\n  // Sync Sample Box\n  stss: {\n    container: 'stbl',\n    mandatory: false,\n    quantity: 'one-',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['entry_count', UInt32BE, 0],\n      // For each entry up to entry_count, append an element:\n      // ['sample_number', UInt32BE, ],\n    ],\n  },\n  // Edit Box\n  edts: {\n    container: 'trak',\n    mandatory: false,\n    quantity: 'one-',\n    box: 'Box',\n    is_container: true,\n  },\n  // Edit List Box\n  elst: {\n    container: 'edts',\n    mandatory: false,\n    quantity: 'one-',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['entry_count', UInt32BE, 1],\n      ['segment_duration', UInt32BE, 0],\n      ['media_time', UInt32BE, 0xffffffff],\n      ['media_rate_integer', UInt16BE, 1],\n      ['media_rate_fraction', UInt16BE, 0],\n    ],\n  },\n  mvex: {\n    container: 'moov',\n    mandatory: false,\n    quantity: 'one-',\n    box: 'Box',\n    is_container: true,\n  },\n  mehd: {\n    container: 'mvex',\n    mandatory: false,\n    quantity: 'one-',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['fragment_duration', UInt32BE, 0], // Total duration of movie\n    ],\n  },\n  trex: {\n    container: 'mvex',\n    mandatory: true,\n    quantity: 'one+',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['track_ID', UInt32BE, 1], // The track to which this data is applicable\n      ['default_sample_description_index', UInt32BE, 1],\n      ['default_sample_duration', UInt32BE, 0],\n      ['default_sample_size', UInt32BE, 0],\n      ['default_sample_flags', UInt32BE, 0],\n    ],\n  },\n  moof: {\n    container: 'file',\n    mandatory: false,\n    quantity: 'zero+',\n    box: 'Box',\n    is_container: false,\n  },\n  mfhd: {\n    container: 'moof',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    body: [\n      ['sequence_number', UInt32BE, 0], // A number associated with this fragment\n    ],\n  },\n  traf: {\n    container: 'moof',\n    mandatory: false,\n    quantity: 'zero+',\n    box: 'Box',\n    is_container: true,\n  },\n  tfhd: {\n    container: 'traf',\n    mandatory: true,\n    quantity: 'one',\n    box: 'FullBox',\n    is_container: false,\n    // Flag values for the track fragment header:\n    // 0x000001 base-data-offset-present\n    // 0x000002 sample-description-index-present\n    // 0x000008 default-sample-duration-present\n    // 0x000010 default-sample-size-present\n    // 0x000020 default-sample-flags-present\n    // 0x010000 duration-is-empty\n    // 0x020000 default-base-is-moof\n    config: {\n      flags: 0x000020, // default sample flags present\n    },\n    body: [\n      ['track_ID', UInt32BE, 1], // The track to which this data is applicable\n      // ['base_data_offset', UInt64BE, 0],\n      // ['default_sample_description_index', UInt32BE, 0],\n      // ['default_sample_duration', UInt32BE, 0],\n      // ['default_sample_size', UInt32BE, 0],\n      ['default_sample_flags', UInt32BE, 0],\n    ],\n  },\n  tfdt: {\n    container: 'traf',\n    mandatory: false,\n    quantity: 'one-',\n    box: 'FullBox',\n    is_container: false,\n    config: {\n      version: 1, // Version 1 uses 64-bit value for baseMediaDecodeTime\n    },\n    body: [['baseMediaDecodeTime', UInt64BE, 0]],\n  },\n  trun: {\n    container: 'traf',\n    mandatory: false,\n    quantity: 'zero+',\n    box: 'FullBox',\n    is_container: false,\n    // Flag values for the track fragment header:\n    // 0x000001 data-offset-present\n    // 0x000004 first-sample-flags-present\n    // 0x000100 sample-duration-present\n    // 0x000200 sample-size-present\n    // 0x000400 sample-flags-present\n    // 0x000800 sample-composition-time-offsets-present\n    config: {\n      flags: 0x000305, // default sample flags present\n    },\n    body: [\n      ['sample_count', UInt32BE, 1], // How many samples there are\n      ['data_offset', UInt32BE, 0],\n      ['first_sample_flags', UInt32BE, 0],\n      ['sample_duration', UInt32BE, 0],\n      ['sample_size', UInt32BE, 0],\n      // ['sample_flags', UInt32BE, 0],\n      // ['sample_composition_time_offset', UInt32BE, 0],\n    ],\n  },\n  // Unknown Box, used for parsing\n  '....': {\n    box: 'Box',\n    is_container: false,\n    body: [],\n  },\n  // File Box, special box without any headers\n  file: {\n    box: 'None',\n    is_container: true,\n    mandatory: true,\n    quantity: 'one',\n  },\n}\n\n/**\n * Helper functions to generate some standard elements that are needed by\n * all types of boxes.\n * All boxes have a length and type, where so-called full boxes have an\n * additional 4-bytes (1-byte version and 3-byte flags fields).\n */\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nclass Header {\n  static None() {\n    return []\n  }\n\n  static Box(type: string) {\n    return [\n      ['size', UInt32BE, 0],\n      ['type', CharArray, type],\n    ]\n  }\n\n  static FullBox(type: string) {\n    return ([] as any).concat(this.Box(type), [\n      ['version', UInt8, 0x00],\n      ['flags', UInt24BE, 0x000000],\n    ])\n  }\n}\n\n/**\n * Box class.\n *\n * Defines a box as an entity similar to a C struct, where the struct is\n * represented by a Map of elements.\n * Each element is an object with at least:\n *  - a 'byteLength' property (size of element in bytes)\n *  - a 'copy' method (BufferMutation signature)\n */\nexport class Box extends BoxElement {\n  public type: string\n  public config: { [key: string]: any }\n  public struct: Map<\n    string,\n    {\n      offset: number\n      element: {\n        value?: any\n        byteLength: number\n        copy: BufferMutation\n        load?: BufferMutation\n        format?: (indent?: number) => string\n      }\n    }\n  >\n\n  /**\n   * Create a new Box.\n   * @param  type   4-character ASCII string\n   * @param  config Configuration holding (key: value) fields\n   */\n  constructor(type: string, config?: { [key: string]: any }) {\n    super(0)\n    this.type = type\n    const spec = BOXSPEC[this.type]\n    if (spec === undefined) {\n      throw new Error(`unknown box type: ${type}`)\n    }\n    this.config = Object.assign({}, spec.config, config)\n    const header = Header[spec.box](this.type)\n    const body = spec.body || []\n    // Uglify changes the name of the original class, so this doesn't work.\n    // TODO: find a better way to check for this.\n    // if (spec.body === undefined && this.constructor.name !== 'Container') {\n    //   throw new Error(`Body missing but '${type}' is not a container box`);\n    // }\n\n    // Initialize all elements, an element is something with a byteLength\n    this.struct = new Map()\n    let offset = 0\n    for (const [key, Type, defaultValue] of ([] as any).concat(header, body)) {\n      if (this.has(key)) {\n        throw new Error('Trying to add existing key')\n      }\n      let value = defaultValue\n      if (this.config[key]) {\n        value = this.config[key]\n      }\n      const element = new Type(value)\n      this.struct.set(key, { offset, element })\n      offset += element.byteLength\n    }\n\n    this.byteLength = offset\n  }\n\n  /**\n   * Get access to an element based on it's name.\n   * @param  key The element's name\n   * @return Object with 'byteLength' property and 'copy' method\n   */\n  element(key: string) {\n    const value = this.struct.get(key)\n    if (value === undefined) {\n      throw new Error('invalid key')\n    }\n    return value.element\n  }\n\n  /**\n   * Set an element's value.\n   * @param  key The element's name\n   * @param  value The element's (new) value\n   */\n  set(key: string, value: any) {\n    this.element(key).value = value\n  }\n\n  /**\n   * Get an element's value.\n   * @param  key The element's name\n   * @return The element's value\n   */\n  get(key: string) {\n    return this.element(key).value\n  }\n\n  /**\n   * Get an element's offset.\n   * @param  key The element's name\n   * @return The element's offset\n   */\n  offset(key: string) {\n    const value = this.struct.get(key)\n    if (value === undefined) {\n      throw new Error('invalid key')\n    }\n    return value.offset\n  }\n\n  /**\n   * Check if a certain element exists\n   * @param  key The element's name\n   * @return true if the element is known, false if not\n   */\n  has(key: string) {\n    return this.struct.has(key)\n  }\n\n  /**\n   * Add a new element to the box.\n   * @param key     A _new_ non-existing element name.\n   * @param element Something with a 'byteLength' property and 'copy' method.\n   * @return this box, so that 'add' can be used in a chain\n   */\n  add(key: string, element: BoxElement | Buffer) {\n    if (this.has(key)) {\n      throw new Error('Trying to add existing key')\n    }\n    this.struct.set(key, { offset: this.byteLength, element })\n    this.byteLength += element.byteLength\n    return this\n  }\n\n  /**\n   * Create a buffer and copy all element values to it.\n   * @return Data representing the box.\n   */\n  buffer() {\n    const buffer = Buffer.allocUnsafe(this.byteLength)\n    this.copy(buffer)\n    return buffer\n  }\n\n  /**\n   * Copy all values of the box into an existing buffer.\n   * @param  buffer     The target buffer to accept the box data\n   * @param  [offset=0] The number of bytes into the target to start at.\n   */\n  copy(buffer: Buffer, offset = 0) {\n    // Before writing, make sure the size property is set correctly.\n    this.set('size', this.byteLength)\n    for (const entry of this.struct.values()) {\n      entry.element.copy(buffer, offset + entry.offset)\n    }\n  }\n\n  /**\n   * Read element values from a box's data representation.\n   * @param  buffer     The source buffer with box data\n   * @param  [offset=0] The number of bytes into the source to start at.\n   */\n  load(buffer: Buffer, offset = 0) {\n    for (const entry of this.struct.values()) {\n      if (entry.element.load !== undefined) {\n        entry.element.load(buffer, offset + entry.offset)\n      }\n    }\n  }\n\n  /**\n   * Pretty-format an entire box as an element/box hierarchy.\n   * @param  [indent=0] How large an indentation to use for the hierarchy\n   */\n  format(indent = 0) {\n    const lines = [`${' '.repeat(indent)}[${this.type}] (${this.byteLength})`]\n    for (const [key, entry] of this.struct) {\n      const element = entry.element\n      if (element.format !== undefined) {\n        lines.push(element.format(indent + 2))\n      } else {\n        lines.push(\n          `${\n            ' '.repeat(indent + 2)\n          }${key} = ${element.value} (${element.byteLength})`\n        )\n      }\n    }\n    return lines.join('\\n')\n  }\n\n  /**\n   * Pretty-print an entire box as an element/box hierarchy.\n   * @param  [indent=0] How large an indentation to use for the hierarchy\n   */\n  print(indent: number) {\n    console.warn(this.format(indent))\n  }\n}\n\n/**\n * Container class\n *\n * special box with an 'add' method which allows appending of other boxes,\n * and a 'parse' method to extract contained boxes.\n */\nexport class Container extends Box {\n  public boxSize: number\n  /**\n   * Create a new container box\n   * @param  type   4-character ASCII string\n   * @param  config Configuration holding (key: value) fields\n   * @param  boxes  One or more boxes to append.\n   */\n  constructor(type: string, config?: { [key: string]: any }, ...boxes: Box[]) {\n    super(type, config)\n    this.boxSize = 0\n    this.append(...boxes)\n  }\n\n  /**\n   * Add one or more boxes to the container.\n   * @param boxes The box(es) to append\n   * @return this container, so that add can be used in a chain\n   */\n  append(...boxes: Box[]) {\n    for (const box of boxes) {\n      this.add(`box_${this.boxSize++}`, box)\n    }\n    return this\n  }\n\n  /**\n   * Parse a container box by looking for boxes that it contains, and\n   * recursively proceed when it is another container.\n   *\n   * FIXME: this cannot properly handle different versions of the FullBox,\n   * currenlty the loader is hardcoded to the version used in this file.\n   * Also, appearance of an esds box is assumed to be AAC audio information,\n   * while the avcC box signals H.264 video information.\n   *\n   * @param  data The data to parse.\n   */\n  parse(data: Buffer) {\n    const tracks: MediaTrack[] = []\n    while (data.byteLength > 0) {\n      const type = new CharArray('....')\n      type.load(data, 4)\n      const boxType = type.value\n      const spec = BOXSPEC[boxType]\n      let box\n      if (spec !== undefined) {\n        if (spec.is_container) {\n          box = new Container(boxType)\n          box.load(data)\n          const boxTracks = box.parse(\n            data.slice(box.byteLength, box.get('size'))\n          )\n          tracks.push(...boxTracks)\n        } else {\n          box = new Box(boxType)\n          box.load(data)\n          // Handle 2 kinds of tracks with streaming MP4: video or audio\n          if (boxType === 'avcC') {\n            const profile = box\n              .element('AVCProfileIndication')\n              .value.toString(16)\n              .padStart(2, 0)\n            const compat = box\n              .element('profile_compatibility')\n              .value.toString(16)\n              .padStart(2, 0)\n            const level = box\n              .element('AVCLevelIndication')\n              .value.toString(16)\n              .padStart(2, 0)\n            tracks.push({\n              type: 'video',\n              mime: `avc1.${profile}${compat}${level}`,\n            })\n          } else if (boxType === 'esds') {\n            const audioConfigBytes = box.element('audioConfigBytes').value\n            const objectTypeIndication = (audioConfigBytes >>> 11) & 0x001f\n            tracks.push({\n              type: 'audio',\n              mime: `mp4a.40.${objectTypeIndication}`,\n            })\n          }\n        }\n      } else {\n        box = new Box('....')\n        box.load(data)\n        box.type = box.get('type')\n      }\n      this.append(box)\n      data = data.slice(box.get('size'))\n    }\n    return tracks\n  }\n}\n", "import { H264Media } from '../../../utils/protocols/sdp'\n\nimport { Box, Container } from './isom'\nimport { SPSParser } from './spsparser'\nimport { base64DecToArr } from './utils'\n\nconst PROFILE_NAMES: { [key: number]: string } = {\n  66: 'Baseline',\n  77: 'Main',\n  100: 'High',\n}\n\nconst h264EncodingName = (profileLevelId: string) => {\n  const profileCode = parseInt(profileLevelId.substr(0, 2), 16)\n  const levelCode = parseInt(profileLevelId.substr(4, 2), 16)\n\n  const profile = PROFILE_NAMES[profileCode] || profileCode.toString()\n  const level = (levelCode / 10).toFixed(1)\n\n  return {\n    coding: 'H.264',\n    profile,\n    level,\n  }\n}\n\nexport const h264Settings = (\n  media: H264Media,\n  date: number,\n  trackId: number\n) => {\n  /*\n   * Example SDP media segment for H264 audio:\n   *\n\n   {\n     \"type\": \"video\",\n     \"port\": \"0\",\n     \"proto\": \"RTP/AVP\",\n     \"fmt\": \"96\",\n     \"connectionData\": {\n       \"netType\": \"IN\",\n       \"addrType\": \"IP4\",\n       \"connectionAddress\": \"0.0.0.0\"\n     },\n     \"bwtype\": \"AS\",\n     \"bandwidth\": \"50000\",\n     \"rtpmap\": {\n       \"payloadType\": \"96\",\n       \"encodingName\": \"H264\",\n       \"clockrate\": \"90000\"\n     },\n     \"fmtp\": {\n       \"format\": \"96\",\n       \"parameters\": {\n         \"packetization-mode\": \"1\",\n         \"profile-level-id\": \"4d0029\",\n         \"sprop-parameter-sets\": \"Z00AKeKQDwBE/LgLcBAQGkHiRFQ=,aO48gA==\"\n       }\n     },\n     \"control\": \"rtsp://hostname/axis-media/media.amp/stream=0?audio=1\",\n     \"framerate\": \"25.000000\",\n     \"transform\": [[1,0,0],[0,1,0],[0,0,1]]\n   },\n\n   */\n\n  const profileLevelId = media.fmtp.parameters['profile-level-id']\n  const parameterSets = media.fmtp.parameters['sprop-parameter-sets']\n    .split(',')\n    .map(base64DecToArr)\n\n  // We assume the first set is _the_ SPS (no support for multiple).\n  const sps = parameterSets.slice(0, 1)\n  // The remaining sets are all PPS to support more than one.\n  const pps = parameterSets.slice(1)\n\n  const parsedSps = new SPSParser(sps[0].buffer).parse()\n  // If media framerate is missing in SDP, it is not possible to calculate\n  // the frame duration. Use a fallback value (90000 Hz / 25 fps)\n  const FALLBACK_FRAME_DURATION = 3600\n  return {\n    mediaHeaderBox: new Box('vmhd'),\n    sampleEntryBox: new Container(\n      'avc1',\n      {\n        width: parsedSps.width,\n        height: parsedSps.height,\n      },\n      new Box('avcC', {\n        AVCProfileIndication: sps[0][1],\n        profile_compatibility: sps[0][2],\n        AVCLevelIndication: sps[0][3],\n        sequenceParameterSets: sps,\n        pictureParameterSets: pps,\n      })\n    ),\n    tkhd: {\n      track_ID: trackId,\n      creation_time: date,\n      modification_time: date,\n      width: parsedSps.width << 16,\n      height: parsedSps.height << 16,\n      volume: 0,\n    },\n    hdlr: {},\n    mdhd: {\n      timescale: media.rtpmap.clockrate,\n      creation_time: date,\n      modification_time: date,\n      duration: 0,\n    },\n\n    // (ticks / s) / (frames / s) = ticks / frame, e.g. frame duration in ticks\n    defaultFrameDuration: media.framerate !== undefined && media.framerate > 0\n      ? Number(media.rtpmap.clockrate) / Number(media.framerate)\n        || FALLBACK_FRAME_DURATION\n      : FALLBACK_FRAME_DURATION,\n    // MIME type\n    mime: `avc1.${profileLevelId}`,\n    codec: h264EncodingName(profileLevelId),\n  }\n}\n", "import { BufferReader } from './bufferreader'\n\nexport class SPSParser {\n  public reader: BufferReader\n\n  constructor(buffer: Buffer) {\n    this.reader = new BufferReader(buffer)\n  }\n\n  parse() {\n    // nalhdr\n    this.reader.readNext()\n    const profile = this.reader.readNext()\n    // constraints\n    this.reader.readNext()\n    const level = this.reader.readNext()\n\n    // seqParameterSetId\n    this.reader.readUnsignedExpGolomb()\n\n    if ([100, 110, 122, 244, 44, 83, 86, 118].includes(profile)) {\n      const chromaFormat = this.reader.readUnsignedExpGolomb()\n      if (chromaFormat === 3) {\n        // Separate color plane flag\n        this.reader.readBits(1)\n      }\n\n      // bitDepthLumaMinus8\n      this.reader.readUnsignedExpGolomb()\n\n      // bitDepthChromaMinus8\n      this.reader.readUnsignedExpGolomb()\n\n      // qpPrimeYZeroTransformBypassFlag\n      this.reader.readBits(1)\n      const seqScalingMatrix = this.reader.readBits(1)\n      if (seqScalingMatrix) {\n        for (let k = 0; k < (chromaFormat !== 3 ? 8 : 12); k++) {\n          // seqScalingListPresentFlag\n          this.reader.readBits(1)\n          // TODO: More logic goes here..\n        }\n      }\n    }\n\n    // log2MaxFrameNumMinus4\n    this.reader.readUnsignedExpGolomb()\n    const picOrderCntType = this.reader.readUnsignedExpGolomb()\n    if (picOrderCntType === 0) {\n      // log2MaxPicOrderCntLsbMinus4\n      this.reader.readUnsignedExpGolomb()\n    } else if (picOrderCntType === 1) {\n      let numRefFramesInPic = 0\n      this.reader.readBits(1)\n      this.reader.readSignedExpGolomb()\n      this.reader.readSignedExpGolomb()\n      numRefFramesInPic = this.reader.readUnsignedExpGolomb()\n      for (let i = 0; i < numRefFramesInPic; i++) {\n        this.reader.readSignedExpGolomb()\n      }\n    }\n\n    // maxNumRefFrames\n    this.reader.readUnsignedExpGolomb()\n    // gapsInFrameNumValueAllowedFlag\n    this.reader.readBits(1)\n    const picWidthInMbsMinus1 = this.reader.readUnsignedExpGolomb()\n    const picHeightInMapUnitsMinus1 = this.reader.readUnsignedExpGolomb()\n    const picFrameMbsOnlyFlag = this.reader.readBits(1)\n    // direct8x8InferenceFlag\n    this.reader.readBits(1)\n    const frameCroppingFlag = this.reader.readBits(1)\n\n    const frameCropLeftOffset = frameCroppingFlag\n      ? this.reader.readUnsignedExpGolomb()\n      : 0\n    const frameCropRightOffset = frameCroppingFlag\n      ? this.reader.readUnsignedExpGolomb()\n      : 0\n    const frameCropTopOffset = frameCroppingFlag\n      ? this.reader.readUnsignedExpGolomb()\n      : 0\n    const frameCropBottomOffset = frameCroppingFlag\n      ? this.reader.readUnsignedExpGolomb()\n      : 0\n\n    const w = (picWidthInMbsMinus1 + 1) * 16\n      - frameCropLeftOffset * 2\n      - frameCropRightOffset * 2\n    const h = (2 - picFrameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16\n      - frameCropTopOffset * 2\n      - frameCropBottomOffset * 2\n\n    return {\n      profile,\n      level: level / 10.0,\n      width: w,\n      height: h,\n    }\n  }\n}\n", "/**\n * Defines functions for reading from a binary buffer. Works similair to the\n * DataView object, but uses bitshifts instead for performance.\n * @class BufferReader\n * @constructor\n * @param buffer - An ArrayBuffer to be read from.\n */\nexport class BufferReader {\n  private readonly _buffer: ArrayBuffer\n  private readonly _dataView: DataView\n  private _offset: number\n  private _bitpos: number\n  private _byte: number\n\n  constructor(buffer: Buffer) {\n    this._buffer = buffer\n    this._dataView = new DataView(this._buffer)\n    this._offset = 0\n    this._bitpos = 0\n    this._byte = 0\n  }\n\n  /**\n   * Reads 8-bit of data from the buffer.\n   * @method readUint8\n   * @param  offset - Index in the buffer.\n   * @return An unsigned 8-bit integer.\n   */\n  readUint8(offset: number) {\n    return this._dataView.getUint8(offset)\n  }\n\n  /**\n   * Reads 16-bit of data from the buffer.\n   * @method readUint16\n   * @param  offset - Index in the buffer.\n   * @return An unsigned 16-bit integer.\n   */\n  readUint16(offset: number) {\n    return this._dataView.getUint16(offset)\n  }\n\n  /**\n   * Reads 32-bit of data from the buffer.\n   * @method readUint32\n   * @param  offset - Index in the buffer.\n   * @return An unsigned 32-bit integer.\n   */\n  readUint32(offset: number) {\n    return this._dataView.getUint32(offset)\n  }\n\n  /**\n   * Reads the next byte of data from the buffer and increaments the offset.\n   * @method readNext\n   * @return {Number} An unsigned 8-bit integer.\n   */\n  readNext() {\n    const value = this.readUint8(this._offset)\n    this._offset += 1\n    return value\n  }\n\n  readBits(length: number) {\n    if (length > 32 || length === 0) {\n      throw new Error('length has to be between 0 - 31 bits')\n    }\n\n    let result = 0\n    for (let i = 1; i <= length; ++i) {\n      if (this._bitpos === 0) {\n        /* Previous byte all read out. Get a new one. */\n        this._byte = this.readNext()\n      }\n      /* Shift result one left to make room for another bit,\n      then add the next bit on the stream. */\n      result = (result << 1) | ((this._byte >> (8 - ++this._bitpos)) & 0x01)\n      this._bitpos %= 8\n    }\n\n    return result\n  }\n\n  readUnsignedExpGolomb() {\n    let bitsToRead = 0\n    while (this.readBits(1) !== 1) {\n      bitsToRead++\n    }\n\n    if (bitsToRead === 0) {\n      return 0 /* Easy peasy, just a single 1. This is 0 in exp golomb */\n    }\n\n    if (bitsToRead >= 31) {\n      throw new Error('read unsigned exponential Golomb: internal error')\n    }\n\n    /* Read all bits part of this number */\n    let n = this.readBits(bitsToRead)\n    /* Move in the 1 read by while-statement above */\n    n |= 0x1 << bitsToRead\n\n    return n - 1 /* Because result in exp golomb is one larger */\n  }\n\n  readSignedExpGolomb() {\n    let r = this.readUnsignedExpGolomb()\n    if (r & 0x01) {\n      r = (r + 1) >> 1\n    } else {\n      r = -(r >> 1)\n    }\n    return r\n  }\n\n  /**\n   * Returns the size of the buffer\n   * @method readSize\n   * @return {Number} The buffer size.\n   */\n  size() {\n    return this._buffer.byteLength\n  }\n\n  /**\n   * Returns an instance of the buffer as an unsigned 8-bit integer array.\n   * @method getUint8Array\n   * @return {Uint8Array} Unsigned 8-bit integer representation of the buffer\n   */\n  getUint8Array() {\n    return new Uint8Array(this._buffer)\n  }\n\n  /**\n   * Returns the buffer object\n   * @method getArrayBuffer\n   * @return {ArrayBuffer} The buffer used the BufferReader\n   */\n  getArrayBuffer() {\n    return this._buffer\n  }\n}\n", "export function b64ToUint6(nChr: number) {\n  return nChr > 64 && nChr < 91\n    ? nChr - 65\n    : nChr > 96 && nChr < 123\n    ? nChr - 71\n    : nChr > 47 && nChr < 58\n    ? nChr + 4\n    : nChr === 43\n    ? 62\n    : nChr === 47\n    ? 63\n    : 0\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Base64_encoding_and_decoding\nexport function base64DecToArr(sBase64: string, nBlocksSize: number) {\n  const sB64Enc = sBase64.replace(/[^A-Za-z0-9+/]/g, '')\n  const nInLen = sB64Enc.length\n  const nOutLen = nBlocksSize\n    ? Math.ceil(((nInLen * 3 + 1) >> 2) / nBlocksSize) * nBlocksSize\n    : (nInLen * 3 + 1) >> 2\n  const taBytes = new Uint8Array(nOutLen)\n\n  let nMod3\n  let nMod4\n  let nUint24 = 0\n  let nOutIdx = 0\n  for (let nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n    nMod4 = nInIdx & 3\n    nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << (18 - 6 * nMod4)\n    if (nMod4 === 3 || nInLen - nInIdx === 1) {\n      for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n        taBytes[nOutIdx] = (nUint24 >>> ((16 >>> nMod3) & 24)) & 255\n      }\n      nUint24 = 0\n    }\n  }\n\n  return taBytes\n}\n", "import registerDebug from 'debug'\n\nimport { Readable, Writable } from 'stream'\n\nimport { MediaTrack } from '../../utils/protocols/isom'\nimport { isRtcpBye } from '../../utils/protocols/rtcp'\nimport { Sink } from '../component'\nimport { Message, MessageType } from '../message'\n\nconst TRIGGER_THRESHOLD = 100\n\nconst debug = registerDebug('msl:mse')\n\nexport class MseSink extends Sink {\n  private readonly _videoEl: HTMLVideoElement\n  private _done?: () => void\n  private _lastCheckpointTime: number\n\n  public onSourceOpen?: (mse: MediaSource, tracks: MediaTrack[]) => void\n\n  /**\n   * Create a Media component.\n   *\n   * The constructor sets up two streams and connects them to the MediaSource.\n   *\n   * @param el - A video element to connect the media source to\n   */\n  constructor(el: HTMLVideoElement) {\n    if (el === undefined) {\n      throw new Error('video element argument missing')\n    }\n\n    let mse: MediaSource | undefined\n    let sourceBuffer: SourceBuffer | undefined\n\n    /**\n     * Set up an incoming stream and attach it to the sourceBuffer.\n     */\n    const incoming = new Writable({\n      objectMode: true,\n      write: (msg: Message, _, callback) => {\n        if (msg.type === MessageType.ISOM) {\n          // ISO BMFF Byte Stream data to be added to the source buffer\n          this._done = callback\n\n          if (msg.tracks !== undefined || msg.mime !== undefined) {\n            const tracks = msg.tracks ?? []\n            // MIME codecs: https://tools.ietf.org/html/rfc6381\n            const mimeCodecs = tracks\n              .map((track) => track.mime)\n              .filter((mime) => mime)\n            const codecs = mimeCodecs.length !== 0\n              ? mimeCodecs.join(', ')\n              : 'avc1.640029, mp4a.40.2'\n\n            // Take MIME type directly from the message, or constructed\n            // from the tracks (with a default fallback to basic H.264).\n            const mimeType = msg.mime ?? `video/mp4; codecs=\"${codecs}\"`\n\n            if (!MediaSource.isTypeSupported(mimeType)) {\n              incoming.emit('error', `unsupported media type: ${mimeType}`)\n              return\n            }\n\n            // Start a new movie (new SDP info available)\n            this._lastCheckpointTime = 0\n\n            // Start a new mediaSource and prepare it with a sourceBuffer.\n            // When ready, this component's .onSourceOpen callback will be called\n            // with the mediaSource, and a list of valid/ignored media.\n            mse = new MediaSource()\n            el.src = window.URL.createObjectURL(mse)\n            const handler = () => {\n              if (mse === undefined) {\n                incoming.emit('error', 'no MediaSource instance')\n                return\n              }\n              // revoke the object URL to avoid a memory leak\n              window.URL.revokeObjectURL(el.src)\n\n              mse.removeEventListener('sourceopen', handler)\n              this.onSourceOpen && this.onSourceOpen(mse, tracks)\n\n              sourceBuffer = this.addSourceBuffer(el, mse, mimeType)\n              sourceBuffer.onerror = (e) => {\n                console.error('error on SourceBuffer: ', e)\n                incoming.emit('error')\n              }\n              try {\n                sourceBuffer.appendBuffer(msg.data)\n              } catch (err) {\n                debug('failed to append to SourceBuffer: ', err, msg)\n              }\n            }\n            mse.addEventListener('sourceopen', handler)\n          } else {\n            // Continue current movie\n            this._lastCheckpointTime = msg.checkpointTime !== undefined\n              ? msg.checkpointTime\n              : this._lastCheckpointTime\n\n            try {\n              sourceBuffer?.appendBuffer(msg.data)\n            } catch (e) {\n              debug('failed to append to SourceBuffer: ', e, msg)\n            }\n          }\n        } else if (msg.type === MessageType.RTCP) {\n          if (isRtcpBye(msg.rtcp)) {\n            mse?.readyState === 'open' && mse.endOfStream()\n          }\n          callback()\n        } else {\n          callback()\n        }\n      },\n    })\n\n    incoming.on('finish', () => {\n      console.warn('incoming stream finished: end stream')\n      mse && mse.readyState === 'open' && mse.endOfStream()\n    })\n\n    // When an error is sent on the incoming stream, close it.\n    incoming.on('error', (msg: string) => {\n      console.error('error on incoming stream: ', msg)\n      if (sourceBuffer && sourceBuffer.updating) {\n        sourceBuffer.addEventListener('updateend', () => {\n          mse?.readyState === 'open' && mse.endOfStream()\n        })\n      } else {\n        mse?.readyState === 'open' && mse.endOfStream()\n      }\n    })\n\n    /**\n     * Set up outgoing stream.\n     */\n    const outgoing = new Readable({\n      objectMode: true,\n      read() {\n        //\n      },\n    })\n\n    // When an error is sent on the outgoing stream, whine about it.\n    outgoing.on('error', () => {\n      console.warn('outgoing stream broke somewhere')\n    })\n\n    /**\n     * initialize the component.\n     */\n    super(incoming, outgoing)\n\n    this._videoEl = el\n    this._lastCheckpointTime = 0\n  }\n\n  /**\n   * Add a new sourceBuffer to the mediaSource and remove old ones.\n   * @param el - The media element holding the media source.\n   * @param mse - The media source the buffer should be attached to.\n   * @param mimeType - MIME type and codecs, e.g.: 'video/mp4; codecs=\"avc1.4D0029, mp4a.40.2\"'\n   */\n  addSourceBuffer(\n    el: HTMLVideoElement,\n    mse: MediaSource,\n    mimeType: string\n  ): SourceBuffer {\n    const sourceBuffer = mse.addSourceBuffer(mimeType)\n\n    let trigger = 0\n    const onUpdateEndHandler = () => {\n      ;++trigger\n\n      if (trigger > TRIGGER_THRESHOLD && sourceBuffer.buffered.length) {\n        trigger = 0\n\n        const index = sourceBuffer.buffered.length - 1\n        const start = sourceBuffer.buffered.start(index)\n        const end = Math.min(el.currentTime, this._lastCheckpointTime) - 10\n        try {\n          // remove all material up to 10 seconds before current time\n          if (end > start) {\n            sourceBuffer.remove(start, end)\n\n            return // this._done() will be called on the next updateend event!\n          }\n        } catch (e) {\n          console.warn(e)\n        }\n      }\n      this._done && this._done()\n    }\n    sourceBuffer.addEventListener('updateend', onUpdateEndHandler)\n\n    return sourceBuffer\n  }\n\n  get currentTime(): number {\n    return this._videoEl.currentTime\n  }\n\n  async play(): Promise<void> {\n    return await this._videoEl.play()\n  }\n\n  pause(): void {\n    return this._videoEl.pause()\n  }\n}\n", "import { MessageType, RtcpMessage } from '../../components/message'\nimport { POS } from '../bits'\n\n// Real Time Control Protocol (RTCP)\n// https://tools.ietf.org/html/rfc3550#section-6\n\n/*\nCommon RTCP packed header:\n\n        0                   1                   2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nheader |V=2|P|    RC   |   PT=SR=200   |             length            |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n*/\nexport enum RTCPPacketType {\n  SR = 200,\n  RR = 201,\n  SDES = 202,\n  BYE = 203,\n  APP = 204,\n}\n\nexport interface Rtcp {\n  readonly version: number\n  readonly padding: boolean\n  readonly count: number\n  readonly packetType: RTCPPacketType | number\n  readonly length: number\n}\n\nconst parseBase = (buffer: Buffer): Rtcp => ({\n  version: buffer[0] >>> 6,\n  padding: !!(buffer[0] & POS[2]),\n  count: buffer[0] & 0x1f,\n  packetType: buffer.readUInt8(1),\n  length: buffer.readUInt16BE(2),\n})\n\nexport const parseRtcp = (\n  buffer: Buffer\n): Rtcp | RtcpSR | RtcpRR | RtcpSDES | RtcpBye | RtcpApp => {\n  const base = parseBase(buffer)\n\n  switch (base.packetType) {\n    case RTCPPacketType.SR:\n      return parseSR(buffer, base)\n    case RTCPPacketType.RR:\n      return parseRR(buffer, base)\n    case RTCPPacketType.SDES:\n      return parseSDES(buffer, base)\n    case RTCPPacketType.BYE:\n      return parseBYE(buffer, base)\n    case RTCPPacketType.APP:\n      return parseAPP(buffer, base)\n    default:\n      return base\n  }\n}\n\nexport const rtcpMessageFromBuffer = (\n  channel: number,\n  buffer: Buffer\n): RtcpMessage => {\n  return {\n    type: MessageType.RTCP,\n    data: buffer,\n    channel,\n    rtcp: parseRtcp(buffer),\n  }\n}\n\n/*\nSR: Sender Report RTCP Packet\n\n        0                   1                   2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nheader |V=2|P|    RC   |   PT=SR=200   |             length            |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                         SSRC of sender                        |\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nsender |              NTP timestamp, most significant word             |\ninfo   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |             NTP timestamp, least significant word             |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                         RTP timestamp                         |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                     sender's packet count                     |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                      sender's octet count                     |\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nreport |                 SSRC_1 (SSRC of first source)                 |\nblock  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  1    | fraction lost |       cumulative number of packets lost       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |           extended highest sequence number received           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                      interarrival jitter                      |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                         last SR (LSR)                         |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                   delay since last SR (DLSR)                  |\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nreport |                 SSRC_2 (SSRC of second source)                |\nblock  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  2    :                               ...                             :\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n       |                  profile-specific extensions                  |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n*/\n\nexport const SR = {\n  packetType: 200,\n}\n\nexport interface RtcpReportBlock {\n  readonly syncSource: number\n  readonly fractionLost: number\n  readonly cumulativeNumberOfPacketsLost: number\n  readonly extendedHighestSequenceNumberReceived: number\n  readonly interarrivalJitter: number\n  readonly lastSRTimestamp: number\n  readonly delaySinceLastSR: number\n}\n\nconst parseReportBlocks = (\n  count: number,\n  buffer: Buffer,\n  offset: number\n): RtcpReportBlock[] => {\n  const reports: RtcpReportBlock[] = []\n  for (let reportNumber = 0; reportNumber < count; reportNumber++) {\n    const o = offset + reportNumber * 24\n    reports.push({\n      syncSource: buffer.readUInt32BE(o + 0),\n      fractionLost: buffer.readUInt8(o + 4),\n      cumulativeNumberOfPacketsLost: buffer.readUIntBE(o + 5, 3),\n      extendedHighestSequenceNumberReceived: buffer.readUInt32BE(o + 8),\n      interarrivalJitter: buffer.readUInt32BE(o + 12),\n      lastSRTimestamp: buffer.readUInt32BE(o + 16),\n      delaySinceLastSR: buffer.readUInt32BE(o + 20),\n    })\n  }\n  return reports\n}\n\nexport interface RtcpSR extends Rtcp {\n  readonly version: RTCPPacketType.SR\n\n  readonly syncSource: number\n  readonly ntpMost: number\n  readonly ntpLeast: number\n  readonly rtpTimestamp: number\n  readonly sendersPacketCount: number\n  readonly sendersOctetCount: number\n  readonly reports: readonly RtcpReportBlock[]\n}\n\nconst parseSR = (buffer: Buffer, base: Rtcp): RtcpSR => ({\n  ...base,\n  syncSource: buffer.readUInt32BE(4),\n  ntpMost: buffer.readUInt32BE(8),\n  ntpLeast: buffer.readUInt32BE(12),\n  rtpTimestamp: buffer.readUInt32BE(16),\n  sendersPacketCount: buffer.readUInt32BE(20),\n  sendersOctetCount: buffer.readUInt32BE(24),\n  reports: parseReportBlocks(base.count, buffer, 28),\n})\n\nexport const isRtcpSR = (rtcp: Rtcp): rtcp is RtcpSR =>\n  rtcp.packetType === RTCPPacketType.SR\n\n/*\nRR: Receiver Report RTCP Packet\n\n        0                   1                   2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nheader |V=2|P|    RC   |   PT=RR=201   |             length            |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                     SSRC of packet sender                     |\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nreport |                 SSRC_1 (SSRC of first source)                 |\nblock  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  1    | fraction lost |       cumulative number of packets lost       |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |           extended highest sequence number received           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                      interarrival jitter                      |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                         last SR (LSR)                         |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                   delay since last SR (DLSR)                  |\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nreport |                 SSRC_2 (SSRC of second source)                |\nblock  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  2    :                               ...                             :\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n       |                  profile-specific extensions                  |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n*/\n\nexport interface RtcpRR extends Rtcp {\n  readonly version: RTCPPacketType.RR\n\n  readonly syncSource: number\n  readonly reports: readonly RtcpReportBlock[]\n}\n\nconst parseRR = (buffer: Buffer, base: Rtcp): RtcpRR => ({\n  ...base,\n  syncSource: buffer.readUInt32BE(4),\n  reports: parseReportBlocks(base.count, buffer, 8),\n})\n\nexport const isRtcpRR = (rtcp: Rtcp): rtcp is RtcpRR =>\n  rtcp.packetType === RTCPPacketType.RR\n\n/*\nSDES: Source Description RTCP Packet\n\n        0                   1                   2                   3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\nheader |V=2|P|    SC   |  PT=SDES=202  |             length            |\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nchunk  |                          SSRC/CSRC_1                          |\n  1    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                           SDES items                          |\n       |                              ...                              |\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\nchunk  |                          SSRC/CSRC_2                          |\n  2    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n       |                           SDES items                          |\n       |                              ...                              |\n       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n*/\n\nexport enum SDESItem {\n  CNAME = 1,\n  NAME = 2,\n  EMAIL = 3,\n  PHONE = 4,\n  LOC = 5,\n  TOOL = 6,\n  NOTE = 7,\n  PRIV = 8,\n}\n\nexport interface RtcpSDESBlock {\n  readonly source: number\n  readonly items: Array<[number, string] | [SDESItem.PRIV, string, string]>\n}\n\nexport interface RtcpSDES extends Rtcp {\n  readonly version: RTCPPacketType.SDES\n\n  readonly syncSource: number\n  readonly sourceDescriptions: readonly RtcpSDESBlock[]\n}\n\nconst parseSDES = (buffer: Buffer, base: Rtcp): RtcpSDES => {\n  const sourceDescriptions: RtcpSDESBlock[] = []\n  let offset = 4\n  for (let block = 0; block < base.count; block++) {\n    const chunk: RtcpSDESBlock = {\n      source: buffer.readUInt32BE(offset),\n      items: [],\n    }\n    offset += 4\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const itemType = buffer.readUInt8(offset++)\n\n      if (itemType === 0) {\n        // start next block at word boundary\n        if (offset % 4 !== 0) {\n          offset += 4 - (offset % 4)\n        }\n        break\n      }\n\n      const length = buffer.readUInt8(offset++)\n\n      if (itemType === SDESItem.PRIV) {\n        const prefixLength = buffer.readUInt8(offset)\n        const prefix = buffer.toString(\n          'utf8',\n          offset + 1,\n          offset + 1 + prefixLength\n        )\n        const value = buffer.toString(\n          'utf8',\n          offset + 1 + prefixLength,\n          offset + length\n        )\n        chunk.items.push([SDESItem.PRIV, prefix, value])\n      } else {\n        const value = buffer.toString('utf8', offset, offset + length)\n        chunk.items.push([itemType, value])\n      }\n\n      offset += length\n    }\n    sourceDescriptions.push(chunk)\n  }\n\n  return {\n    ...base,\n    syncSource: buffer.readUInt32BE(4),\n    sourceDescriptions,\n  }\n}\n\nexport const isRtcpSDES = (rtcp: Rtcp): rtcp is RtcpSDES =>\n  rtcp.packetType === RTCPPacketType.SDES\n\n/*\nBYE: Goodbye RTCP Packet\n\n       0                   1                   2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |V=2|P|    SC   |   PT=BYE=203  |             length            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |                           SSRC/CSRC                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      :                              ...                              :\n      +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n(opt) |     length    |               reason for leaving            ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n*/\n\nexport interface RtcpBye extends Rtcp {\n  readonly version: RTCPPacketType.BYE\n\n  readonly sources: number[]\n  readonly reason?: string\n}\n\nconst parseBYE = (buffer: Buffer, base: Rtcp): RtcpBye => {\n  const sources: number[] = []\n  for (let block = 0; block < base.count; block++) {\n    sources.push(buffer.readUInt32BE(4 + 4 * block))\n  }\n\n  let reason\n  if (base.length > base.count) {\n    const start = 4 + 4 * base.count\n    const length = buffer.readUInt8(start)\n    reason = buffer.toString('utf-8', start + 1, start + 1 + length)\n  }\n\n  return {\n    ...base,\n    sources,\n    reason,\n  }\n}\n\nexport const isRtcpBye = (rtcp: Rtcp): rtcp is RtcpBye =>\n  rtcp.packetType === RTCPPacketType.BYE\n\n/*\nAPP: Application-Defined RTCP Packet\n\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |V=2|P| subtype |   PT=APP=204  |             length            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                           SSRC/CSRC                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                          name (ASCII)                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                   application-dependent data                ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n*/\n\nexport interface RtcpApp extends Rtcp {\n  readonly version: RTCPPacketType.APP\n\n  readonly subtype: number\n  readonly source: number\n  readonly name: string\n  readonly data: Buffer\n}\n\nconst parseAPP = (buffer: Buffer, base: Rtcp): RtcpApp => {\n  return {\n    ...base,\n    subtype: base.count,\n    source: buffer.readUInt32BE(4),\n    name: buffer.toString('ascii', 8, 12),\n    data: buffer.slice(12),\n  }\n}\n\nexport const isRtcpApp = (rtcp: Rtcp): rtcp is RtcpApp =>\n  rtcp.packetType === RTCPPacketType.APP\n", "import { Transform } from 'stream'\n\nimport {\n  marker,\n  payload,\n  payloadType,\n  timestamp,\n} from '../../utils/protocols/rtp'\nimport { Tube } from '../component'\nimport { Message, MessageType, XmlMessage } from '../message'\n\nexport class ONVIFDepay extends Tube {\n  constructor() {\n    let XMLPayloadType: number\n    let packets: Buffer[] = []\n\n    const incoming = new Transform({\n      objectMode: true,\n      transform(msg: Message, encoding, callback) {\n        if (msg.type === MessageType.SDP) {\n          let validMedia\n          for (const media of msg.sdp.media) {\n            if (\n              media.type === 'application'\n              && media.rtpmap\n              && media.rtpmap.encodingName === 'VND.ONVIF.METADATA'\n            ) {\n              validMedia = media\n            }\n          }\n          if (validMedia && validMedia.rtpmap) {\n            XMLPayloadType = Number(validMedia.rtpmap.payloadType)\n          }\n          callback(undefined, msg)\n        } else if (\n          msg.type === MessageType.RTP\n          && payloadType(msg.data) === XMLPayloadType\n        ) {\n          // Add payload to packet stack\n          packets.push(payload(msg.data))\n\n          // XML over RTP uses the RTP marker bit to indicate end\n          // of fragmentation. At this point, the packets can be used\n          // to reconstruct an XML packet.\n          if (marker(msg.data) && packets.length > 0) {\n            const xmlMsg: XmlMessage = {\n              timestamp: timestamp(msg.data),\n              ntpTimestamp: msg.ntpTimestamp,\n              payloadType: payloadType(msg.data),\n              data: Buffer.concat(packets),\n              type: MessageType.XML,\n            }\n            callback(undefined, xmlMsg)\n            packets = []\n            return\n          }\n          callback()\n        } else {\n          // Not a message we should handle\n          callback(undefined, msg)\n        }\n      },\n    })\n\n    // outgoing will be defaulted to a PassThrough stream\n    super(incoming)\n  }\n}\n", "import { Transform } from 'stream'\n\nimport { Tube } from '../component'\nimport { Message, MessageType } from '../message'\n\nimport { builder } from './builder'\nimport { Parser } from './parser'\n\n/**\n * A component that converts raw binary data into RTP/RTSP/RTCP packets on the\n * incoming stream, and converts RTSP commands to raw binary data on the outgoing\n * stream. The component is agnostic of any RTSP session details (you need an\n * RTSP session component in the pipeline).\n * @extends {Component}\n */\nexport class RtspParser extends Tube {\n  constructor() {\n    const parser = new Parser()\n\n    // Incoming stream\n    const incoming = new Transform({\n      objectMode: true,\n      transform(msg: Message, encoding, callback) {\n        if (msg.type === MessageType.RAW) {\n          try {\n            parser.parse(msg.data).forEach((message) => incoming.push(message))\n            callback()\n          } catch (e) {\n            const err = e as Error\n            callback(err)\n          }\n        } else {\n          // Not a message we should handle\n          callback(undefined, msg)\n        }\n      },\n    })\n\n    // Outgoing stream\n    const outgoing = new Transform({\n      objectMode: true,\n      transform(msg: Message, encoding, callback) {\n        if (msg.type === MessageType.RTSP) {\n          const data = builder(msg)\n          callback(undefined, { type: MessageType.RAW, data })\n        } else {\n          // don't touch other types\n          callback(undefined, msg)\n        }\n      },\n    })\n\n    super(incoming, outgoing)\n  }\n}\n", "import debug from 'debug'\n\nimport { RtspMessage } from '../message'\n\nconst DEFAULT_PROTOCOL = 'RTSP/1.0'\n\nexport const builder = (msg: RtspMessage): Buffer => {\n  if (!msg.method || !msg.uri) {\n    throw new Error('message needs to contain a method and a uri')\n  }\n  const protocol = msg.protocol || DEFAULT_PROTOCOL\n  const headers = msg.headers || {}\n\n  const messageString = [\n    `${msg.method} ${msg.uri} ${protocol}`,\n    Object.entries(headers)\n      .map(([key, value]) => `${key}: ${value}`)\n      .join('\\r\\n'),\n    '\\r\\n',\n  ].join('\\r\\n')\n  debug('msl:rtsp:outgoing')(messageString)\n\n  return Buffer.from(messageString)\n}\n", "import { rtcpMessageFromBuffer } from '../../utils/protocols/rtcp'\nimport { bodyOffset, extractHeaderValue } from '../../utils/protocols/rtsp'\nimport { messageFromBuffer } from '../../utils/protocols/sdp'\nimport {\n  MessageType,\n  RtcpMessage,\n  RtpMessage,\n  RtspMessage,\n  SdpMessage,\n} from '../message'\n\n/**\n * The different possible internal parser states.\n */\nenum STATE {\n  IDLE = 0,\n  INTERLEAVED = 1,\n  RTSP = 2,\n}\n\nconst INTERLEAVED_HEADER_BYTES = 4\nconst ASCII_DOLLAR = 0x24\n\ninterface RtpPacketInfo {\n  channel: number\n  begin: number\n  end: number\n}\n\n/**\n * Extract packet information from the interleaved header\n * (4-byte section before the RTP packet).\n * @param  chunks - Buffers constituting the data.\n * @return Packet information (channel, begin, end).\n */\nconst rtpPacketInfo = (chunks: Buffer[]): RtpPacketInfo => {\n  const header = Buffer.alloc(INTERLEAVED_HEADER_BYTES)\n  let i = 0\n  let bytesRead = 0\n\n  while (bytesRead < header.length) {\n    const chunk = chunks[i++]\n    const bytesToRead = Math.min(chunk.length, header.length - bytesRead)\n    chunk.copy(header, bytesRead, 0, bytesToRead)\n    bytesRead += bytesToRead\n  }\n  const channel = header[1]\n  const begin = header.length\n  const length = header.readUInt16BE(2)\n  const end = begin + length\n\n  return { channel, begin, end }\n}\n\n/**\n * Parser class with a public method that takes a data chunk and\n * returns an array of RTP/RTSP/RTCP message objects. The parser\n * keeps track of the added chunks internally in an array and only\n * concatenates chunks when data is needed to construct a message.\n * @type {[type]}\n */\nexport class Parser {\n  private _chunks: Buffer[] = []\n  private _length = 0\n  private _state: STATE = STATE.IDLE\n  private _packet?: RtpPacketInfo\n\n  /**\n   * Create a new Parser object.\n   * @return {undefined}\n   */\n  constructor() {\n    this._init()\n  }\n\n  /**\n   * Initialize the internal properties to their default starting\n   * values.\n   * @return {undefined}\n   */\n  _init() {\n    this._chunks = []\n    this._length = 0\n    this._state = STATE.IDLE\n  }\n\n  _push(chunk: Buffer) {\n    this._chunks.push(chunk)\n    this._length += chunk.length\n  }\n\n  /**\n   * Extract RTSP messages.\n   * @return {Array} An array of messages, possibly empty.\n   */\n  _parseRtsp(): Array<RtspMessage | SdpMessage> {\n    const messages: Array<RtspMessage | SdpMessage> = []\n\n    const buffer = Buffer.concat(this._chunks)\n    const chunkBodyOffset = bodyOffset(buffer)\n    // If last added chunk does not have the end of the header, return.\n    if (chunkBodyOffset === -1) {\n      return messages\n    }\n\n    const rtspHeaderLength = chunkBodyOffset\n    const contentLength = extractHeaderValue(buffer, 'Content-Length')\n    if (\n      contentLength\n      && parseInt(contentLength) > buffer.length - rtspHeaderLength\n    ) {\n      // we do not have the whole body\n      return messages\n    }\n\n    this._init() // resets this._chunks and this._length\n\n    if (\n      rtspHeaderLength === buffer.length\n      || buffer[rtspHeaderLength] === ASCII_DOLLAR\n    ) {\n      // No body in this chunk, assume there is no body?\n      const packet = buffer.slice(0, rtspHeaderLength)\n      messages.push({ type: MessageType.RTSP, data: packet })\n\n      // Add the remaining data to the chunk stack.\n      const trailing = buffer.slice(rtspHeaderLength)\n      this._push(trailing)\n    } else {\n      // Body is assumed to be the remaining data of the last chunk.\n      const packet = buffer\n      const body = buffer.slice(rtspHeaderLength)\n\n      messages.push({ type: MessageType.RTSP, data: packet })\n      messages.push(messageFromBuffer(body))\n    }\n\n    return messages\n  }\n\n  /**\n   * Extract RTP/RTCP messages.\n   * @return {Array} An array of messages, possibly empty.\n   */\n  _parseInterleaved(): Array<RtpMessage | RtcpMessage> {\n    const messages: Array<RtpMessage | RtcpMessage> = []\n\n    // Skip as long as we don't have the first 4 bytes\n    if (this._length < INTERLEAVED_HEADER_BYTES) {\n      return messages\n    }\n\n    // Enough bytes to construct the header and extract packet info.\n    if (!this._packet) {\n      this._packet = rtpPacketInfo(this._chunks)\n    }\n\n    // As long as we don't have enough chunks, skip.\n    if (this._length < this._packet.end) {\n      return messages\n    }\n\n    // We have enough data to extract the packet.\n    const buffer = Buffer.concat(this._chunks)\n    const packet = buffer.slice(this._packet.begin, this._packet.end)\n    const trailing = buffer.slice(this._packet.end)\n    const channel = this._packet.channel\n\n    delete this._packet\n\n    // Prepare next bit.\n    this._init()\n    this._push(trailing)\n\n    // Extract messages\n    if (channel % 2 === 0) {\n      // Even channels 0, 2, ...\n      messages.push({ type: MessageType.RTP, data: packet, channel })\n    } else {\n      // Odd channels 1, 3, ...\n      let rtcpPackets = packet\n      do {\n        // RTCP packets can be packed together, unbundle them:\n        const rtcpByteSize = rtcpPackets.readUInt16BE(2) * 4 + 4\n        messages.push(\n          rtcpMessageFromBuffer(channel, rtcpPackets.slice(0, rtcpByteSize))\n        )\n        rtcpPackets = rtcpPackets.slice(rtcpByteSize)\n      } while (rtcpPackets.length > 0)\n    }\n\n    return messages\n  }\n\n  /**\n   * Set the internal state based on the type of the first chunk\n   */\n  _setState() {\n    // Remove leading 0-sized chunks.\n    while (this._chunks.length > 0 && this._chunks[0].length === 0) {\n      this._chunks.shift()\n    }\n\n    const firstChunk = this._chunks[0]\n\n    if (this._chunks.length === 0) {\n      this._state = STATE.IDLE\n    } else if (firstChunk[0] === ASCII_DOLLAR) {\n      this._state = STATE.INTERLEAVED\n    } else if (firstChunk.toString('ascii', 0, 4) === 'RTSP') {\n      this._state = STATE.RTSP\n    } else {\n      throw new Error(`Unknown chunk of length ${firstChunk.length}`)\n    }\n  }\n\n  /**\n   * Add the next chunk of data to the parser and extract messages.\n   * If no message can be extracted, an empty array is returned, otherwise\n   * an array of messages is returned.\n   * @param  chunk - The next piece of data.\n   * @return An array of messages, possibly empty.\n   */\n  parse(\n    chunk: Buffer\n  ): Array<SdpMessage | RtspMessage | RtpMessage | RtcpMessage> {\n    this._push(chunk)\n\n    if (this._state === STATE.IDLE) {\n      this._setState()\n    }\n\n    let messages: Array<SdpMessage | RtspMessage | RtpMessage | RtcpMessage> =\n      []\n    let done = false\n\n    while (!done) {\n      let extracted: Array<\n        SdpMessage | RtspMessage | RtpMessage | RtcpMessage\n      > = []\n      switch (this._state) {\n        case STATE.IDLE:\n          break\n        case STATE.INTERLEAVED:\n          extracted = this._parseInterleaved()\n          break\n        case STATE.RTSP:\n          extracted = this._parseRtsp()\n          break\n        default:\n          throw new Error('internal error: unknown state')\n      }\n\n      if (extracted.length > 0) {\n        messages = messages.concat(extracted)\n      } else {\n        done = true\n      }\n\n      this._setState()\n    }\n\n    return messages\n  }\n}\n", "/*\n * The RTSP response format is defined in RFC 7826,\n * using ABNF notation specified in RFC 5234.\n * Strings in ABNF rules (\"...\") are always case insensitive!\n *\n * Basic rules to help with the headers below:\n * ====\n * CR              =  %x0D ; US-ASCII CR, carriage return (13)\n * LF              =  %x0A  ; US-ASCII LF, linefeed (10)\n * SP              =  %x20  ; US-ASCII SP, space (32)\n * HT              =  %x09  ; US-ASCII HT, horizontal-tab (9)\n * CRLF            =  CR LF\n * LWS             =  [CRLF] 1*( SP / HT ) ; Line-breaking whitespace\n * SWS             =  [LWS] ; Separating whitespace\n * HCOLON          =  *( SP / HT ) \":\" SWS\n *\n * RTSP response rules (a `*` means zero or more):\n * ====\n * Status-Line  = RTSP-Version SP Status-Code SP Reason-Phrase CRLF\n * Response     = Status-Line\n *                *((general-header\n *                /  response-header\n *                /  message-body-header) CRLF)\n *                CRLF\n *                [ message-body-data ]\n *\n * Example response:\n * ====\n * RTSP/1.0 200 OK\n * CSeq: 3\n * Content-Type: application/sdp\n * Content-Base: rtsp://192.168.0.3/axis-media/media.amp/\n * Server: GStreamer RTSP server\n * Date: Wed, 03 Jun 2015 14:23:42 GMT\n * Content-Length: 623\n *\n * v=0\n * ....\n */\n\n/**\n * Extract the value of a header.\n *\n * @param buffer The response bytes\n * @param header The header to search for\n */\nexport const extractHeaderValue = (buffer: Buffer, header: string) => {\n  const anchor = `\\n${header.toLowerCase()}: `\n  const start = buffer.toString().toLowerCase().indexOf(anchor)\n  if (start >= 0) {\n    const end = buffer.indexOf('\\n', start + anchor.length)\n    const headerValue = buffer\n      .toString('ascii', start + anchor.length, end)\n      .trim()\n    return headerValue\n  }\n  return null\n}\n\nexport const sequence = (buffer: Buffer) => {\n  /**\n   * CSeq           =  \"CSeq\" HCOLON cseq-nr\n   * cseq-nr        =  1*9DIGIT\n   */\n  const val = extractHeaderValue(buffer, 'CSeq')\n  if (val !== null) {\n    return Number(val)\n  }\n  return null\n}\n\nexport const sessionId = (buffer: Buffer) => {\n  /**\n   * Session          =  \"Session\" HCOLON session-id\n   *                     [ SEMI \"timeout\" EQUAL delta-seconds ]\n   * session-id        =  1*256( ALPHA / DIGIT / safe )\n   * delta-seconds     =  1*19DIGIT\n   */\n  const val = extractHeaderValue(buffer, 'Session')\n  return val ? val.split(';')[0] : null\n}\n\nexport const sessionTimeout = (buffer: Buffer) => {\n  /**\n   * Session          =  \"Session\" HCOLON session-id\n   *                     [ SEMI \"timeout\" EQUAL delta-seconds ]\n   * session-id        =  1*256( ALPHA / DIGIT / safe )\n   * delta-seconds     =  1*19DIGIT\n   */\n  const val = extractHeaderValue(buffer, 'Session')\n  if (val === null) {\n    return null\n  }\n  const defaultTimeout = 60\n  const timeoutToken = 'timeout='\n  const timeoutPosition = val.toLowerCase().indexOf(timeoutToken)\n  if (timeoutPosition !== -1) {\n    let timeoutVal = val.substring(timeoutPosition + timeoutToken.length)\n    timeoutVal = timeoutVal.split(';')[0]\n    const parsedTimeout = parseInt(timeoutVal)\n    return isNaN(parsedTimeout) ? defaultTimeout : parsedTimeout\n  }\n  return defaultTimeout\n}\n\nexport const statusCode = (buffer: Buffer) => {\n  return Number(buffer.toString('ascii', 9, 12))\n}\n\nexport const contentBase = (buffer: Buffer) => {\n  /**\n   * Content-Base       =  \"Content-Base\" HCOLON RTSP-URI\n   */\n  return extractHeaderValue(buffer, 'Content-Base')\n}\n\nexport const contentLocation = (buffer: Buffer) => {\n  /**\n   * Content-Location   =  \"Content-Location\" HCOLON RTSP-REQ-Ref\n   */\n  return extractHeaderValue(buffer, 'Content-Location')\n}\n\nexport const connectionEnded = (buffer: Buffer) => {\n  /**\n   * Connection         =  \"Connection\" HCOLON connection-token\n   *                       *(COMMA connection-token)\n   * connection-token   =  \"close\" / token\n   */\n  const connectionToken = extractHeaderValue(buffer, 'Connection')\n  return connectionToken !== null && connectionToken.toLowerCase() === 'close'\n}\n\nexport const range = (buffer: Buffer) => {\n  /**\n   * Range              =  \"Range\" HCOLON ranges-spec\n   * ranges-spec        =  npt-range / utc-range / smpte-range\n   *                       /  range-ext\n   * npt-range        =  \"npt\" [EQUAL npt-range-spec]\n   * npt-range-spec   =  ( npt-time \"-\" [ npt-time ] ) / ( \"-\" npt-time )\n   * npt-time         =  \"now\" / npt-sec / npt-hhmmss / npt-hhmmss-comp\n   * npt-sec          =  1*19DIGIT [ \".\" 1*9DIGIT ]\n   * npt-hhmmss       =  npt-hh \":\" npt-mm \":\" npt-ss [ \".\" 1*9DIGIT ]\n   * npt-hh           =  2*19DIGIT   ; any positive number\n   * npt-mm           =  2*2DIGIT  ; 0-59\n   * npt-ss           =  2*2DIGIT  ; 0-59\n   * npt-hhmmss-comp  =  npt-hh-comp \":\" npt-mm-comp \":\" npt-ss-comp\n   *                     [ \".\" 1*9DIGIT ] ; Compatibility format\n   * npt-hh-comp      =  1*19DIGIT   ; any positive number\n   * npt-mm-comp      =  1*2DIGIT  ; 0-59\n   * npt-ss-comp      =  1*2DIGIT  ; 0-59\n   */\n\n  // Example range headers:\n  // Range: npt=now-\n  // Range: npt=1154.598701-3610.259146\n  const npt = extractHeaderValue(buffer, 'Range')\n  if (npt !== null) {\n    return npt.split('=')[1].split('-')\n  }\n  return undefined\n}\n\n/**\n * Determine the offset of the RTSP body, where the header ends.\n * If there is no header ending, -1 is returned\n * @param  chunk - A piece of data\n * @return The body offset, or -1 if no header end found\n */\nexport const bodyOffset = (chunk: Buffer) => {\n  /**\n   * Strictly speaking, it seems RTSP MUST have CRLF and doesn't allow CR or LF on its own.\n   * That means that the end of the header part should be a pair of CRLF, but we're being\n   * flexible here and also allow LF LF or CR CR instead of CRLF CRLF.\n   */\n  const bodyOffsets = ['\\n\\n', '\\r\\r', '\\r\\n\\r\\n']\n    .map((s) => {\n      const offset = chunk.indexOf(s)\n      if (offset !== -1) {\n        return offset + s.length\n      }\n      return offset\n    })\n    .filter((offset) => offset !== -1)\n  if (bodyOffsets.length > 0) {\n    return bodyOffsets.reduce((acc, offset) => {\n      return Math.min(acc, offset)\n    })\n  }\n  return -1\n}\n", "import { MessageType, SdpMessage } from '../../components/message'\n\nimport { NtpSeconds, seconds } from './ntp'\n\ninterface ConnectionField {\n  // c=<nettype> <addrtype> <connection-address>\n  networkType: 'IN'\n  addressType: 'IP4' | 'IP6'\n  connectionAddress: string\n}\n\ninterface BandwidthField {\n  readonly type: string\n  readonly value: number\n}\n\n// RTSP extensions: https://tools.ietf.org/html/rfc7826 (22.15)\n// exists on both session and media level\ninterface RtspExtensions {\n  readonly range?: string\n  readonly control?: string\n  readonly mtag?: string\n}\n\n/**\n * The session description protocol (SDP).\n *\n * Contains parser to convert SDP data into an SDP structure.\n * https://tools.ietf.org/html/rfc4566\n *\n * NOTE: not all SDP attributes have been implemented,\n * and in some cases the handling of attributes has been\n * simplified to not cover multiple identical attributes.\n */\n\n/**\n * Session description\n *\n * Optional items are marked with a '*'.\n *\n * v=  (protocol version)\n * o=  (owner/creator and session identifier).\n * s=  (session name)\n * i=* (session information)\n * u=* (URI of description)\n * e=* (email address)\n * p=* (phone number)\n * c=* (connection information - not required if included in all media)\n * b=* (bandwidth information)\n * One or more time descriptions (see below)\n * z=* (time zone adjustments)\n * k=* (encryption key)\n * a=* (zero or more session attribute lines)\n * Zero or more media descriptions (see below)\n *\n * Names of the fields below are annotated above with\n * the names used in Appendix A: SDP Grammar of RFC 2327.\n */\nexport interface SessionDescription extends RtspExtensions {\n  // v=0\n  readonly version: 0\n  // o=<username> <sess-id> <sess-version> <nettype> <addrtype> <unicast-address>\n  readonly originField: OriginField\n  // s=<session name>\n  readonly name: string\n  // i=<session description>\n  readonly description?: string\n  // u=<uri>\n  readonly uri?: string\n  // e=<email-address>\n  readonly email?: string | string[]\n  // p=<phone-number>\n  readonly phone?: string | string[]\n  // c=<nettype> <addrtype> <connection-address>\n  readonly connection?: ConnectionField\n  // b=<bwtype>:<bandwidth>\n  readonly bandwidth?: BandwidthField\n  // One or more time descriptions\n  readonly time: TimeDescription\n  readonly repeatTimes?: RepeatTimeDescription\n  // Zero or more media descriptions\n  readonly media: MediaDescription[]\n}\n\ninterface OriginField {\n  // o=<username> <sess-id> <sess-version> <nettype> <addrtype> <unicast-address>\n  username: string\n  sessionId: number\n  sessionVersion: number\n  networkType: 'IN'\n  addressType: 'IP4' | 'IP6'\n  address: string\n}\n\n/**\n * Time description\n *\n * t=  (time the session is active)\n * r=* (zero or more repeat times)\n */\nexport interface TimeDescription {\n  // t=<start-time> <stop-time>\n  readonly startTime: NtpSeconds\n  readonly stopTime: NtpSeconds\n}\n\nexport interface RepeatTimeDescription {\n  // r=<repeat interval> <active duration> <offsets from start-time>\n  readonly repeatInterval: seconds\n  readonly activeDuration: seconds\n  readonly offsets: seconds[]\n}\n\n/**\n * Media description\n *\n * m=  (media name and transport address)\n * i=* (media title)\n * c=* (connection information -- optional if included at session level)\n * b=* (zero or more bandwidth information lines)\n * k=* (encryption key)\n * a=* (zero or more media attribute lines)\n *\n * The parser only handles a single fmt value\n * and only one rtpmap attribute (in theory there\n * can be multiple fmt values with corresponding rtpmap\n * attributes)\n */\nexport interface MediaDescription extends RtspExtensions {\n  // m=<media> <port> <proto> <fmt> ...\n  // m=<media> <port>/<number of ports> <proto> <fmt> ...\n  readonly type: 'audio' | 'video' | 'application' | 'data' | 'control'\n  readonly port: number\n  readonly protocol: 'udp' | 'RTP/AVP' | 'RTP/SAVP'\n  readonly fmt: number // Payload type(s)\n  readonly connection?: ConnectionField\n  readonly bandwidth?: BandwidthField\n  /**\n   * Any remaining attributes\n   * a=...\n   */\n  // a=rtpmap:<payload type> <encoding name>/<clock rate> [/<encoding parameters>]\n  readonly rtpmap?: {\n    readonly clockrate: number\n    readonly encodingName: string\n    readonly payloadType: number\n  }\n  // a=fmtp:<format> <format specific parameters>\n  readonly fmtp: {\n    readonly format: string\n    readonly parameters: { [key: string]: any }\n  }\n  // Extra non-SDP properties\n  // TODO: refactor this away\n  mime?: string\n  codec?: any\n}\n\nexport type TransformationMatrix = readonly [\n  readonly [number, number, number],\n  readonly [number, number, number],\n  readonly [number, number, number],\n]\n\nexport interface VideoMedia extends MediaDescription {\n  readonly type: 'video'\n  readonly framerate?: number\n  // Transformation matrix\n  readonly transform?: TransformationMatrix\n  readonly 'x-sensor-transform'?: TransformationMatrix\n  // JPEG\n  readonly framesize?: [number, number]\n}\n\nexport interface H264Media extends VideoMedia {\n  readonly rtpmap: {\n    readonly clockrate: number\n    readonly encodingName: string\n    readonly payloadType: number\n  }\n}\n\nexport interface AudioMedia extends MediaDescription {\n  readonly type: 'audio'\n}\n\nexport interface AACParameters {\n  readonly bitrate: string\n  readonly config: string\n  readonly indexdeltalength: string\n  readonly indexlength: string\n  readonly mode: 'AAC-hbr'\n  readonly 'profile-level-id': string\n  readonly sizelength: string\n  readonly streamtype: string\n  readonly ctsdeltalength: string\n  readonly dtsdeltalength: string\n  readonly randomaccessindication: string\n  readonly streamstateindication: string\n  readonly auxiliarydatasizelength: string\n}\n\nexport interface AACMedia extends AudioMedia {\n  readonly fmtp: {\n    readonly format: string\n    readonly parameters: AACParameters\n  }\n  readonly rtpmap: {\n    readonly clockrate: number\n    readonly encodingName: string\n    readonly payloadType: number\n  }\n}\n\nexport interface Sdp {\n  readonly session: SessionDescription\n  readonly media: MediaDescription[]\n}\n\nconst extractLineVals = (buffer: Buffer, lineStart: string, start = 0) => {\n  const anchor = `\\n${lineStart}`\n  start = buffer.indexOf(anchor, start)\n  let end = 0\n  const ret: string[] = []\n  while (start >= 0) {\n    end = buffer.indexOf('\\n', start + anchor.length)\n    ret.push(buffer.toString('ascii', start + anchor.length, end).trim())\n    start = buffer.indexOf(anchor, end)\n  }\n  return ret\n}\n\n// SDP parsing\n\n/**\n * Identify the start of a session-level or media-level section.\n * @param  line - The line to parse\n */\nconst newMediaLevel = (line: string) => {\n  return line.match(/^m=/)\n}\n\nconst splitOnFirst = (c: string, text: string) => {\n  const p = text.indexOf(c)\n  if (p < 0) {\n    return [text.slice(0)]\n  }\n  return [text.slice(0, p), text.slice(p + 1)]\n}\n\nconst attributeParsers: any = {\n  fmtp: (value: string) => {\n    const [format, stringParameters] = splitOnFirst(' ', value)\n    switch (format) {\n      default: {\n        const pairs = stringParameters.trim().split(';')\n        const parameters: { [key: string]: any } = {}\n        pairs.forEach((pair) => {\n          const [key, val] = splitOnFirst('=', pair)\n          const normalizedKey = key.trim().toLowerCase()\n          if (normalizedKey !== '') {\n            parameters[normalizedKey] = val.trim()\n          }\n        })\n        return { format, parameters }\n      }\n    }\n  },\n  framerate: Number,\n  rtpmap: (value: string) => {\n    const [payloadType, encoding] = splitOnFirst(' ', value)\n    const [encodingName, clockrate, encodingParameters] = encoding\n      .toUpperCase()\n      .split('/')\n    if (encodingParameters === undefined) {\n      return {\n        payloadType: Number(payloadType),\n        encodingName,\n        clockrate: Number(clockrate),\n      }\n    }\n    return {\n      payloadType: Number(payloadType),\n      encodingName,\n      clockrate: Number(clockrate),\n      encodingParameters,\n    }\n  },\n  transform: (value: string) => {\n    return value.split(';').map((row) => row.split(',').map(Number))\n  },\n  'x-sensor-transform': (value: string) => {\n    return value.split(';').map((row) => row.split(',').map(Number))\n  },\n  framesize: (value: string) => {\n    return value.split(' ')[1].split('-').map(Number)\n  },\n}\n\nconst parseAttribute = (body: string) => {\n  const [attribute, value] = splitOnFirst(':', body)\n  if (value === undefined) {\n    return { [attribute]: true }\n  }\n  if (attributeParsers[attribute] !== undefined) {\n    return { [attribute]: attributeParsers[attribute](value) }\n  }\n  return { [attribute]: value }\n}\n\nconst extractField = (line: string) => {\n  const prefix = line.slice(0, 1)\n  const body = line.slice(2)\n  switch (prefix) {\n    case 'v':\n      return { version: body }\n    case 'o': {\n      const [\n        username,\n        sessionId,\n        sessionVersion,\n        netType,\n        addrType,\n        unicastAddress,\n      ] = body.split(' ')\n      return {\n        origin: {\n          addrType,\n          netType,\n          sessionId,\n          sessionVersion,\n          unicastAddress,\n          username,\n        },\n      }\n    }\n    case 's':\n      return { sessionName: body }\n    case 'i':\n      return { sessionInformation: body }\n    case 'u':\n      return { uri: body }\n    case 'e':\n      return { email: body }\n    case 'p':\n      return { phone: body }\n    // c=<nettype> <addrtype> <connection-address>\n    case 'c': {\n      const [connectionNetType, connectionAddrType, connectionAddress] = body\n        .split(' ')\n      return {\n        connectionData: {\n          addrType: connectionAddrType,\n          connectionAddress,\n          netType: connectionNetType,\n        },\n      }\n    }\n    // b=<bwtype>:<bandwidth>\n    case 'b': {\n      const [bwtype, bandwidth] = body.split(':')\n      return { bwtype, bandwidth }\n    }\n    // t=<start-time> <stop-time>\n    case 't': {\n      const [startTime, stopTime] = body.split(' ').map(Number)\n      return { time: { startTime, stopTime } }\n    }\n    // r=<repeat interval> <active duration> <offsets from start-time>\n    case 'r': {\n      const [repeatInterval, activeDuration, ...offsets] = body\n        .split(' ')\n        .map(Number)\n      return {\n        repeatTimes: { repeatInterval, activeDuration, offsets },\n      }\n    }\n    // z=<adjustment time> <offset> <adjustment time> <offset> ....\n    case 'z':\n      return\n    // k=<method>\n    // k=<method>:<encryption key>\n    case 'k':\n      return\n    // a=<attribute>\n    // a=<attribute>:<value>\n    case 'a':\n      return parseAttribute(body)\n    case 'm': {\n      // Only the first fmt field is parsed!\n      const [type, port, protocol, fmt] = body.split(' ')\n      return { type, port: Number(port), protocol, fmt: Number(fmt) }\n    }\n    default:\n      // console.log('unknown SDP prefix ', prefix);\n  }\n}\n\nexport const extractURIs = (buffer: Buffer) => {\n  // There is a control URI above the m= line, which should not be used\n  const seekFrom = buffer.indexOf('\\nm=')\n  return extractLineVals(buffer, 'a=control:', seekFrom)\n}\n\n/**\n * Parse an SDP text into a data structure with session and media objects.\n *\n * @param  buffer - The buffer containing the SDP plain text\n * @return Structured SDP data\n */\nexport const parse = (buffer: Buffer): Sdp => {\n  const sdp = buffer\n    .toString('ascii')\n    .split('\\n')\n    .map((s) => s.trim())\n  const struct: { [key: string]: any } = { session: {}, media: [] }\n  let mediaCounter = 0\n  let current = struct.session\n  for (const line of sdp) {\n    if (newMediaLevel(line)) {\n      struct.media[mediaCounter] = {}\n      current = struct.media[mediaCounter]\n      ;++mediaCounter\n    }\n    current = Object.assign(current, extractField(line))\n  }\n  return struct as Sdp\n}\n\nexport const messageFromBuffer = (buffer: Buffer): SdpMessage => {\n  return {\n    type: MessageType.SDP,\n    data: buffer,\n    sdp: parse(buffer),\n  }\n}\n", "import debug from 'debug'\n\nimport { Transform } from 'stream'\n\nimport { merge } from '../../utils/config'\nimport { getTime } from '../../utils/protocols/ntp'\nimport { isRtcpSR, Rtcp } from '../../utils/protocols/rtcp'\nimport { timestamp } from '../../utils/protocols/rtp'\nimport {\n  connectionEnded,\n  contentBase,\n  contentLocation,\n  range,\n  sequence,\n  sessionId,\n  sessionTimeout,\n  statusCode,\n} from '../../utils/protocols/rtsp'\nimport { Sdp } from '../../utils/protocols/sdp'\nimport { Tube } from '../component'\nimport {\n  Message,\n  MessageType,\n  RtcpMessage,\n  RtpMessage,\n  RtspMessage,\n  SdpMessage,\n} from '../message'\n\nfunction isAbsolute(url: string) {\n  return /^[^:]+:\\/\\//.test(url)\n}\n\nenum STATE {\n  IDLE = 'idle',\n  PLAYING = 'playing',\n  PAUSED = 'paused',\n}\n\nexport enum RTSP_METHOD {\n  OPTIONS = 'OPTIONS',\n  DESCRIBE = 'DESCRIBE',\n  SETUP = 'SETUP',\n  PLAY = 'PLAY',\n  PAUSE = 'PAUSE',\n  TEARDOWN = 'TEARDOWN',\n}\n\nconst MIN_SESSION_TIMEOUT = 5 // minimum timeout for a rtsp session in seconds\n\ninterface Headers {\n  [key: string]: string\n}\n\ninterface Command {\n  method: RTSP_METHOD\n  headers?: Headers\n  uri?: string\n}\n\ninterface MethodHeaders {\n  [key: string]: Headers\n}\n\nexport interface RtspConfig {\n  hostname?: string\n  parameters?: string[]\n  uri?: string\n  headers?: MethodHeaders\n  defaultHeaders?: Headers\n}\n\n// Default RTSP configuration\nconst defaultConfig = (\n  hostname: string = typeof window === 'undefined'\n    ? ''\n    : window.location.hostname,\n  parameters: string[] = []\n): RtspConfig => {\n  const uri = parameters.length > 0\n    ? `rtsp://${hostname}/axis-media/media.amp?${parameters.join('&')}`\n    : `rtsp://${hostname}/axis-media/media.amp`\n\n  return { uri }\n}\n\nexport class RTSPResponseError extends Error {\n  public code: number\n\n  constructor(message: string, code: number) {\n    super(message)\n    this.name = 'RTSPResponseError'\n    this.code = code\n  }\n}\n\n/**\n * A component that sets up a command queue in order to interact with the RTSP\n * server. Allows control over the RTSP session by listening to incoming messages\n * and sending request on the outgoing stream.\n *\n * The following handlers can be set on the component:\n *  - onSdp: will be called when an SDP object is sent with the object as argument\n *  - onPlay: will be called when an RTSP PLAY response is sent with the media range\n *            as argument. The latter is an array [start, stop], where start is \"now\"\n *            (for live) or a time in seconds, and stop is undefined (for live or\n *            ongoing streams) or a time in seconds.\n * @extends {Component}\n */\nexport class RtspSession extends Tube {\n  public uri?: string\n  public headers?: MethodHeaders\n  public defaultHeaders?: Headers\n  public t0?: { [key: number]: number }\n  public n0?: { [key: number]: number }\n  public clockrates?: { [key: number]: number }\n  public startTime?: number\n\n  public onRtcp?: (rtcp: Rtcp) => void\n  public onSdp?: (sdp: Sdp) => void\n  public onError?: (err: RTSPResponseError) => void\n  public onPlay?: (range?: string[]) => void\n\n  public retry?: () => void\n\n  private _outgoingClosed: boolean\n  private _sequence?: number\n  private _callStack?: Command[]\n  private _callHistory?: any[]\n  private _state?: STATE\n  private _waiting?: boolean\n  private _contentBase?: string | null\n  private _contentLocation?: string | null\n  private _sessionId?: string | null\n  private _sessionControlURL: string\n  private _renewSessionInterval?: number | null\n\n  /**\n   * Create a new RTSP session controller component.\n   * @param  [config] Details about the session.\n   * @param  [config.hostname] The RTSP server hostname\n   * @param  [config.parameters] The RTSP URI parameters\n   * @param  [config.uri] The full RTSP URI (overrides any hostname/parameters)\n   * @param  [config.defaultHeaders] Default headers to use (for all methods).\n   * @param  [config.headers] Headers to use (mapped to each method).\n   */\n  constructor(config: RtspConfig = {}) {\n    const { uri, headers, defaultHeaders } = merge(\n      defaultConfig(config.hostname, config.parameters),\n      config\n    )\n\n    const incoming = new Transform({\n      objectMode: true,\n      transform: (msg: Message, _, callback) => {\n        if (msg.type === MessageType.RTSP) {\n          this._onRtsp(msg)\n          callback() // Consumes the RTSP packages\n        } else if (msg.type === MessageType.RTCP) {\n          this._onRtcp(msg)\n          // Execute externally registered SDP handler\n          this.onRtcp && this.onRtcp(msg.rtcp)\n          // Pass SDP forward\n          callback(undefined, msg)\n        } else if (msg.type === MessageType.RTP) {\n          this._onRtp(msg)\n          callback(undefined, msg)\n        } else if (msg.type === MessageType.SDP) {\n          this._onSdp(msg)\n          // Execute externally registered SDP handler\n          this.onSdp && this.onSdp(msg.sdp)\n          // Pass SDP forward\n          callback(undefined, msg)\n        } else {\n          // Not a message we should handle\n          callback(undefined, msg)\n        }\n      },\n    })\n\n    incoming.on('end', () => {\n      // Incoming was ended, assume that outgoing is closed as well\n      this._outgoingClosed = true\n    })\n\n    super(incoming)\n\n    this._outgoingClosed = false\n\n    this._reset()\n    this.update(uri, headers, defaultHeaders)\n\n    this._sessionControlURL = this._controlURL()\n  }\n\n  /**\n   * Update the cached RTSP uri and headers.\n   * @param  uri - The RTSP URI.\n   * @param  headers - Maps commands to headers.\n   * @param  defaultHeaders - Default headers.\n   */\n  update(\n    uri: string | undefined,\n    headers: MethodHeaders = {},\n    defaultHeaders: Headers = {}\n  ) {\n    if (uri === undefined) {\n      throw new Error(\n        'You must supply an uri when creating a RtspSessionComponent'\n      )\n    }\n    this.uri = uri\n    this.defaultHeaders = defaultHeaders\n    this.headers = Object.assign(\n      {\n        [RTSP_METHOD.OPTIONS]: {},\n        [RTSP_METHOD.PLAY]: {},\n        [RTSP_METHOD.SETUP]: { Blocksize: '64000' },\n        [RTSP_METHOD.DESCRIBE]: { Accept: 'application/sdp' },\n        [RTSP_METHOD.PAUSE]: {},\n      },\n      headers\n    )\n  }\n\n  /**\n   * Restore the initial values to the state they were in before any RTSP\n   * connection was made.\n   */\n  _reset() {\n    this._sequence = 1\n    this.retry = () => console.error(\"No request sent, can't retry\")\n    this._callStack = []\n    this._callHistory = []\n    this._state = STATE.IDLE\n    this._waiting = false\n\n    this._contentBase = null\n    this._sessionId = null\n    if (this._renewSessionInterval !== null) {\n      clearInterval(this._renewSessionInterval)\n    }\n    this._renewSessionInterval = null\n\n    this.t0 = undefined\n    this.n0 = undefined\n    this.clockrates = undefined\n  }\n\n  _controlURL(attribute?: string) {\n    if (attribute !== undefined && isAbsolute(attribute)) {\n      return attribute\n    }\n\n    // Not defined or not absolute, we need a base URI\n    const baseURL = this._contentBase ?? this._contentLocation ?? this.uri\n    if (baseURL === null || baseURL === undefined) {\n      throw new Error(\n        'relative or missing control attribute but no base URL available'\n      )\n    }\n    if (attribute === undefined || attribute === '*') {\n      return baseURL\n    }\n    return new URL(attribute, baseURL).href\n  }\n\n  /**\n   * Handles incoming RTSP messages and send the next command in the queue.\n   * @param  msg - An incoming RTSP message.\n   */\n  _onRtsp(msg: RtspMessage) {\n    this._waiting = false\n\n    const status = statusCode(msg.data)\n    const ended = connectionEnded(msg.data)\n    const seq = sequence(msg.data)\n    if (seq === null) {\n      throw new Error('rtsp: expected sequence number')\n    }\n    if (this._callHistory === undefined) {\n      throw new Error('rtsp: internal error')\n    }\n    const method = this._callHistory[seq - 1]\n\n    debug('msl:rtsp:incoming')(`${msg.data}`)\n    if (!this._sessionId && !ended) {\n      // Response on first SETUP\n      this._sessionId = sessionId(msg.data)\n      const _sessionTimeout = sessionTimeout(msg.data)\n      if (_sessionTimeout !== null) {\n        // The server specified that sessions will timeout if not renewed.\n        // In order to keep it alive we need periodically send a RTSP_OPTIONS message\n        if (this._renewSessionInterval !== null) {\n          clearInterval(this._renewSessionInterval)\n        }\n        this._renewSessionInterval = setInterval(\n          () => {\n            this._enqueue({ method: RTSP_METHOD.OPTIONS })\n            this._dequeue()\n          },\n          Math.max(MIN_SESSION_TIMEOUT, _sessionTimeout - 5) * 1000\n        ) as unknown as number\n      }\n    }\n\n    if (!this._contentBase) {\n      this._contentBase = contentBase(msg.data)\n    }\n    if (!this._contentLocation) {\n      this._contentLocation = contentLocation(msg.data)\n    }\n    if (status >= 400) {\n      // TODO: Retry in certain cases?\n      this.onError\n        && this.onError(\n          new RTSPResponseError(msg.data.toString('ascii'), status)\n        )\n    }\n\n    if (method === RTSP_METHOD.PLAY) {\n      // When starting to play, send the actual range to an external handler.\n      this.onPlay && this.onPlay(range(msg.data))\n    }\n\n    if (ended) {\n      debug('msl:rtsp:incoming')(\n        `RTSP Session ${this._sessionId} ended with statusCode: ${status}`\n      )\n      this._sessionId = null\n    }\n\n    this._dequeue()\n  }\n\n  _onRtcp(msg: RtcpMessage) {\n    if (this.t0 === undefined || this.n0 === undefined) {\n      throw new Error('rtsp: internal error')\n    }\n    if (isRtcpSR(msg.rtcp)) {\n      const rtpChannel = msg.channel - 1\n      this.t0[rtpChannel] = msg.rtcp.rtpTimestamp\n      this.n0[rtpChannel] = getTime(msg.rtcp.ntpMost, msg.rtcp.ntpLeast)\n    }\n  }\n\n  _onRtp(msg: RtpMessage) {\n    if (\n      this.t0 === undefined\n      || this.n0 === undefined\n      || this.clockrates === undefined\n    ) {\n      throw new Error('rtsp: internal error')\n    }\n    const rtpChannel = msg.channel\n    const t0 = this.t0[rtpChannel]\n    const n0 = this.n0[rtpChannel]\n    if (typeof t0 !== 'undefined' && typeof n0 !== 'undefined') {\n      const clockrate = this.clockrates[rtpChannel]\n      const t = timestamp(msg.data)\n      // The RTP timestamps are unsigned 32 bit and will overflow\n      // at some point. We can guard against the overflow by ORing with 0,\n      // which will bring any difference back into signed 32-bit domain.\n      const dt = (t - t0) | 0\n      msg.ntpTimestamp = (dt / clockrate) * 1000 + n0\n    }\n  }\n\n  /**\n   * Handles incoming SDP messages, reply with SETUP and optionally PLAY.\n   * @param  msg - An incoming SDP message.\n   */\n  _onSdp(msg: SdpMessage) {\n    this.n0 = {}\n    this.t0 = {}\n    this.clockrates = {}\n\n    this._sessionControlURL = this._controlURL(msg.sdp.session.control)\n\n    msg.sdp.media.forEach((media, index) => {\n      // We should actually be able to handle\n      // non-dynamic payload types, but ignored for now.\n      if (media.rtpmap === undefined) {\n        return\n      }\n      const { clockrate } = media.rtpmap\n\n      const rtp = index * 2\n      const rtcp = rtp + 1\n\n      const uri = media.control === undefined\n        ? this._sessionControlURL\n        : this._controlURL(media.control)\n\n      this._enqueue({\n        method: RTSP_METHOD.SETUP,\n        headers: {\n          Transport: `RTP/AVP/TCP;unicast;interleaved=${rtp}-${rtcp}`,\n        },\n        uri,\n      })\n\n      // TODO: see if we can get rid of this check somehow\n      if (this.clockrates === undefined) {\n        return\n      }\n      this.clockrates[rtp] = clockrate\n    })\n    if (this._state === STATE.PLAYING) {\n      this._enqueue({\n        method: RTSP_METHOD.PLAY,\n        headers: {\n          Range: `npt=${this.startTime || 0}-`,\n        },\n        uri: this._sessionControlURL,\n      })\n    }\n    this._dequeue()\n  }\n\n  /**\n   * Set up command queue in order to start playing, i.e. PLAY optionally\n   * preceeded by OPTIONS/DESCRIBE commands. If not waiting, immediately\n   * start sending.\n   * @param  startTime - Time (seconds) at which to start playing\n   */\n  play(startTime = 0) {\n    if (this._state === STATE.IDLE) {\n      this.startTime = Number(startTime) || 0\n      this._enqueue({ method: RTSP_METHOD.OPTIONS })\n      this._enqueue({ method: RTSP_METHOD.DESCRIBE })\n    } else if (this._state === STATE.PAUSED) {\n      if (this._sessionId === null || this._sessionId === undefined) {\n        throw new Error('rtsp: internal error')\n      }\n      this._enqueue({\n        method: RTSP_METHOD.PLAY,\n        headers: {\n          Session: this._sessionId,\n        },\n        uri: this._sessionControlURL,\n      })\n    }\n    this._state = STATE.PLAYING\n    this._dequeue()\n  }\n\n  /**\n   * Queue a pause command, and send if not waiting.\n   * @return {undefined}\n   */\n  pause() {\n    this._enqueue({ method: RTSP_METHOD.PAUSE })\n    this._state = STATE.PAUSED\n    this._dequeue()\n  }\n\n  /**\n   * End the session if there is one, otherwise just cancel\n   * any outstanding calls on the stack.\n   * @return {undefined}\n   */\n  stop() {\n    if (this._sessionId) {\n      this._enqueue({ method: RTSP_METHOD.TEARDOWN })\n    } else {\n      this._callStack = []\n    }\n    this._state = STATE.IDLE\n    if (this._renewSessionInterval !== null) {\n      clearInterval(this._renewSessionInterval)\n      this._renewSessionInterval = null\n    }\n    this._dequeue()\n  }\n\n  /**\n   * Pushes an RTSP request onto the outgoing stream.\n   * @param  cmd - The details about the command to send.\n   */\n  send(cmd: Command) {\n    const { method, headers, uri } = cmd\n    if (method === undefined) {\n      throw new Error('missing method when send request')\n    }\n    this._waiting = true\n    this.retry = this.send.bind(this, cmd)\n\n    if (\n      this._sequence === undefined\n      || this.headers === undefined\n      || this._callHistory === undefined\n    ) {\n      throw new Error('rtsp: internal error')\n    }\n    const message = Object.assign(\n      {\n        type: MessageType.RTSP,\n        uri: uri || this._sessionControlURL,\n        data: Buffer.alloc(0), // data is a mandatory field. Not used by session -> parser messages.\n      },\n      { method, headers },\n      {\n        headers: Object.assign(\n          { CSeq: this._sequence++ },\n          this.defaultHeaders, // default headers (for all methods)\n          this.headers[method], // preset headers for this method\n          headers // headers that came with the invokation\n        ),\n      }\n    )\n    this._sessionId && (message.headers.Session = this._sessionId)\n    this._callHistory.push(method)\n    if (!this._outgoingClosed) {\n      this.outgoing.push(message)\n    } else {\n      // If the socket is closed, dont attempt to send any data\n      debug('msl:rtsp:outgoing')(`Unable to send ${method}, connection closed`)\n    }\n  }\n\n  /**\n   * Push a command onto the call stack.\n   * @param  cmd - The command to queue\n   */\n  _enqueue(cmd: Command) {\n    if (this._callStack === undefined) {\n      throw new Error('rtsp: internal error')\n    }\n    this._callStack.push(cmd)\n  }\n\n  /**\n   * If possible, send the next command on the call stack.\n   */\n  _dequeue() {\n    if (this._callStack === undefined) {\n      throw new Error('rtsp: internal error')\n    }\n    if (!this._waiting && this._callStack.length > 0) {\n      const cmd = this._callStack.shift()\n      if (cmd !== undefined) {\n        this.send(cmd)\n      }\n    }\n  }\n}\n", "export interface ConfigOptions {\n  [key: string]: any\n}\n\n/**\n * Flat merge of objects, ignoring undefined override values.\n * @param  template - The object with default values\n * @param  override - The object with override values.\n * @return The template object with override merged in.\n */\nexport const merge = <T extends ConfigOptions>(template: T, override: T): T => {\n  let cleanOverride\n  if (override !== undefined) {\n    if (typeof override !== 'object') {\n      throw new Error('merge expects override to be an object!')\n    } else {\n      cleanOverride = Object.keys(override).reduce(\n        (acc: ConfigOptions, key) => {\n          if (override[key] !== undefined) {\n            acc[key] = override[key]\n          }\n          return acc\n        },\n        {}\n      )\n    }\n  }\n  return Object.assign({}, template, cleanOverride)\n}\n", "// NTP is offset from 01.01.1900\nconst NTP_UNIX_EPOCH_OFFSET = Date.UTC(1900, 0, 1)\n\n// Convenience types\nexport type seconds = number\nexport type milliSeconds = number\nexport type NtpSeconds = number\nexport type NtpMilliSeconds = number\n\n/**\n * Convert NTP time to milliseconds since January 1, 1970, 00:00:00 UTC (Unix Epoch)\n * @param ntpMost - Seconds since 01.01.1900\n * @param ntpLeast - Fractions since 01.01.1900\n */\nexport function getTime(ntpMost: number, ntpLeast: number): NtpMilliSeconds {\n  const ntpMilliSeconds = (ntpMost + ntpLeast / 0x100000000) * 1000\n  return NTP_UNIX_EPOCH_OFFSET + ntpMilliSeconds\n}\n", "import debug from 'debug'\n\nimport { Readable, Writable } from 'stream'\n\nimport { Source } from '../component'\nimport { MessageType } from '../message'\n\nimport { openWebSocket, WSConfig } from './openwebsocket'\n\n// Named status codes for CloseEvent, see:\n// https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\nconst CLOSE_GOING_AWAY = 1001\n\nexport class WSSource extends Source {\n  public onServerClose?: () => void\n\n  /**\n   * Create a WebSocket component.\n   *\n   * The constructor sets up two streams and connects them to the socket as\n   * soon as the socket is available (and open).\n   *\n   * @param socket - an open WebSocket.\n   */\n  constructor(socket: WebSocket) {\n    if (socket === undefined) {\n      throw new Error('socket argument missing')\n    }\n\n    /**\n     * Set up an incoming stream and attach it to the socket.\n     * @type {Readable}\n     */\n    const incoming = new Readable({\n      objectMode: true,\n      read() {\n        //\n      },\n    })\n\n    socket.onmessage = (msg) => {\n      const buffer = Buffer.from(msg.data)\n      if (!incoming.push({ data: buffer, type: MessageType.RAW })) {\n        // Something happened down stream that it is no longer processing the\n        // incoming data, and the stream buffer got full. In this case it is\n        // best to just close the socket instead of throwing away data in the\n        // hope that the situation will get resolved.\n        if (socket.readyState === WebSocket.OPEN) {\n          debug('msl:websocket:incoming')('downstream frozen')\n          socket.close()\n        }\n      }\n    }\n\n    // When an error is sent on the incoming stream, close the socket.\n    incoming.on('error', (e) => {\n      console.warn('closing socket due to incoming error', e)\n      socket.close()\n    })\n\n    /**\n     * Set up outgoing stream and attach it to the socket.\n     * @type {Writable}\n     */\n    const outgoing = new Writable({\n      objectMode: true,\n      write(msg, encoding, callback) {\n        try {\n          socket.send(msg.data)\n        } catch (e) {\n          console.warn('message lost during send:', msg)\n        }\n        callback()\n      },\n    })\n\n    // When an error happens on the outgoing stream, just warn.\n    outgoing.on('error', (e) => {\n      console.warn('error during websocket send, ignoring:', e)\n    })\n\n    // When there is no more data going to be written, close!\n    outgoing.on('finish', () => {\n      debug('msl:websocket:outgoing')('finish')\n      if (socket.readyState !== WebSocket.CLOSED) {\n        socket.close()\n      }\n    })\n\n    /**\n     * Handler for when WebSocket is CLOSED\n     * @param  e - The event associated with a close\n     * @param  e.code The status code sent by the server\n     *   Possible codes are documented here:\n     *   https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n     */\n    socket.onclose = (e) => {\n      debug('msl:websocket:close')(`${e.code}`)\n      if (e.code === CLOSE_GOING_AWAY) {\n        this.onServerClose && this.onServerClose()\n      }\n      // Terminate the streams.\n      incoming.push(null)\n      outgoing.end()\n    }\n\n    /**\n     * initialize the component.\n     */\n    super(incoming, outgoing)\n  }\n\n  /**\n   * Expose websocket opener as a class method that returns a promise which\n   * resolves with a new WebSocketComponent.\n   */\n  static async open(config?: WSConfig) {\n    return await openWebSocket(config).then((socket) => new WSSource(socket))\n  }\n}\n", "import { merge } from '../../utils/config'\n\n// Time in milliseconds we want to wait for a websocket to open\nconst WEBSOCKET_TIMEOUT = 10007\n\nexport interface WSConfig {\n  host?: string\n  scheme?: string\n  uri?: string\n  tokenUri?: string\n  protocol?: string\n  timeout?: number\n}\n\n// Default configuration\nconst defaultConfig = (\n  host: string = window.location.host,\n  scheme: string = window.location.protocol\n): WSConfig => {\n  const wsScheme = scheme === 'https:' ? 'wss:' : 'ws:'\n\n  return {\n    uri: `${wsScheme}//${host}/rtsp-over-websocket`,\n    tokenUri: `${scheme}//${host}/axis-cgi/rtspwssession.cgi`,\n    protocol: 'binary',\n    timeout: WEBSOCKET_TIMEOUT,\n  }\n}\n\n/**\n * Open a new WebSocket, fallback to token-auth on failure and retry.\n * @param  [config]  WebSocket configuration.\n * @param  [config.host]  Specify different host\n * @param  [config.sheme]  Specify different scheme.\n * @param  [config.uri]  Full uri for websocket connection\n * @param  [config.tokenUri]  Full uri for token API\n * @param  [config.protocol] Websocket protocol\n * @param  [config.timeout] Websocket connection timeout\n */\nexport const openWebSocket = async (\n  config: WSConfig = {}\n): Promise<WebSocket> => {\n  const { uri, tokenUri, protocol, timeout } = merge(\n    defaultConfig(config.host, config.scheme),\n    config\n  )\n\n  if (uri === undefined) {\n    throw new Error('ws: internal error')\n  }\n\n  return await new Promise((resolve, reject) => {\n    try {\n      const ws = new WebSocket(uri, protocol)\n      const countdown = setTimeout(() => {\n        clearTimeout(countdown)\n        if (ws.readyState === WebSocket.CONNECTING) {\n          ws.onerror = null\n          reject(new Error('websocket connection timed out'))\n        }\n      }, timeout)\n      ws.binaryType = 'arraybuffer'\n      ws.onerror = (originalError: Event) => {\n        clearTimeout(countdown)\n        // try fetching an authentication token\n        function onLoadToken(this: XMLHttpRequest) {\n          if (this.status >= 400) {\n            console.warn('failed to load token', this.status, this.responseText)\n            reject(originalError)\n            return\n          }\n          const token = this.responseText.trim()\n          // We have a token! attempt to open a WebSocket again.\n          const newUri = `${uri}?rtspwssession=${token}`\n          const ws2 = new WebSocket(newUri, protocol)\n          ws2.binaryType = 'arraybuffer'\n          ws2.onerror = (err) => {\n            reject(err)\n          }\n          ws2.onopen = () => resolve(ws2)\n        }\n        const request = new XMLHttpRequest()\n        request.addEventListener('load', onLoadToken)\n        request.addEventListener('error', (err) => {\n          console.warn('failed to get token')\n          reject(err)\n        })\n        request.addEventListener('abort', () => reject(originalError))\n        request.open('GET', `${tokenUri}?${Date.now()}`)\n        try {\n          request.send()\n        } catch (error) {\n          reject(originalError)\n        }\n      }\n      ws.onopen = () => {\n        clearTimeout(countdown)\n        resolve(ws)\n      }\n    } catch (e) {\n      reject(e)\n    }\n  })\n}\n", "export * from './pipeline'\n\nexport * from './rtsp-mjpeg-pipeline'\nexport * from './rtsp-mp4-pipeline'\nexport * from './rtsp-pipeline'\n\nexport * from './html5-canvas-pipeline'\nexport * from './html5-video-metadata-pipeline'\nexport * from './html5-video-pipeline'\nexport * from './metadata-pipeline'\nexport * from './ws-sdp-pipeline'\n\nexport * from './http-mse-pipeline'\n", "import { Component, Sink, Source, Tube } from '../components/component'\n\n/**\n * Pipeline\n *\n * A pipeline is a linked list of components with some convenience methods to\n * handle inserting or removing components from the linked list.\n *\n * A internal set keeps track of which components the pipeline contains, while\n * any order is completely determined by the component's connectedness.\n */\nexport class Pipeline {\n  public firstComponent: Component\n  public lastComponent: Component\n\n  private _set: Set<Component>\n  /**\n   * @param components - The components of the pipeline in order.\n   */\n  constructor(...components: Component[]) {\n    const [car, ...cdr] = components\n\n    this._set = new Set(components)\n\n    this.firstComponent = car\n    this.lastComponent = cdr.reduce((last, component) => {\n      return last.connect(component as Tube | Sink)\n    }, car)\n  }\n\n  /**\n   * @param components - The components of the pipeline in order.\n   */\n  init(...components: Component[]) {\n    const [car, ...cdr] = components\n\n    this._set = new Set(components)\n\n    this.firstComponent = car\n    this.lastComponent = cdr.reduce((last, component) => {\n      return last.connect(component as Tube | Sink)\n    }, car)\n  }\n\n  /**\n   * Inserts a component into the pipeline.\n   *\n   * @param component - Tube or Source behind which to insert a new component.\n   * @param component - Tube or Sink to insert.\n   */\n  insertAfter(component: Source | Tube, newComponent: Tube | Sink) {\n    if (!this._set.has(component)) {\n      throw new Error('insertion point not part of pipeline')\n    }\n    if (this._set.has(newComponent)) {\n      throw new Error('new component already in the pipeline')\n    }\n\n    const cdr = component.next\n    if (cdr === null) {\n      component.connect(newComponent)\n      this.lastComponent = newComponent\n    } else {\n      component.disconnect()\n      component.connect(newComponent).connect(cdr)\n    }\n    this._set.add(newComponent)\n\n    return this\n  }\n\n  /**\n   * Inserts a component into the pipeline.\n   *\n   * @param component - Tube or Sink in front of which to insert a new component.\n   * @param component - Tube or Source to insert.\n   */\n  insertBefore(component: Tube | Sink, newComponent: Source | Tube) {\n    if (!this._set.has(component)) {\n      throw new Error('insertion point not part of pipeline')\n    }\n    if (this._set.has(newComponent)) {\n      throw new Error('new component already in the pipeline')\n    }\n\n    const car = component.prev\n    if (car === null) {\n      newComponent.connect(component)\n      this.firstComponent = newComponent\n    } else {\n      car.disconnect()\n      car.connect(newComponent as Tube).connect(component)\n    }\n    this._set.add(newComponent)\n\n    return this\n  }\n\n  /**\n   * Removes a component from the pipeline.\n   *\n   * @param component - Component to remove.\n   */\n  remove(component: Component) {\n    if (!this._set.has(component)) {\n      throw new Error('component not part of pipeline')\n    }\n\n    const car = component.prev\n    const cdr = component.next\n    if (car === null && cdr === null) {\n      throw new Error('cannot remove last component')\n    } else if (car === null && cdr !== null) {\n      component.disconnect()\n      this.firstComponent = cdr\n    } else if (car !== null && cdr === null) {\n      car.disconnect()\n      this.lastComponent = car\n    } else if (car !== null && cdr !== null) {\n      car.disconnect()\n      // FIXME: upgrade to Typescript 4.5.5\n      // infers component as \"never\" in this case.\n      // Try to revert this with newer TS versions.\n      const cmp = component as unknown as Component\n      cmp.disconnect()\n      car.connect(cdr)\n    }\n    this._set.delete(component)\n\n    return this\n  }\n\n  /**\n   * Inserts a component at the end of the pipeline.\n   *\n   * @param component - Tube or Sink to insert.\n   */\n  append(...components: Array<Tube | Sink>) {\n    components.forEach((component) => {\n      this.insertAfter(this.lastComponent as Source | Tube, component)\n    })\n\n    return this\n  }\n\n  /**\n   * Inserts a component at the beginning of the pipeline.\n   *\n   * @param component - Tube or Source to insert.\n   */\n  prepend(...components: Array<Source | Tube>) {\n    components.forEach((component) => {\n      this.insertBefore(this.firstComponent as Tube | Sink, component)\n    })\n\n    return this\n  }\n}\n", "import { JPEGDepay } from '../components/jpegdepay'\nimport { RtspConfig } from '../components/rtsp-session'\n\nimport { RtspPipeline } from './rtsp-pipeline'\n\n/**\n * RtspMjpegPipeline\n *\n * A pipeline that can process JPEG RTP data, and converts it to streaming\n * motion JPEG format (sequence of JPEG images).\n *\n * The following handlers can be defined:\n * - all handlers from the RtspPipeline\n */\nexport class RtspMjpegPipeline extends RtspPipeline {\n  constructor(rtspConfig?: RtspConfig) {\n    super(rtspConfig)\n\n    const jpegDepay = new JPEGDepay()\n\n    this.append(jpegDepay)\n  }\n}\n", "import { RtspParser } from '../components/rtsp-parser'\nimport { RtspConfig, RtspSession } from '../components/rtsp-session'\nimport { Sdp } from '../utils/protocols/sdp'\n\nimport { Pipeline } from './pipeline'\n\n/**\n * RtspPipeline\n *\n * A pipeline that converts interleaved RTSP/RTP into a series of RTP, RTCP, and\n * RTSP packets.  The pipeline exposes the RTSP session component as\n * `this.session`, and wraps its play, pause and stop methods.\n *\n * The following handlers can be defined:\n * - onSdp: called when the session descript protocol is available, with the SDP\n *   object as argument\n * - onPlay: called when a response from the PLAY command arrives, with the play\n *   range as argument\n */\nexport class RtspPipeline extends Pipeline {\n  public onSdp?: (sdp: Sdp) => void\n  public onPlay?: (range: string[] | undefined) => void\n  public rtsp: RtspSession\n\n  constructor(rtspConfig?: RtspConfig) {\n    const rtspParser = new RtspParser()\n    const rtspSession = new RtspSession(rtspConfig)\n\n    rtspSession.onSdp = (sdp) => {\n      this.onSdp && this.onSdp(sdp)\n    }\n\n    rtspSession.onPlay = (range) => {\n      this.onPlay && this.onPlay(range)\n    }\n\n    super(rtspParser, rtspSession)\n\n    // Expose session for external use\n    this.rtsp = rtspSession\n  }\n}\n", "import { AACDepay } from '../components/aacdepay'\nimport { H264Depay } from '../components/h264depay'\nimport { Mp4Muxer } from '../components/mp4muxer'\nimport { RtspConfig } from '../components/rtsp-session'\n\nimport { RtspPipeline } from './rtsp-pipeline'\n\n/**\n * RtspMp4Pipeline\n *\n * A pipeline that can process H264/AAC RTP data, and converts it to streaming\n * MP4 format (ISO BMFF bytestream).\n *\n * The following handlers can be defined:\n * - all handlers from the RtspPipeline\n * - `onSync`: called when the NTP time of the first frame is known, with the\n *   timestamp as argument (the timestamp is UNIX milliseconds)\n */\nexport class RtspMp4Pipeline extends RtspPipeline {\n  public onSync?: (ntpPresentationTime: number) => void\n\n  private readonly _mp4Muxer: Mp4Muxer\n\n  constructor(rtspConfig?: RtspConfig) {\n    super(rtspConfig)\n\n    const h264Depay = new H264Depay()\n    const aacDepay = new AACDepay()\n    const mp4Muxer = new Mp4Muxer()\n\n    mp4Muxer.onSync = (ntpPresentationTime) => {\n      this.onSync && this.onSync(ntpPresentationTime)\n    }\n\n    this.append(h264Depay, aacDepay, mp4Muxer)\n\n    this._mp4Muxer = mp4Muxer\n  }\n\n  get bitrate() {\n    return this._mp4Muxer.bitrate\n  }\n\n  get framerate() {\n    return this._mp4Muxer.framerate\n  }\n}\n", "import { Auth, AuthConfig } from '../components/auth'\nimport { CanvasSink } from '../components/canvas'\nimport { RtspConfig } from '../components/rtsp-session'\nimport { WSSource } from '../components/ws-source'\nimport { WSConfig } from '../components/ws-source/openwebsocket'\n\nimport { RtspMjpegPipeline } from './rtsp-mjpeg-pipeline'\n\nexport interface Html5CanvasConfig {\n  ws?: WSConfig\n  rtsp?: RtspConfig\n  mediaElement: HTMLCanvasElement\n  auth?: AuthConfig\n}\n\n/**\n * Html5CanvasPipeline\n *\n * A pipeline that connects to an RTSP server over a WebSocket connection and\n * can process JPEG RTP data to produce an motion JPEG data stream that is sent\n * to a HTML canvas element.\n *\n * Handlers that can be set on the pipeline:\n * - all handlers inherited from the RtspMjpegPipeline\n * - `onSync`: called when the NTP time of the first frame is known, with the\n *   timestamp as argument (the timestamp is UNIX milliseconds)\n * - `onServerClose`: called when the WebSocket server closes the connection\n *   (only then, not when the connection is closed in a different way)\n */\nexport class Html5CanvasPipeline extends RtspMjpegPipeline {\n  public onCanplay?: () => void\n  public onSync?: (ntpPresentationTime: number) => void\n  public onServerClose?: () => void\n  public ready: Promise<void>\n\n  private _src?: WSSource\n  private readonly _sink: CanvasSink\n\n  constructor(config: Html5CanvasConfig) {\n    const {\n      ws: wsConfig,\n      rtsp: rtspConfig,\n      mediaElement,\n      auth: authConfig,\n    } = config\n\n    super(rtspConfig)\n\n    if (authConfig) {\n      const auth = new Auth(authConfig)\n      this.insertBefore(this.rtsp, auth)\n    }\n\n    const canvasSink = new CanvasSink(mediaElement)\n    canvasSink.onCanplay = () => {\n      canvasSink.play()\n      this.onCanplay && this.onCanplay()\n    }\n    canvasSink.onSync = (ntpPresentationTime) => {\n      this.onSync && this.onSync(ntpPresentationTime)\n    }\n    this.append(canvasSink)\n    this._sink = canvasSink\n\n    const waitForWs = WSSource.open(wsConfig)\n    this.ready = waitForWs.then((wsSource) => {\n      wsSource.onServerClose = () => {\n        this.onServerClose && this.onServerClose()\n      }\n      this.prepend(wsSource)\n      this._src = wsSource\n    })\n  }\n\n  close() {\n    this.rtsp.stop()\n    this._src && this._src.outgoing.end()\n  }\n\n  get currentTime() {\n    return this._sink.currentTime\n  }\n\n  play() {\n    return this._sink.play()\n  }\n\n  pause() {\n    return this._sink.pause()\n  }\n\n  get bitrate() {\n    return this._sink.bitrate\n  }\n\n  get framerate() {\n    return this._sink.framerate\n  }\n}\n", "import { merge } from '../../utils/config'\nimport { statusCode } from '../../utils/protocols/rtsp'\nimport { Tube } from '../component'\nimport { Message, MessageType, RtspMessage } from '../message'\nimport { createTransform } from '../messageStreams'\n\nimport { DigestAuth } from './digest'\nimport { parseWWWAuthenticate } from './www-authenticate'\n\nconst UNAUTHORIZED = 401\n\nexport interface AuthConfig {\n  username?: string\n  password?: string\n}\n\nconst DEFAULT_CONFIG = {\n  username: 'root',\n  password: 'pass',\n}\n\n/*\n * This component currently only supports Basic authentication\n * It should be placed between the RTSP parser and the RTSP Session.\n */\n\nexport class Auth extends Tube {\n  constructor(config: AuthConfig = {}) {\n    const { username, password } = merge(DEFAULT_CONFIG, config)\n    if (username === undefined || password === undefined) {\n      throw new Error('need username and password')\n    }\n\n    let lastSentMessage: RtspMessage\n    let authHeader: string\n\n    const outgoing = createTransform(function(\n      msg: Message,\n      encoding,\n      callback\n    ) {\n      if (msg.type === MessageType.RTSP) {\n        lastSentMessage = msg\n        if (authHeader && msg.headers) {\n          msg.headers.Authorization = authHeader\n        }\n      }\n\n      callback(undefined, msg)\n    })\n\n    const incoming = createTransform(function(\n      msg: Message,\n      encoding,\n      callback\n    ) {\n      if (\n        msg.type === MessageType.RTSP\n        && statusCode(msg.data) === UNAUTHORIZED\n      ) {\n        const headers = msg.data.toString().split('\\n')\n        const wwwAuth = headers.find((header) => /WWW-Auth/i.test(header))\n        if (wwwAuth === undefined) {\n          throw new Error('cannot find WWW-Authenticate header')\n        }\n        const challenge = parseWWWAuthenticate(wwwAuth)\n        if (challenge.type === 'basic') {\n          authHeader = `Basic ${\n            Buffer.from(`${username}:${password}`).toString(\n              'base64'\n            )\n          }`\n        } else if (challenge.type === 'digest') {\n          const digest = new DigestAuth(challenge.params, username, password)\n          authHeader = digest.authorization(\n            lastSentMessage.method,\n            lastSentMessage.uri\n          )\n        } else {\n          // unkown authentication type, give up\n          return\n        }\n\n        // Retry last RTSP message\n        // Write will fire our outgoing transform function.\n        outgoing.write(lastSentMessage, () => callback())\n      } else {\n        // Not a message we should handle\n        callback(undefined, msg)\n      }\n    })\n\n    super(incoming, outgoing)\n  }\n}\n", "// https://tools.ietf.org/html/rfc2617#section-3.2.1\nimport { Md5 as MD5 } from 'ts-md5'\n\nimport { ChallengeParams } from './www-authenticate'\n\nfunction md5Hash(s: string): string {\n  const hash = new MD5().appendStr(s).end()\n  if (hash === undefined) {\n    throw new Error('empty MD5 hash')\n  }\n  return hash.toString()\n}\n\nexport class DigestAuth {\n  private readonly realm: string\n  private readonly nonce: string\n  private readonly opaque?: string\n  private readonly algorithm?: 'md5' | 'md5-sess'\n  private readonly qop?: 'auth' | 'auth-int'\n  private readonly username: string\n\n  private readonly ha1Base: string\n  private count: number\n\n  constructor(params: ChallengeParams, username: string, password: string) {\n    const realm = params.get('realm')\n    if (realm === undefined) {\n      throw new Error('no realm in digest challenge')\n    }\n    this.realm = realm\n\n    this.ha1Base = md5Hash(`${username}:${realm}:${password}`)\n\n    const nonce = params.get('nonce')\n    if (nonce === undefined) {\n      throw new Error('no nonce in digest challenge')\n    }\n    this.nonce = nonce\n\n    this.opaque = params.get('opaque')\n\n    const algorithm = params.get('algorithm')\n    if (algorithm !== undefined) {\n      if (algorithm === 'md5') {\n        this.algorithm = 'md5'\n      } else if (algorithm === 'md5-sess') {\n        this.algorithm = 'md5-sess'\n      }\n    } else {\n      this.algorithm = 'md5'\n    }\n\n    const qop = params.get('qop')\n    if (qop !== undefined) {\n      const possibleQops = qop.split(',').map((qopType) => qopType.trim())\n      if (possibleQops.some((qopValue) => qopValue === 'auth')) {\n        this.qop = 'auth'\n      } else if (possibleQops.some((qopValue) => qopValue === 'auth-int')) {\n        this.qop = 'auth-int'\n      }\n    }\n\n    this.count = 0\n    this.username = username\n  }\n\n  nc = () => {\n    ;++this.count\n    return this.count.toString(16).padStart(8, '0')\n  }\n\n  cnonce = () => {\n    return new Array(4)\n      .fill(0)\n      .map(() => Math.floor(Math.random() * 256))\n      .map((n) => n.toString(16))\n      .join('')\n  }\n\n  ha1 = (cnonce: string): string => {\n    let ha1 = this.ha1Base\n    if (this.algorithm === 'md5-sess') {\n      ha1 = md5Hash(`${ha1}:${this.nonce}:${cnonce}`)\n    }\n    return ha1\n  }\n\n  ha2 = (method: string, uri: string, body = ''): string => {\n    let ha2 = md5Hash(`${method}:${uri}`)\n    if (this.algorithm === 'md5-sess') {\n      const hbody = md5Hash(body)\n      ha2 = md5Hash(`${method}:${uri}:${hbody}`)\n    }\n    return ha2\n  }\n\n  authorization = (method = 'GET', uri = '', body?: string): string => {\n    // Increase count\n    const nc = this.nc()\n    const cnonce = this.cnonce()\n\n    const ha1 = this.ha1(cnonce)\n    const ha2 = this.ha2(method, uri, body)\n\n    const response = this.qop === undefined\n      ? md5Hash(`${ha1}:${this.nonce}:${ha2}`)\n      : md5Hash(`${ha1}:${this.nonce}:${nc}:${cnonce}:${this.qop}:${ha2}`)\n\n    const authorizationParams: string[] = []\n    authorizationParams.push(`username=\"${this.username}\"`)\n    authorizationParams.push(`realm=\"${this.realm}\"`)\n    authorizationParams.push(`nonce=\"${this.nonce}\"`)\n    authorizationParams.push(`uri=\"${uri}\"`)\n    if (this.qop !== undefined) {\n      authorizationParams.push(`qop=${this.qop}`)\n      authorizationParams.push(`nc=${nc}`)\n      authorizationParams.push(`cnonce=\"${cnonce}\"`)\n    }\n    authorizationParams.push(`response=\"${response}\"`)\n    if (this.opaque !== undefined) {\n      authorizationParams.push(`opaque=\"${this.opaque}\"`)\n    }\n    return `Digest ${authorizationParams.join(', ')}`\n  }\n}\n", "export type ChallengeParams = Map<string, string>\n\nexport interface Challenge {\n  type: string\n  params: ChallengeParams\n}\n\nexport const parseWWWAuthenticate = (header: string): Challenge => {\n  const [, type, ...challenge] = header.split(' ')\n\n  const pairs: Array<[string, string]> = []\n  const re = /\\s*([^=]+)=\"([^\"]*)\",?/gm\n  let match\n  do {\n    match = re.exec(challenge.join(' '))\n    if (match !== null) {\n      const [, key, value] = match\n      pairs.push([key, value])\n    }\n  } while (match !== null)\n\n  const params = new Map(pairs)\n\n  return { type: type.toLowerCase(), params }\n}\n", "import { Tube } from '../components/component'\nimport { MessageType, XmlMessage } from '../components/message'\nimport { ONVIFDepay } from '../components/onvifdepay'\n\nimport { Html5VideoConfig, Html5VideoPipeline } from './html5-video-pipeline'\n\nexport interface Html5VideoMetadataConfig extends Html5VideoConfig {\n  metadataHandler: (msg: XmlMessage) => void\n}\n\n/*\n * Html5VideoPipeline\n *\n * A pipeline that connects to an RTSP server over a WebSocket connection and\n * can process H.264/AAC RTP data to produce an MP4 data stream that is sent to\n * a HTML video element.  Additionally, this pipeline passes XML metadata sent\n * in the same stream to a separate handler.\n *\n * Handlers that can be set on the pipeline:\n * - all handlers inherited from the Html5VideoPipeline\n */\nexport class Html5VideoMetadataPipeline extends Html5VideoPipeline {\n  constructor(config: Html5VideoMetadataConfig) {\n    const { metadataHandler } = config\n\n    super(config)\n\n    const onvifDepay = new ONVIFDepay()\n    this.insertAfter(this.rtsp, onvifDepay)\n\n    const onvifHandlerPipe = Tube.fromHandlers((msg) => {\n      if (msg.type === MessageType.XML) {\n        metadataHandler(msg)\n      }\n    }, undefined)\n    this.insertAfter(onvifDepay, onvifHandlerPipe)\n  }\n}\n", "import { Auth, AuthConfig } from '../components/auth'\nimport { MseSink } from '../components/mse'\nimport { RtspConfig } from '../components/rtsp-session'\nimport { WSSource } from '../components/ws-source'\nimport { WSConfig } from '../components/ws-source/openwebsocket'\nimport { MediaTrack } from '../utils/protocols/isom'\n\nimport { RtspMp4Pipeline } from './rtsp-mp4-pipeline'\n\nexport interface Html5VideoConfig {\n  ws?: WSConfig\n  rtsp?: RtspConfig\n  mediaElement: HTMLVideoElement\n  auth?: AuthConfig\n}\n\n/*\n * Html5VideoPipeline\n *\n * A pipeline that connects to an RTSP server over a WebSocket connection and\n * can process H.264/AAC RTP data to produce an MP4 data stream that is sent to\n * a HTML video element.\n *\n * Handlers that can be set on the pipeline:\n * - all handlers inherited from the RtspMp4Pipeline\n * - `onServerClose`: called when the WebSocket server closes the connection\n *   (only then, not when the connection is closed in a different way)\n */\nexport class Html5VideoPipeline extends RtspMp4Pipeline {\n  public onSourceOpen?: (mse: MediaSource, tracks: MediaTrack[]) => void\n  public onServerClose?: () => void\n  public ready: Promise<void>\n  public tracks?: MediaTrack[]\n\n  private _src?: WSSource\n  private readonly _sink: MseSink\n\n  constructor(config: Html5VideoConfig) {\n    const {\n      ws: wsConfig,\n      rtsp: rtspConfig,\n      mediaElement,\n      auth: authConfig,\n    } = config\n\n    super(rtspConfig)\n\n    if (authConfig) {\n      const auth = new Auth(authConfig)\n      this.insertBefore(this.rtsp, auth)\n    }\n\n    const mseSink = new MseSink(mediaElement)\n    mseSink.onSourceOpen = (mse, tracks) => {\n      this.tracks = tracks\n      this.onSourceOpen && this.onSourceOpen(mse, tracks)\n    }\n    this.append(mseSink)\n    this._sink = mseSink\n\n    const waitForWs = WSSource.open(wsConfig)\n    this.ready = waitForWs.then((wsSource) => {\n      wsSource.onServerClose = () => {\n        this.onServerClose && this.onServerClose()\n      }\n      this.prepend(wsSource)\n      this._src = wsSource\n    })\n  }\n\n  close() {\n    this.rtsp.stop()\n    this._src && this._src.outgoing.end()\n  }\n\n  get currentTime() {\n    return this._sink.currentTime\n  }\n\n  async play() {\n    return await this._sink.play()\n  }\n\n  pause() {\n    return this._sink.pause()\n  }\n}\n", "import { Sink } from '../components/component'\nimport { MessageType, XmlMessage } from '../components/message'\nimport { ONVIFDepay } from '../components/onvifdepay'\nimport { RtspConfig } from '../components/rtsp-session'\nimport { WSSource } from '../components/ws-source'\nimport { WSConfig } from '../components/ws-source/openwebsocket'\n\nimport { RtspPipeline } from './rtsp-pipeline'\n\n// Default configuration for XML event stream\nconst DEFAULT_RTSP_PARAMETERS = {\n  parameters: ['audio=0', 'video=0', 'event=on', 'ptz=all'],\n}\n\nexport interface WsRtspMetadataConfig {\n  ws?: WSConfig\n  rtsp?: RtspConfig\n  metadataHandler: (msg: XmlMessage) => void\n}\n\n/*\n * MetadataPipeline\n *\n * A pipeline that connects to an RTSP server over a WebSocket connection and\n * can process XML RTP data and calls a handler to process the XML messages.\n *\n * Handlers that can be set on the pipeline:\n * - all handlers inherited from the RtspPipeline\n * - `onServerClose`: called when the WebSocket server closes the connection\n *   (only then, not when the connection is closed in a different way)\n */\nexport class MetadataPipeline extends RtspPipeline {\n  public onServerClose?: () => void\n  public ready: Promise<void>\n\n  private _src?: WSSource\n\n  constructor(config: WsRtspMetadataConfig) {\n    const { ws: wsConfig, rtsp: rtspConfig, metadataHandler } = config\n\n    super(Object.assign({}, DEFAULT_RTSP_PARAMETERS, rtspConfig))\n\n    const onvifDepay = new ONVIFDepay()\n    this.append(onvifDepay)\n    const handlerSink = Sink.fromHandler((msg) => {\n      if (msg.type === MessageType.XML) {\n        metadataHandler(msg)\n      }\n    })\n    this.append(handlerSink)\n\n    const waitForWs = WSSource.open(wsConfig)\n    this.ready = waitForWs.then((wsSource) => {\n      wsSource.onServerClose = () => {\n        this.onServerClose && this.onServerClose()\n      }\n      this.prepend(wsSource)\n      this._src = wsSource\n    })\n  }\n\n  close() {\n    this._src && this._src.outgoing.end()\n  }\n}\n", "import { Auth, AuthConfig } from '../components/auth'\nimport { RTSP_METHOD, RtspConfig } from '../components/rtsp-session'\nimport { WSSource } from '../components/ws-source'\nimport { WSConfig } from '../components/ws-source/openwebsocket'\nimport { Sdp } from '../utils/protocols'\n\nimport { RtspPipeline } from './rtsp-pipeline'\n\nexport interface TransformConfig {\n  ws?: WSConfig\n  rtsp?: RtspConfig\n  auth?: AuthConfig\n}\n\n/**\n * WsSdpPipeline\n *\n * Pipeline requesting an SDP object from an RTSP server and then\n * immediately tears down the RTSP session.\n */\nexport class WsSdpPipeline extends RtspPipeline {\n  public onServerClose?: () => void\n  public ready: Promise<void>\n\n  private _src?: WSSource\n\n  constructor(config: TransformConfig) {\n    const { ws: wsConfig, rtsp: rtspConfig, auth: authConfig } = config\n\n    super(rtspConfig)\n\n    if (authConfig) {\n      const auth = new Auth(authConfig)\n      this.insertBefore(this.rtsp, auth)\n    }\n\n    const waitForWs = WSSource.open(wsConfig)\n    this.ready = waitForWs.then((wsSource) => {\n      wsSource.onServerClose = () => {\n        this.onServerClose && this.onServerClose()\n      }\n      this.prepend(wsSource)\n      this._src = wsSource\n    })\n  }\n\n  close() {\n    this._src && this._src.outgoing.end()\n  }\n\n  get sdp() {\n    return this.ready.then(async () => {\n      const sdpPromise = new Promise<Sdp>((resolve) => {\n        this.rtsp.onSdp = resolve\n      })\n      this.rtsp.send({ method: RTSP_METHOD.DESCRIBE })\n      this.rtsp.send({ method: RTSP_METHOD.TEARDOWN })\n      return await sdpPromise\n    })\n  }\n}\n", "import { HttpConfig, HttpMp4Source } from '../components/http-mp4'\nimport { MseSink } from '../components/mse'\n\nimport { Pipeline } from './pipeline'\n\nexport interface HttpMseConfig {\n  http: HttpConfig\n  mediaElement: HTMLVideoElement\n}\n\n/*\n * HttpMsePipeline\n *\n * A pipeline that connects to an HTTP server and can process an MP4 data stream\n * that is then sent to a HTML video element\n *\n * Handlers that can be set on the pipeline:\n * - `onServerClose`: called when the server closes the connection\n */\nexport class HttpMsePipeline extends Pipeline {\n  public onHeaders?: (headers: Headers) => void\n  public onServerClose?: () => void\n  public http: HttpMp4Source\n\n  private readonly _src?: HttpMp4Source\n  private readonly _sink: MseSink\n\n  constructor(config: HttpMseConfig) {\n    const { http: httpConfig, mediaElement } = config\n\n    const httpSource = new HttpMp4Source(httpConfig)\n    const mseSink = new MseSink(mediaElement)\n\n    httpSource.onHeaders = (headers) => {\n      this.onHeaders && this.onHeaders(headers)\n    }\n\n    httpSource.onServerClose = () => this.onServerClose?.()\n\n    super(httpSource, mseSink)\n\n    this._src = httpSource\n    this._sink = mseSink\n\n    // Expose session for external use\n    this.http = httpSource\n  }\n\n  close() {\n    this._src && this._src.abort()\n  }\n\n  get currentTime() {\n    return this._sink.currentTime\n  }\n\n  async play() {\n    return await this._sink.play()\n  }\n\n  pause() {\n    return this._sink.pause()\n  }\n}\n", "import registerDebug from 'debug'\n\nimport { Readable } from 'stream'\n\nimport { Source } from '../component'\nimport { MessageType } from '../message'\n\nconst debug = registerDebug('msl:http-mp4')\n\nexport interface HttpConfig {\n  uri: string\n  options?: RequestInit\n}\n\n/**\n * HttpMp4\n *\n * Stream MP4 data over HTTP/S, and use Axis-specific\n * headers to determine MIME type and stream transformation.\n */\nexport class HttpMp4Source extends Source {\n  public uri: string\n  public options?: RequestInit\n  public length?: number\n  public onHeaders?: (headers: Headers) => void\n  public onServerClose?: () => void\n\n  private _reader?: ReadableStreamDefaultReader<Uint8Array>\n  private _abortController?: AbortController\n  private _allDone: boolean\n\n  /**\n   * Create an HTTP component.\n   *\n   * The constructor sets a single readable stream from a fetch.\n   */\n  constructor(config: HttpConfig) {\n    const { uri, options } = config\n    /**\n     * Set up an incoming stream and attach it to the socket.\n     */\n    const incoming = new Readable({\n      objectMode: true,\n      read() {\n        //\n      },\n    })\n\n    // When an error is sent on the incoming stream, close the socket.\n    incoming.on('error', (e) => {\n      console.warn('closing socket due to incoming error', e)\n      this._reader && this._reader.cancel().catch((err) => console.error(err))\n    })\n\n    /**\n     * initialize the component.\n     */\n    super(incoming)\n\n    // When a read is requested, continue to pull data\n    incoming._read = () => {\n      this._pull()\n    }\n\n    this.uri = uri\n    this.options = options\n    this._allDone = false\n  }\n\n  play(): void {\n    if (this.uri === undefined) {\n      throw new Error('cannot start playing when there is no URI')\n    }\n\n    this._abortController = new AbortController()\n\n    this.length = 0\n    fetch(this.uri, {\n      credentials: 'include',\n      signal: this._abortController.signal,\n      ...this.options,\n    })\n      .then((rsp) => {\n        if (rsp.body === null) {\n          throw new Error('empty response body')\n        }\n\n        const contentType = rsp.headers.get('Content-Type')\n        this.incoming.push({\n          data: Buffer.alloc(0),\n          type: MessageType.ISOM,\n          mime: contentType,\n        })\n\n        this.onHeaders && this.onHeaders(rsp.headers)\n\n        this._reader = rsp.body.getReader()\n        this._pull()\n      })\n      .catch((err) => {\n        console.error('http-source: fetch failed: ', err)\n      })\n  }\n\n  abort(): void {\n    this._reader\n      && this._reader.cancel().catch((err) => {\n        console.log('http-source: cancel reader failed: ', err)\n      })\n    this._abortController && this._abortController.abort()\n  }\n\n  _isClosed(): boolean {\n    return this._allDone\n  }\n\n  _close(): void {\n    this._reader = undefined\n    this._allDone = true\n    this.incoming.push(null)\n    this.onServerClose?.()\n  }\n\n  _pull(): void {\n    if (this._reader === undefined) {\n      return\n    }\n\n    this._reader\n      .read()\n      .then(({ done, value }) => {\n        if (done) {\n          if (!this._isClosed()) {\n            debug('fetch completed, total downloaded: ', this.length, ' bytes')\n            this._close()\n          }\n          return\n        }\n        if (value === undefined) {\n          throw new Error('expected value to be defined')\n        }\n        if (this.length === undefined) {\n          throw new Error('expected length to be defined')\n        }\n        this.length += value.length\n        const buffer = Buffer.from(value)\n        if (!this.incoming.push({ data: buffer, type: MessageType.ISOM })) {\n          // Something happened down stream that it is no longer processing the\n          // incoming data, and the stream buffer got full.\n          // This could be because we are downloading too much data at once,\n          // or because the downstream is frozen. The latter is most likely\n          // when dealing with a live stream (as in that case we would expect\n          // downstream to be able to handle the data).\n          debug('downstream back pressure: pausing read')\n        } else {\n          // It's ok to read more data\n          this._pull()\n        }\n      })\n      .catch((err) => {\n        debug('http-source: read failed: ', err)\n        if (!this._isClosed()) {\n          this._close()\n        }\n      })\n  }\n}\n", "export * from './protocols'\nexport * from './retry'\nexport { Scheduler } from './scheduler'\n", "export * from './ntp'\nexport * from './rtcp'\nexport * from './rtp'\nexport * from './rtsp'\nexport * from './sdp'\n", "import { RtspSession } from '../components/rtsp-session'\n\n/**\n * Retry failed commands.\n *\n * This retries RTSP commands that fails up to a certain\n * limit of times.\n */\nexport const addRTSPRetry = (\n  rtspSession: RtspSession,\n  { maxRetries, errors } = { maxRetries: 20, errors: [503] }\n) => {\n  let retries = 0\n\n  const oldOnError = rtspSession.onError\n\n  rtspSession.onError = (err) => {\n    oldOnError?.(err)\n\n    if (!errors.includes(err.code)) {\n      return\n    }\n\n    // Stop retrying after 20 tries (~20 seconds)\n    if ((retries += 1) > maxRetries) {\n      console.log('retry, too many', retries, maxRetries)\n      return\n    }\n\n    // Retry\n    setTimeout(() => rtspSession.retry?.(), retries * 100)\n  }\n}\n"],
  "mappings": "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",
  "names": ["len", "i", "len2", "Buffer", "i", "byteLength", "range", "process", "e", "marker", "process_browser", "ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "once", "require_buffer", "Buffer", "i", "byteLength", "Buffer", "err", "self", "NodeError", "require_browser", "Writable", "Duplex", "Stream", "Buffer", "realHasInstance", "keys", "Duplex", "Readable", "Writable", "self", "Buffer", "Buffer", "self", "onlegacyfinish", "onfinish", "onend", "onerror", "onclose", "onrequest", "createReadableStreamAsyncIterator", "Readable", "Duplex", "EElistenerCount", "Stream", "Buffer", "debug", "self", "n", "Transform", "Duplex", "PassThrough", "Transform", "Stream", "import_stream", "timestamp", "MessageType", "import_stream", "import_stream", "timestamp", "import_stream", "import_stream", "debug", "import_stream", "timestamp", "import_stream", "type", "width", "height", "precision", "qTable", "import_stream", "debug", "debug", "import_stream", "debug", "payloadType", "timestamp", "debug", "payloadType", "timestamp", "import_stream", "registerDebug", "RTCPPacketType", "SDESItem", "debug", "registerDebug", "import_stream", "import_stream", "debug", "payloadType", "sessionId", "parse", "import_stream", "debug", "RTSP_METHOD", "debug", "import_stream", "debug", "defaultConfig", "debug", "index_browser_exports", "range", "import_stream", "registerDebug", "debug", "registerDebug", "index_browser_exports", "parse"]
}
